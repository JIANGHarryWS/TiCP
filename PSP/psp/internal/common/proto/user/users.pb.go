// Code generated by protoc-gen-go. DO NOT EDIT.
// source: user/users.proto

package user

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/yuansuan/ticp/PSP/psp/internal/common/proto/ptype"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	_ "google.golang.org/protobuf/types/known/timestamppb"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type GetUserRoleNamesResponse struct {
	RoleNames            string   `protobuf:"bytes,1,opt,name=roleNames,proto3" json:"roleNames,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" yaml:"-" xml:"-"`
	XXX_unrecognized     []byte   `json:"-" yaml:"-" xml:"-"`
	XXX_sizecache        int32    `json:"-" yaml:"-" xml:"-"`
}

func (m *GetUserRoleNamesResponse) Reset()         { *m = GetUserRoleNamesResponse{} }
func (m *GetUserRoleNamesResponse) String() string { return proto.CompactTextString(m) }
func (*GetUserRoleNamesResponse) ProtoMessage()    {}
func (*GetUserRoleNamesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_168530bde5c4c3b3, []int{0}
}

func (m *GetUserRoleNamesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetUserRoleNamesResponse.Unmarshal(m, b)
}
func (m *GetUserRoleNamesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetUserRoleNamesResponse.Marshal(b, m, deterministic)
}
func (m *GetUserRoleNamesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetUserRoleNamesResponse.Merge(m, src)
}
func (m *GetUserRoleNamesResponse) XXX_Size() int {
	return xxx_messageInfo_GetUserRoleNamesResponse.Size(m)
}
func (m *GetUserRoleNamesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetUserRoleNamesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetUserRoleNamesResponse proto.InternalMessageInfo

func (m *GetUserRoleNamesResponse) GetRoleNames() string {
	if m != nil {
		return m.RoleNames
	}
	return ""
}

type EnableUserRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Enable               bool     `protobuf:"varint,2,opt,name=enable,proto3" json:"enable,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" yaml:"-" xml:"-"`
	XXX_unrecognized     []byte   `json:"-" yaml:"-" xml:"-"`
	XXX_sizecache        int32    `json:"-" yaml:"-" xml:"-"`
}

func (m *EnableUserRequest) Reset()         { *m = EnableUserRequest{} }
func (m *EnableUserRequest) String() string { return proto.CompactTextString(m) }
func (*EnableUserRequest) ProtoMessage()    {}
func (*EnableUserRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_168530bde5c4c3b3, []int{1}
}

func (m *EnableUserRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EnableUserRequest.Unmarshal(m, b)
}
func (m *EnableUserRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EnableUserRequest.Marshal(b, m, deterministic)
}
func (m *EnableUserRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EnableUserRequest.Merge(m, src)
}
func (m *EnableUserRequest) XXX_Size() int {
	return xxx_messageInfo_EnableUserRequest.Size(m)
}
func (m *EnableUserRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_EnableUserRequest.DiscardUnknown(m)
}

var xxx_messageInfo_EnableUserRequest proto.InternalMessageInfo

func (m *EnableUserRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *EnableUserRequest) GetEnable() bool {
	if m != nil {
		return m.Enable
	}
	return false
}

type UpdateUserRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Email                string   `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
	Mobile               string   `protobuf:"bytes,3,opt,name=mobile,proto3" json:"mobile,omitempty"`
	RoleIds              []int64  `protobuf:"varint,4,rep,packed,name=role_ids,json=roleIds,proto3" json:"role_ids,omitempty"`
	EnableOpenapi        bool     `protobuf:"varint,5,opt,name=enable_openapi,json=enableOpenapi,proto3" json:"enable_openapi,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" yaml:"-" xml:"-"`
	XXX_unrecognized     []byte   `json:"-" yaml:"-" xml:"-"`
	XXX_sizecache        int32    `json:"-" yaml:"-" xml:"-"`
}

func (m *UpdateUserRequest) Reset()         { *m = UpdateUserRequest{} }
func (m *UpdateUserRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateUserRequest) ProtoMessage()    {}
func (*UpdateUserRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_168530bde5c4c3b3, []int{2}
}

func (m *UpdateUserRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateUserRequest.Unmarshal(m, b)
}
func (m *UpdateUserRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateUserRequest.Marshal(b, m, deterministic)
}
func (m *UpdateUserRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateUserRequest.Merge(m, src)
}
func (m *UpdateUserRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateUserRequest.Size(m)
}
func (m *UpdateUserRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateUserRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateUserRequest proto.InternalMessageInfo

func (m *UpdateUserRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *UpdateUserRequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *UpdateUserRequest) GetMobile() string {
	if m != nil {
		return m.Mobile
	}
	return ""
}

func (m *UpdateUserRequest) GetRoleIds() []int64 {
	if m != nil {
		return m.RoleIds
	}
	return nil
}

func (m *UpdateUserRequest) GetEnableOpenapi() bool {
	if m != nil {
		return m.EnableOpenapi
	}
	return false
}

type AddUserWithRoleRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Password             string   `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	Email                string   `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
	Mobile               string   `protobuf:"bytes,4,opt,name=mobile,proto3" json:"mobile,omitempty"`
	RealName             string   `protobuf:"bytes,5,opt,name=real_name,json=realName,proto3" json:"real_name,omitempty"`
	RoleIds              []int64  `protobuf:"varint,6,rep,packed,name=role_ids,json=roleIds,proto3" json:"role_ids,omitempty"`
	EnableOpenapi        bool     `protobuf:"varint,7,opt,name=enable_openapi,json=enableOpenapi,proto3" json:"enable_openapi,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" yaml:"-" xml:"-"`
	XXX_unrecognized     []byte   `json:"-" yaml:"-" xml:"-"`
	XXX_sizecache        int32    `json:"-" yaml:"-" xml:"-"`
}

func (m *AddUserWithRoleRequest) Reset()         { *m = AddUserWithRoleRequest{} }
func (m *AddUserWithRoleRequest) String() string { return proto.CompactTextString(m) }
func (*AddUserWithRoleRequest) ProtoMessage()    {}
func (*AddUserWithRoleRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_168530bde5c4c3b3, []int{3}
}

func (m *AddUserWithRoleRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddUserWithRoleRequest.Unmarshal(m, b)
}
func (m *AddUserWithRoleRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddUserWithRoleRequest.Marshal(b, m, deterministic)
}
func (m *AddUserWithRoleRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddUserWithRoleRequest.Merge(m, src)
}
func (m *AddUserWithRoleRequest) XXX_Size() int {
	return xxx_messageInfo_AddUserWithRoleRequest.Size(m)
}
func (m *AddUserWithRoleRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddUserWithRoleRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddUserWithRoleRequest proto.InternalMessageInfo

func (m *AddUserWithRoleRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *AddUserWithRoleRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *AddUserWithRoleRequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *AddUserWithRoleRequest) GetMobile() string {
	if m != nil {
		return m.Mobile
	}
	return ""
}

func (m *AddUserWithRoleRequest) GetRealName() string {
	if m != nil {
		return m.RealName
	}
	return ""
}

func (m *AddUserWithRoleRequest) GetRoleIds() []int64 {
	if m != nil {
		return m.RoleIds
	}
	return nil
}

func (m *AddUserWithRoleRequest) GetEnableOpenapi() bool {
	if m != nil {
		return m.EnableOpenapi
	}
	return false
}

type GetAllUserRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-" yaml:"-" xml:"-"`
	XXX_unrecognized     []byte   `json:"-" yaml:"-" xml:"-"`
	XXX_sizecache        int32    `json:"-" yaml:"-" xml:"-"`
}

func (m *GetAllUserRequest) Reset()         { *m = GetAllUserRequest{} }
func (m *GetAllUserRequest) String() string { return proto.CompactTextString(m) }
func (*GetAllUserRequest) ProtoMessage()    {}
func (*GetAllUserRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_168530bde5c4c3b3, []int{4}
}

func (m *GetAllUserRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAllUserRequest.Unmarshal(m, b)
}
func (m *GetAllUserRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAllUserRequest.Marshal(b, m, deterministic)
}
func (m *GetAllUserRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAllUserRequest.Merge(m, src)
}
func (m *GetAllUserRequest) XXX_Size() int {
	return xxx_messageInfo_GetAllUserRequest.Size(m)
}
func (m *GetAllUserRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAllUserRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetAllUserRequest proto.InternalMessageInfo

type GetAllUserResponse struct {
	Names                []string `protobuf:"bytes,1,rep,name=names,proto3" json:"names,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" yaml:"-" xml:"-"`
	XXX_unrecognized     []byte   `json:"-" yaml:"-" xml:"-"`
	XXX_sizecache        int32    `json:"-" yaml:"-" xml:"-"`
}

func (m *GetAllUserResponse) Reset()         { *m = GetAllUserResponse{} }
func (m *GetAllUserResponse) String() string { return proto.CompactTextString(m) }
func (*GetAllUserResponse) ProtoMessage()    {}
func (*GetAllUserResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_168530bde5c4c3b3, []int{5}
}

func (m *GetAllUserResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAllUserResponse.Unmarshal(m, b)
}
func (m *GetAllUserResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAllUserResponse.Marshal(b, m, deterministic)
}
func (m *GetAllUserResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAllUserResponse.Merge(m, src)
}
func (m *GetAllUserResponse) XXX_Size() int {
	return xxx_messageInfo_GetAllUserResponse.Size(m)
}
func (m *GetAllUserResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAllUserResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetAllUserResponse proto.InternalMessageInfo

func (m *GetAllUserResponse) GetNames() []string {
	if m != nil {
		return m.Names
	}
	return nil
}

type UserIdentities struct {
	UserIdentities       []*UserIdentity `protobuf:"bytes,1,rep,name=userIdentities,proto3" json:"userIdentities,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-" yaml:"-" xml:"-"`
	XXX_unrecognized     []byte          `json:"-" yaml:"-" xml:"-"`
	XXX_sizecache        int32           `json:"-" yaml:"-" xml:"-"`
}

func (m *UserIdentities) Reset()         { *m = UserIdentities{} }
func (m *UserIdentities) String() string { return proto.CompactTextString(m) }
func (*UserIdentities) ProtoMessage()    {}
func (*UserIdentities) Descriptor() ([]byte, []int) {
	return fileDescriptor_168530bde5c4c3b3, []int{6}
}

func (m *UserIdentities) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserIdentities.Unmarshal(m, b)
}
func (m *UserIdentities) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserIdentities.Marshal(b, m, deterministic)
}
func (m *UserIdentities) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserIdentities.Merge(m, src)
}
func (m *UserIdentities) XXX_Size() int {
	return xxx_messageInfo_UserIdentities.Size(m)
}
func (m *UserIdentities) XXX_DiscardUnknown() {
	xxx_messageInfo_UserIdentities.DiscardUnknown(m)
}

var xxx_messageInfo_UserIdentities proto.InternalMessageInfo

func (m *UserIdentities) GetUserIdentities() []*UserIdentity {
	if m != nil {
		return m.UserIdentities
	}
	return nil
}

type BatchUsersResponse struct {
	Success              bool       `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Total                int64      `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	UserObj              []*UserObj `protobuf:"bytes,3,rep,name=user_obj,json=userObj,proto3" json:"user_obj,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-" yaml:"-" xml:"-"`
	XXX_unrecognized     []byte     `json:"-" yaml:"-" xml:"-"`
	XXX_sizecache        int32      `json:"-" yaml:"-" xml:"-"`
}

func (m *BatchUsersResponse) Reset()         { *m = BatchUsersResponse{} }
func (m *BatchUsersResponse) String() string { return proto.CompactTextString(m) }
func (*BatchUsersResponse) ProtoMessage()    {}
func (*BatchUsersResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_168530bde5c4c3b3, []int{7}
}

func (m *BatchUsersResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BatchUsersResponse.Unmarshal(m, b)
}
func (m *BatchUsersResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BatchUsersResponse.Marshal(b, m, deterministic)
}
func (m *BatchUsersResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BatchUsersResponse.Merge(m, src)
}
func (m *BatchUsersResponse) XXX_Size() int {
	return xxx_messageInfo_BatchUsersResponse.Size(m)
}
func (m *BatchUsersResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_BatchUsersResponse.DiscardUnknown(m)
}

var xxx_messageInfo_BatchUsersResponse proto.InternalMessageInfo

func (m *BatchUsersResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *BatchUsersResponse) GetTotal() int64 {
	if m != nil {
		return m.Total
	}
	return 0
}

func (m *BatchUsersResponse) GetUserObj() []*UserObj {
	if m != nil {
		return m.UserObj
	}
	return nil
}

type NameCondRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" yaml:"-" xml:"-"`
	XXX_unrecognized     []byte   `json:"-" yaml:"-" xml:"-"`
	XXX_sizecache        int32    `json:"-" yaml:"-" xml:"-"`
}

func (m *NameCondRequest) Reset()         { *m = NameCondRequest{} }
func (m *NameCondRequest) String() string { return proto.CompactTextString(m) }
func (*NameCondRequest) ProtoMessage()    {}
func (*NameCondRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_168530bde5c4c3b3, []int{8}
}

func (m *NameCondRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NameCondRequest.Unmarshal(m, b)
}
func (m *NameCondRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NameCondRequest.Marshal(b, m, deterministic)
}
func (m *NameCondRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NameCondRequest.Merge(m, src)
}
func (m *NameCondRequest) XXX_Size() int {
	return xxx_messageInfo_NameCondRequest.Size(m)
}
func (m *NameCondRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_NameCondRequest.DiscardUnknown(m)
}

var xxx_messageInfo_NameCondRequest proto.InternalMessageInfo

func (m *NameCondRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type UserExistResponse struct {
	Exist                bool     `protobuf:"varint,1,opt,name=exist,proto3" json:"exist,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" yaml:"-" xml:"-"`
	XXX_unrecognized     []byte   `json:"-" yaml:"-" xml:"-"`
	XXX_sizecache        int32    `json:"-" yaml:"-" xml:"-"`
}

func (m *UserExistResponse) Reset()         { *m = UserExistResponse{} }
func (m *UserExistResponse) String() string { return proto.CompactTextString(m) }
func (*UserExistResponse) ProtoMessage()    {}
func (*UserExistResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_168530bde5c4c3b3, []int{9}
}

func (m *UserExistResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserExistResponse.Unmarshal(m, b)
}
func (m *UserExistResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserExistResponse.Marshal(b, m, deterministic)
}
func (m *UserExistResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserExistResponse.Merge(m, src)
}
func (m *UserExistResponse) XXX_Size() int {
	return xxx_messageInfo_UserExistResponse.Size(m)
}
func (m *UserExistResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UserExistResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UserExistResponse proto.InternalMessageInfo

func (m *UserExistResponse) GetExist() bool {
	if m != nil {
		return m.Exist
	}
	return false
}

type UserObj struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Email                string   `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
	Mobile               string   `protobuf:"bytes,4,opt,name=mobile,proto3" json:"mobile,omitempty"`
	Enabled              bool     `protobuf:"varint,5,opt,name=enabled,proto3" json:"enabled,omitempty"`
	IsInternal           bool     `protobuf:"varint,6,opt,name=is_internal,json=isInternal,proto3" json:"is_internal,omitempty"`
	CreatedAt            int64    `protobuf:"varint,7,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	AccountId            string   `protobuf:"bytes,8,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	RealName             string   `protobuf:"bytes,9,opt,name=real_name,json=realName,proto3" json:"real_name,omitempty"`
	ApproveStatus        int64    `protobuf:"varint,10,opt,name=approve_status,json=approveStatus,proto3" json:"approve_status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" yaml:"-" xml:"-"`
	XXX_unrecognized     []byte   `json:"-" yaml:"-" xml:"-"`
	XXX_sizecache        int32    `json:"-" yaml:"-" xml:"-"`
}

func (m *UserObj) Reset()         { *m = UserObj{} }
func (m *UserObj) String() string { return proto.CompactTextString(m) }
func (*UserObj) ProtoMessage()    {}
func (*UserObj) Descriptor() ([]byte, []int) {
	return fileDescriptor_168530bde5c4c3b3, []int{10}
}

func (m *UserObj) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserObj.Unmarshal(m, b)
}
func (m *UserObj) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserObj.Marshal(b, m, deterministic)
}
func (m *UserObj) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserObj.Merge(m, src)
}
func (m *UserObj) XXX_Size() int {
	return xxx_messageInfo_UserObj.Size(m)
}
func (m *UserObj) XXX_DiscardUnknown() {
	xxx_messageInfo_UserObj.DiscardUnknown(m)
}

var xxx_messageInfo_UserObj proto.InternalMessageInfo

func (m *UserObj) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *UserObj) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *UserObj) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *UserObj) GetMobile() string {
	if m != nil {
		return m.Mobile
	}
	return ""
}

func (m *UserObj) GetEnabled() bool {
	if m != nil {
		return m.Enabled
	}
	return false
}

func (m *UserObj) GetIsInternal() bool {
	if m != nil {
		return m.IsInternal
	}
	return false
}

func (m *UserObj) GetCreatedAt() int64 {
	if m != nil {
		return m.CreatedAt
	}
	return 0
}

func (m *UserObj) GetAccountId() string {
	if m != nil {
		return m.AccountId
	}
	return ""
}

func (m *UserObj) GetRealName() string {
	if m != nil {
		return m.RealName
	}
	return ""
}

func (m *UserObj) GetApproveStatus() int64 {
	if m != nil {
		return m.ApproveStatus
	}
	return 0
}

type UserIdentity struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" yaml:"-" xml:"-"`
	XXX_unrecognized     []byte   `json:"-" yaml:"-" xml:"-"`
	XXX_sizecache        int32    `json:"-" yaml:"-" xml:"-"`
}

func (m *UserIdentity) Reset()         { *m = UserIdentity{} }
func (m *UserIdentity) String() string { return proto.CompactTextString(m) }
func (*UserIdentity) ProtoMessage()    {}
func (*UserIdentity) Descriptor() ([]byte, []int) {
	return fileDescriptor_168530bde5c4c3b3, []int{11}
}

func (m *UserIdentity) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserIdentity.Unmarshal(m, b)
}
func (m *UserIdentity) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserIdentity.Marshal(b, m, deterministic)
}
func (m *UserIdentity) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserIdentity.Merge(m, src)
}
func (m *UserIdentity) XXX_Size() int {
	return xxx_messageInfo_UserIdentity.Size(m)
}
func (m *UserIdentity) XXX_DiscardUnknown() {
	xxx_messageInfo_UserIdentity.DiscardUnknown(m)
}

var xxx_messageInfo_UserIdentity proto.InternalMessageInfo

func (m *UserIdentity) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func init() {
	proto.RegisterType((*GetUserRoleNamesResponse)(nil), "user.GetUserRoleNamesResponse")
	proto.RegisterType((*EnableUserRequest)(nil), "user.EnableUserRequest")
	proto.RegisterType((*UpdateUserRequest)(nil), "user.UpdateUserRequest")
	proto.RegisterType((*AddUserWithRoleRequest)(nil), "user.AddUserWithRoleRequest")
	proto.RegisterType((*GetAllUserRequest)(nil), "user.GetAllUserRequest")
	proto.RegisterType((*GetAllUserResponse)(nil), "user.GetAllUserResponse")
	proto.RegisterType((*UserIdentities)(nil), "user.UserIdentities")
	proto.RegisterType((*BatchUsersResponse)(nil), "user.BatchUsersResponse")
	proto.RegisterType((*NameCondRequest)(nil), "user.NameCondRequest")
	proto.RegisterType((*UserExistResponse)(nil), "user.UserExistResponse")
	proto.RegisterType((*UserObj)(nil), "user.UserObj")
	proto.RegisterType((*UserIdentity)(nil), "user.UserIdentity")
}

func init() { proto.RegisterFile("user/users.proto", fileDescriptor_168530bde5c4c3b3) }

var fileDescriptor_168530bde5c4c3b3 = []byte{
	// 819 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x55, 0x6d, 0x6f, 0x1b, 0x45,
	0x10, 0xb6, 0x7d, 0x71, 0x6c, 0x4f, 0x1a, 0x37, 0x59, 0x42, 0x38, 0xdc, 0xd2, 0x46, 0x2b, 0x45,
	0x0a, 0x11, 0xb2, 0xa5, 0x22, 0x41, 0x55, 0x3e, 0x94, 0x84, 0x46, 0xc1, 0x12, 0xa2, 0xd2, 0xa1,
	0x0a, 0x89, 0x2f, 0xd6, 0xfa, 0x76, 0x48, 0xb7, 0xba, 0xdb, 0x3d, 0x6e, 0xf7, 0x00, 0xff, 0x0e,
	0xbe, 0xf0, 0xc7, 0xf8, 0x1d, 0xfc, 0x05, 0xb4, 0x2f, 0x57, 0xbf, 0x5d, 0x0c, 0x7c, 0x39, 0xdd,
	0x3c, 0x3b, 0x2f, 0xcf, 0xce, 0xcc, 0xce, 0xc0, 0x51, 0xa5, 0xb1, 0x9c, 0xd8, 0x8f, 0x1e, 0x17,
	0xa5, 0x32, 0x8a, 0xec, 0x59, 0x61, 0x74, 0x54, 0x98, 0x45, 0x81, 0x93, 0x82, 0xdd, 0xa1, 0xc7,
	0x47, 0x8f, 0xee, 0x94, 0xba, 0xcb, 0x70, 0xe2, 0xa4, 0x79, 0xf5, 0xf3, 0x04, 0xf3, 0xc2, 0x2c,
	0xc2, 0xe1, 0xd3, 0xcd, 0x43, 0x23, 0x72, 0xd4, 0x86, 0xe5, 0x85, 0x57, 0xa0, 0xcf, 0x21, 0xbe,
	0x45, 0xf3, 0x46, 0x63, 0x99, 0xa8, 0x0c, 0xbf, 0x67, 0x39, 0xea, 0x04, 0x75, 0xa1, 0xa4, 0x46,
	0xf2, 0x18, 0x06, 0x65, 0x0d, 0xc6, 0xed, 0xb3, 0xf6, 0xc5, 0x20, 0x59, 0x02, 0xf4, 0x2b, 0x38,
	0xbe, 0x91, 0x6c, 0x9e, 0xa1, 0x33, 0xc6, 0x5f, 0x2a, 0xd4, 0x86, 0x0c, 0xa1, 0x23, 0x78, 0xd0,
	0xed, 0x08, 0x4e, 0x4e, 0x61, 0x1f, 0x9d, 0x52, 0xdc, 0x39, 0x6b, 0x5f, 0xf4, 0x93, 0x20, 0xd1,
	0x3f, 0xda, 0x70, 0xfc, 0xa6, 0xe0, 0xcc, 0xec, 0xb4, 0x3e, 0x81, 0x2e, 0xe6, 0x4c, 0x64, 0xce,
	0x78, 0x90, 0x78, 0xc1, 0xfa, 0xcc, 0xd5, 0x5c, 0x64, 0x18, 0x47, 0x0e, 0x0e, 0x12, 0xf9, 0x18,
	0xfa, 0x96, 0xdd, 0x4c, 0x70, 0x1d, 0xef, 0x9d, 0x45, 0x17, 0x51, 0xd2, 0xb3, 0xf2, 0x94, 0x6b,
	0x72, 0x0e, 0x43, 0x1f, 0x78, 0xa6, 0x0a, 0x94, 0xac, 0x10, 0x71, 0xd7, 0xd1, 0x39, 0xf4, 0xe8,
	0x6b, 0x0f, 0xd2, 0xbf, 0xda, 0x70, 0x7a, 0xc5, 0xb9, 0xa5, 0xf4, 0xa3, 0x30, 0x6f, 0x6d, 0x46,
	0x6a, 0x6a, 0x04, 0xf6, 0x24, 0xcb, 0x31, 0x90, 0x73, 0xff, 0x64, 0x04, 0xfd, 0x82, 0x69, 0xfd,
	0x9b, 0x2a, 0x79, 0x60, 0xf8, 0x5e, 0x5e, 0x52, 0x8f, 0x9a, 0xa9, 0xef, 0xad, 0x51, 0x7f, 0x04,
	0x83, 0x12, 0x59, 0x36, 0x73, 0x21, 0xba, 0xde, 0x95, 0x05, 0x6c, 0xa6, 0xd7, 0xee, 0xb5, 0xff,
	0x6f, 0xf7, 0xea, 0x35, 0xdd, 0xeb, 0x03, 0x38, 0xbe, 0x45, 0x73, 0x95, 0x65, 0x2b, 0xc9, 0xa6,
	0x97, 0x40, 0x56, 0xc1, 0x50, 0xf3, 0x13, 0xe8, 0xca, 0x50, 0xef, 0xc8, 0xf2, 0x76, 0x02, 0xfd,
	0x0e, 0x86, 0x56, 0x6b, 0xca, 0x51, 0x1a, 0x61, 0x04, 0x6a, 0xf2, 0x02, 0x86, 0xd5, 0x1a, 0xe2,
	0x0c, 0x0e, 0x9e, 0x91, 0xb1, 0x85, 0xc7, 0x2b, 0xda, 0x8b, 0x64, 0x43, 0x93, 0x4a, 0x20, 0xd7,
	0xcc, 0xa4, 0x6f, 0xad, 0xd2, 0xb2, 0xdb, 0x62, 0xe8, 0xe9, 0x2a, 0x4d, 0x51, 0xfb, 0x5e, 0xeb,
	0x27, 0xb5, 0x68, 0x39, 0x19, 0x65, 0x98, 0x6f, 0x83, 0x28, 0xf1, 0x02, 0xb9, 0x80, 0xbe, 0xf5,
	0x3b, 0x53, 0xf3, 0x77, 0x71, 0xe4, 0x62, 0x1f, 0x2e, 0x63, 0xbf, 0x9e, 0xbf, 0x4b, 0x7a, 0x95,
	0xff, 0xa1, 0xe7, 0xf0, 0xd0, 0x26, 0xf2, 0x1b, 0x25, 0xf9, 0x8e, 0x72, 0xd2, 0x4f, 0xe1, 0xd8,
	0x9a, 0xde, 0xfc, 0x2e, 0xb4, 0x59, 0xcd, 0x07, 0x5a, 0x20, 0x70, 0xf2, 0x02, 0xfd, 0xb3, 0x03,
	0xbd, 0x10, 0x66, 0xab, 0x69, 0x6b, 0xd7, 0x9d, 0x95, 0x4e, 0xf9, 0x7f, 0xdd, 0x10, 0x43, 0xcf,
	0xd7, 0x8f, 0x87, 0x36, 0xad, 0x45, 0xf2, 0x14, 0x0e, 0x84, 0x9e, 0x09, 0x69, 0xb0, 0x94, 0x2c,
	0x8b, 0xf7, 0xdd, 0x29, 0x08, 0x3d, 0x0d, 0x08, 0xf9, 0x04, 0x20, 0x2d, 0x91, 0x19, 0xe4, 0x33,
	0x66, 0x5c, 0x33, 0x44, 0xc9, 0x20, 0x20, 0x57, 0xc6, 0x1e, 0xb3, 0x34, 0x55, 0x95, 0x34, 0x33,
	0xc1, 0xe3, 0xbe, 0x7f, 0xd2, 0x01, 0x99, 0xf2, 0xf5, 0x36, 0x1c, 0x6c, 0xb4, 0xe1, 0x39, 0x0c,
	0x59, 0x51, 0x94, 0xea, 0x57, 0x9c, 0x69, 0xc3, 0x4c, 0xa5, 0x63, 0x70, 0xee, 0x0f, 0x03, 0xfa,
	0x83, 0x03, 0xe9, 0x13, 0x78, 0xb0, 0x5a, 0xfc, 0xcd, 0xf4, 0x3c, 0xfb, 0xbb, 0x0b, 0x5d, 0x57,
	0x78, 0xf2, 0x05, 0x74, 0x5d, 0xae, 0x49, 0x43, 0xcf, 0x8c, 0x3e, 0x5a, 0x62, 0x6b, 0x05, 0xa1,
	0x2d, 0x72, 0x09, 0xd1, 0x2d, 0x36, 0x5b, 0xad, 0x77, 0x00, 0x6d, 0x91, 0xe7, 0xae, 0xf3, 0xa7,
	0x32, 0xcd, 0x2a, 0x8e, 0xaf, 0x30, 0x43, 0x83, 0xfc, 0xbf, 0x59, 0xbe, 0x80, 0x03, 0x6b, 0xc9,
	0xaf, 0x17, 0xee, 0xf6, 0x1f, 0xfa, 0xf3, 0x8d, 0x3e, 0x1a, 0x35, 0xb8, 0xa2, 0x2d, 0xf2, 0x25,
	0x1c, 0x86, 0xa1, 0xba, 0xdb, 0x7a, 0x2b, 0xe8, 0xd7, 0xf0, 0xc0, 0xbd, 0x8c, 0x60, 0x4d, 0x4e,
	0xb6, 0xdc, 0x0b, 0xd4, 0xa3, 0xd8, 0xa3, 0xdb, 0x6f, 0x88, 0xb6, 0xc8, 0x0d, 0x0c, 0x97, 0xaf,
	0xda, 0xc5, 0x0e, 0x99, 0xdc, 0x1a, 0x00, 0xb5, 0x9b, 0xed, 0x21, 0xe0, 0xdc, 0x3c, 0xdc, 0x18,
	0x84, 0xe4, 0xb1, 0x57, 0x6f, 0x9e, 0x8f, 0xf7, 0x24, 0xe2, 0x25, 0xc0, 0x72, 0xca, 0xd7, 0x4c,
	0xb6, 0xe6, 0xfe, 0xe8, 0x74, 0xec, 0xd7, 0xd4, 0xb8, 0x5e, 0x53, 0xe3, 0x1b, 0xbb, 0xc3, 0x5c,
	0x26, 0x7b, 0xaf, 0xd0, 0x91, 0x6b, 0xac, 0xda, 0xfd, 0x86, 0x2f, 0x01, 0x96, 0xdb, 0xa9, 0x8e,
	0xbc, 0xb5, 0xaf, 0x76, 0x38, 0xf8, 0x16, 0x8e, 0x36, 0x17, 0x63, 0x23, 0x85, 0x27, 0xef, 0xb3,
	0xd8, 0xb8, 0x44, 0x69, 0xeb, 0xfa, 0xb3, 0x9f, 0x2e, 0x17, 0x15, 0x93, 0xba, 0x62, 0x72, 0x9c,
	0xca, 0x49, 0xa1, 0x8b, 0x49, 0xfd, 0x82, 0x27, 0xa9, 0xca, 0x73, 0x25, 0xfd, 0x7a, 0x76, 0xdb,
	0x7e, 0xbe, 0xef, 0xfe, 0x3f, 0xff, 0x27, 0x00, 0x00, 0xff, 0xff, 0x39, 0x53, 0x7f, 0xe7, 0x01,
	0x08, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// UsersClient is the client API for Users service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type UsersClient interface {
	Exist(ctx context.Context, in *UserIdentity, opts ...grpc.CallOption) (*UserExistResponse, error)
	Get(ctx context.Context, in *UserIdentity, opts ...grpc.CallOption) (*UserObj, error)
	GetIncludeDeleted(ctx context.Context, in *UserIdentity, opts ...grpc.CallOption) (*UserObj, error)
	GetIdByName(ctx context.Context, in *NameCondRequest, opts ...grpc.CallOption) (*UserIdentity, error)
	GetUserByName(ctx context.Context, in *NameCondRequest, opts ...grpc.CallOption) (*UserObj, error)
	BatchGetUser(ctx context.Context, in *UserIdentities, opts ...grpc.CallOption) (*BatchUsersResponse, error)
	GetAllUserName(ctx context.Context, in *GetAllUserRequest, opts ...grpc.CallOption) (*GetAllUserResponse, error)
	AddUserWithRole(ctx context.Context, in *AddUserWithRoleRequest, opts ...grpc.CallOption) (*UserIdentity, error)
	UpdateUser(ctx context.Context, in *UpdateUserRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
	DelUser(ctx context.Context, in *UserIdentity, opts ...grpc.CallOption) (*emptypb.Empty, error)
	EnableUser(ctx context.Context, in *EnableUserRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
	GetUserRoleNames(ctx context.Context, in *UserIdentity, opts ...grpc.CallOption) (*GetUserRoleNamesResponse, error)
}

type usersClient struct {
	cc *grpc.ClientConn
}

func NewUsersClient(cc *grpc.ClientConn) UsersClient {
	return &usersClient{cc}
}

func (c *usersClient) Exist(ctx context.Context, in *UserIdentity, opts ...grpc.CallOption) (*UserExistResponse, error) {
	out := new(UserExistResponse)
	err := c.cc.Invoke(ctx, "/user.Users/Exist", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *usersClient) Get(ctx context.Context, in *UserIdentity, opts ...grpc.CallOption) (*UserObj, error) {
	out := new(UserObj)
	err := c.cc.Invoke(ctx, "/user.Users/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *usersClient) GetIncludeDeleted(ctx context.Context, in *UserIdentity, opts ...grpc.CallOption) (*UserObj, error) {
	out := new(UserObj)
	err := c.cc.Invoke(ctx, "/user.Users/GetIncludeDeleted", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *usersClient) GetIdByName(ctx context.Context, in *NameCondRequest, opts ...grpc.CallOption) (*UserIdentity, error) {
	out := new(UserIdentity)
	err := c.cc.Invoke(ctx, "/user.Users/GetIdByName", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *usersClient) GetUserByName(ctx context.Context, in *NameCondRequest, opts ...grpc.CallOption) (*UserObj, error) {
	out := new(UserObj)
	err := c.cc.Invoke(ctx, "/user.Users/GetUserByName", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *usersClient) BatchGetUser(ctx context.Context, in *UserIdentities, opts ...grpc.CallOption) (*BatchUsersResponse, error) {
	out := new(BatchUsersResponse)
	err := c.cc.Invoke(ctx, "/user.Users/BatchGetUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *usersClient) GetAllUserName(ctx context.Context, in *GetAllUserRequest, opts ...grpc.CallOption) (*GetAllUserResponse, error) {
	out := new(GetAllUserResponse)
	err := c.cc.Invoke(ctx, "/user.Users/GetAllUserName", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *usersClient) AddUserWithRole(ctx context.Context, in *AddUserWithRoleRequest, opts ...grpc.CallOption) (*UserIdentity, error) {
	out := new(UserIdentity)
	err := c.cc.Invoke(ctx, "/user.Users/AddUserWithRole", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *usersClient) UpdateUser(ctx context.Context, in *UpdateUserRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/user.Users/UpdateUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *usersClient) DelUser(ctx context.Context, in *UserIdentity, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/user.Users/DelUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *usersClient) EnableUser(ctx context.Context, in *EnableUserRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/user.Users/EnableUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *usersClient) GetUserRoleNames(ctx context.Context, in *UserIdentity, opts ...grpc.CallOption) (*GetUserRoleNamesResponse, error) {
	out := new(GetUserRoleNamesResponse)
	err := c.cc.Invoke(ctx, "/user.Users/GetUserRoleNames", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// UsersServer is the server API for Users service.
type UsersServer interface {
	Exist(context.Context, *UserIdentity) (*UserExistResponse, error)
	Get(context.Context, *UserIdentity) (*UserObj, error)
	GetIncludeDeleted(context.Context, *UserIdentity) (*UserObj, error)
	GetIdByName(context.Context, *NameCondRequest) (*UserIdentity, error)
	GetUserByName(context.Context, *NameCondRequest) (*UserObj, error)
	BatchGetUser(context.Context, *UserIdentities) (*BatchUsersResponse, error)
	GetAllUserName(context.Context, *GetAllUserRequest) (*GetAllUserResponse, error)
	AddUserWithRole(context.Context, *AddUserWithRoleRequest) (*UserIdentity, error)
	UpdateUser(context.Context, *UpdateUserRequest) (*emptypb.Empty, error)
	DelUser(context.Context, *UserIdentity) (*emptypb.Empty, error)
	EnableUser(context.Context, *EnableUserRequest) (*emptypb.Empty, error)
	GetUserRoleNames(context.Context, *UserIdentity) (*GetUserRoleNamesResponse, error)
}

// UnimplementedUsersServer can be embedded to have forward compatible implementations.
type UnimplementedUsersServer struct {
}

func (*UnimplementedUsersServer) Exist(ctx context.Context, req *UserIdentity) (*UserExistResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Exist not implemented")
}
func (*UnimplementedUsersServer) Get(ctx context.Context, req *UserIdentity) (*UserObj, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Get not implemented")
}
func (*UnimplementedUsersServer) GetIncludeDeleted(ctx context.Context, req *UserIdentity) (*UserObj, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetIncludeDeleted not implemented")
}
func (*UnimplementedUsersServer) GetIdByName(ctx context.Context, req *NameCondRequest) (*UserIdentity, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetIdByName not implemented")
}
func (*UnimplementedUsersServer) GetUserByName(ctx context.Context, req *NameCondRequest) (*UserObj, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUserByName not implemented")
}
func (*UnimplementedUsersServer) BatchGetUser(ctx context.Context, req *UserIdentities) (*BatchUsersResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BatchGetUser not implemented")
}
func (*UnimplementedUsersServer) GetAllUserName(ctx context.Context, req *GetAllUserRequest) (*GetAllUserResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAllUserName not implemented")
}
func (*UnimplementedUsersServer) AddUserWithRole(ctx context.Context, req *AddUserWithRoleRequest) (*UserIdentity, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddUserWithRole not implemented")
}
func (*UnimplementedUsersServer) UpdateUser(ctx context.Context, req *UpdateUserRequest) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateUser not implemented")
}
func (*UnimplementedUsersServer) DelUser(ctx context.Context, req *UserIdentity) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DelUser not implemented")
}
func (*UnimplementedUsersServer) EnableUser(ctx context.Context, req *EnableUserRequest) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EnableUser not implemented")
}
func (*UnimplementedUsersServer) GetUserRoleNames(ctx context.Context, req *UserIdentity) (*GetUserRoleNamesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUserRoleNames not implemented")
}

func RegisterUsersServer(s *grpc.Server, srv UsersServer) {
	s.RegisterService(&_Users_serviceDesc, srv)
}

func _Users_Exist_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserIdentity)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UsersServer).Exist(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user.Users/Exist",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UsersServer).Exist(ctx, req.(*UserIdentity))
	}
	return interceptor(ctx, in, info, handler)
}

func _Users_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserIdentity)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UsersServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user.Users/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UsersServer).Get(ctx, req.(*UserIdentity))
	}
	return interceptor(ctx, in, info, handler)
}

func _Users_GetIncludeDeleted_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserIdentity)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UsersServer).GetIncludeDeleted(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user.Users/GetIncludeDeleted",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UsersServer).GetIncludeDeleted(ctx, req.(*UserIdentity))
	}
	return interceptor(ctx, in, info, handler)
}

func _Users_GetIdByName_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NameCondRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UsersServer).GetIdByName(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user.Users/GetIdByName",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UsersServer).GetIdByName(ctx, req.(*NameCondRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Users_GetUserByName_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NameCondRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UsersServer).GetUserByName(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user.Users/GetUserByName",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UsersServer).GetUserByName(ctx, req.(*NameCondRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Users_BatchGetUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserIdentities)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UsersServer).BatchGetUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user.Users/BatchGetUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UsersServer).BatchGetUser(ctx, req.(*UserIdentities))
	}
	return interceptor(ctx, in, info, handler)
}

func _Users_GetAllUserName_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAllUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UsersServer).GetAllUserName(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user.Users/GetAllUserName",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UsersServer).GetAllUserName(ctx, req.(*GetAllUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Users_AddUserWithRole_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddUserWithRoleRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UsersServer).AddUserWithRole(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user.Users/AddUserWithRole",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UsersServer).AddUserWithRole(ctx, req.(*AddUserWithRoleRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Users_UpdateUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UsersServer).UpdateUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user.Users/UpdateUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UsersServer).UpdateUser(ctx, req.(*UpdateUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Users_DelUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserIdentity)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UsersServer).DelUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user.Users/DelUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UsersServer).DelUser(ctx, req.(*UserIdentity))
	}
	return interceptor(ctx, in, info, handler)
}

func _Users_EnableUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EnableUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UsersServer).EnableUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user.Users/EnableUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UsersServer).EnableUser(ctx, req.(*EnableUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Users_GetUserRoleNames_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserIdentity)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UsersServer).GetUserRoleNames(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user.Users/GetUserRoleNames",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UsersServer).GetUserRoleNames(ctx, req.(*UserIdentity))
	}
	return interceptor(ctx, in, info, handler)
}

var _Users_serviceDesc = grpc.ServiceDesc{
	ServiceName: "user.Users",
	HandlerType: (*UsersServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Exist",
			Handler:    _Users_Exist_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _Users_Get_Handler,
		},
		{
			MethodName: "GetIncludeDeleted",
			Handler:    _Users_GetIncludeDeleted_Handler,
		},
		{
			MethodName: "GetIdByName",
			Handler:    _Users_GetIdByName_Handler,
		},
		{
			MethodName: "GetUserByName",
			Handler:    _Users_GetUserByName_Handler,
		},
		{
			MethodName: "BatchGetUser",
			Handler:    _Users_BatchGetUser_Handler,
		},
		{
			MethodName: "GetAllUserName",
			Handler:    _Users_GetAllUserName_Handler,
		},
		{
			MethodName: "AddUserWithRole",
			Handler:    _Users_AddUserWithRole_Handler,
		},
		{
			MethodName: "UpdateUser",
			Handler:    _Users_UpdateUser_Handler,
		},
		{
			MethodName: "DelUser",
			Handler:    _Users_DelUser_Handler,
		},
		{
			MethodName: "EnableUser",
			Handler:    _Users_EnableUser_Handler,
		},
		{
			MethodName: "GetUserRoleNames",
			Handler:    _Users_GetUserRoleNames_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "user/users.proto",
}
