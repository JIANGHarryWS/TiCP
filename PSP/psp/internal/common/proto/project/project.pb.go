// Code generated by protoc-gen-go. DO NOT EDIT.
// source: project/project.proto

package project

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type GetMemberProjectsByUserIdRequest struct {
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// 返回是否包括个人项目: default
	IncludeDefault       bool     `protobuf:"varint,2,opt,name=include_default,json=includeDefault,proto3" json:"include_default,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" yaml:"-" xml:"-"`
	XXX_unrecognized     []byte   `json:"-" yaml:"-" xml:"-"`
	XXX_sizecache        int32    `json:"-" yaml:"-" xml:"-"`
}

func (m *GetMemberProjectsByUserIdRequest) Reset()         { *m = GetMemberProjectsByUserIdRequest{} }
func (m *GetMemberProjectsByUserIdRequest) String() string { return proto.CompactTextString(m) }
func (*GetMemberProjectsByUserIdRequest) ProtoMessage()    {}
func (*GetMemberProjectsByUserIdRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2cf0ca921a221351, []int{0}
}

func (m *GetMemberProjectsByUserIdRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetMemberProjectsByUserIdRequest.Unmarshal(m, b)
}
func (m *GetMemberProjectsByUserIdRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetMemberProjectsByUserIdRequest.Marshal(b, m, deterministic)
}
func (m *GetMemberProjectsByUserIdRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetMemberProjectsByUserIdRequest.Merge(m, src)
}
func (m *GetMemberProjectsByUserIdRequest) XXX_Size() int {
	return xxx_messageInfo_GetMemberProjectsByUserIdRequest.Size(m)
}
func (m *GetMemberProjectsByUserIdRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetMemberProjectsByUserIdRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetMemberProjectsByUserIdRequest proto.InternalMessageInfo

func (m *GetMemberProjectsByUserIdRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *GetMemberProjectsByUserIdRequest) GetIncludeDefault() bool {
	if m != nil {
		return m.IncludeDefault
	}
	return false
}

type GetMemberProjectsByUserIdResponse struct {
	Projects             []*MemberProjectObject `protobuf:"bytes,1,rep,name=projects,proto3" json:"projects,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-" yaml:"-" xml:"-"`
	XXX_unrecognized     []byte                 `json:"-" yaml:"-" xml:"-"`
	XXX_sizecache        int32                  `json:"-" yaml:"-" xml:"-"`
}

func (m *GetMemberProjectsByUserIdResponse) Reset()         { *m = GetMemberProjectsByUserIdResponse{} }
func (m *GetMemberProjectsByUserIdResponse) String() string { return proto.CompactTextString(m) }
func (*GetMemberProjectsByUserIdResponse) ProtoMessage()    {}
func (*GetMemberProjectsByUserIdResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2cf0ca921a221351, []int{1}
}

func (m *GetMemberProjectsByUserIdResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetMemberProjectsByUserIdResponse.Unmarshal(m, b)
}
func (m *GetMemberProjectsByUserIdResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetMemberProjectsByUserIdResponse.Marshal(b, m, deterministic)
}
func (m *GetMemberProjectsByUserIdResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetMemberProjectsByUserIdResponse.Merge(m, src)
}
func (m *GetMemberProjectsByUserIdResponse) XXX_Size() int {
	return xxx_messageInfo_GetMemberProjectsByUserIdResponse.Size(m)
}
func (m *GetMemberProjectsByUserIdResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetMemberProjectsByUserIdResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetMemberProjectsByUserIdResponse proto.InternalMessageInfo

func (m *GetMemberProjectsByUserIdResponse) GetProjects() []*MemberProjectObject {
	if m != nil {
		return m.Projects
	}
	return nil
}

type MemberProjectObject struct {
	ProjectId            string   `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	ProjectName          string   `protobuf:"bytes,2,opt,name=project_name,json=projectName,proto3" json:"project_name,omitempty"`
	LinkPath             string   `protobuf:"bytes,3,opt,name=link_path,json=linkPath,proto3" json:"link_path,omitempty"`
	State                string   `protobuf:"bytes,4,opt,name=state,proto3" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" yaml:"-" xml:"-"`
	XXX_unrecognized     []byte   `json:"-" yaml:"-" xml:"-"`
	XXX_sizecache        int32    `json:"-" yaml:"-" xml:"-"`
}

func (m *MemberProjectObject) Reset()         { *m = MemberProjectObject{} }
func (m *MemberProjectObject) String() string { return proto.CompactTextString(m) }
func (*MemberProjectObject) ProtoMessage()    {}
func (*MemberProjectObject) Descriptor() ([]byte, []int) {
	return fileDescriptor_2cf0ca921a221351, []int{2}
}

func (m *MemberProjectObject) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MemberProjectObject.Unmarshal(m, b)
}
func (m *MemberProjectObject) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MemberProjectObject.Marshal(b, m, deterministic)
}
func (m *MemberProjectObject) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MemberProjectObject.Merge(m, src)
}
func (m *MemberProjectObject) XXX_Size() int {
	return xxx_messageInfo_MemberProjectObject.Size(m)
}
func (m *MemberProjectObject) XXX_DiscardUnknown() {
	xxx_messageInfo_MemberProjectObject.DiscardUnknown(m)
}

var xxx_messageInfo_MemberProjectObject proto.InternalMessageInfo

func (m *MemberProjectObject) GetProjectId() string {
	if m != nil {
		return m.ProjectId
	}
	return ""
}

func (m *MemberProjectObject) GetProjectName() string {
	if m != nil {
		return m.ProjectName
	}
	return ""
}

func (m *MemberProjectObject) GetLinkPath() string {
	if m != nil {
		return m.LinkPath
	}
	return ""
}

func (m *MemberProjectObject) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

type ExistsProjectMemberRequest struct {
	UserId               string   `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	ProjectId            string   `protobuf:"bytes,2,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" yaml:"-" xml:"-"`
	XXX_unrecognized     []byte   `json:"-" yaml:"-" xml:"-"`
	XXX_sizecache        int32    `json:"-" yaml:"-" xml:"-"`
}

func (m *ExistsProjectMemberRequest) Reset()         { *m = ExistsProjectMemberRequest{} }
func (m *ExistsProjectMemberRequest) String() string { return proto.CompactTextString(m) }
func (*ExistsProjectMemberRequest) ProtoMessage()    {}
func (*ExistsProjectMemberRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2cf0ca921a221351, []int{3}
}

func (m *ExistsProjectMemberRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExistsProjectMemberRequest.Unmarshal(m, b)
}
func (m *ExistsProjectMemberRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExistsProjectMemberRequest.Marshal(b, m, deterministic)
}
func (m *ExistsProjectMemberRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExistsProjectMemberRequest.Merge(m, src)
}
func (m *ExistsProjectMemberRequest) XXX_Size() int {
	return xxx_messageInfo_ExistsProjectMemberRequest.Size(m)
}
func (m *ExistsProjectMemberRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ExistsProjectMemberRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ExistsProjectMemberRequest proto.InternalMessageInfo

func (m *ExistsProjectMemberRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *ExistsProjectMemberRequest) GetProjectId() string {
	if m != nil {
		return m.ProjectId
	}
	return ""
}

type ExistsProjectMemberResponse struct {
	IsExist              bool     `protobuf:"varint,1,opt,name=is_exist,json=isExist,proto3" json:"is_exist,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" yaml:"-" xml:"-"`
	XXX_unrecognized     []byte   `json:"-" yaml:"-" xml:"-"`
	XXX_sizecache        int32    `json:"-" yaml:"-" xml:"-"`
}

func (m *ExistsProjectMemberResponse) Reset()         { *m = ExistsProjectMemberResponse{} }
func (m *ExistsProjectMemberResponse) String() string { return proto.CompactTextString(m) }
func (*ExistsProjectMemberResponse) ProtoMessage()    {}
func (*ExistsProjectMemberResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2cf0ca921a221351, []int{4}
}

func (m *ExistsProjectMemberResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExistsProjectMemberResponse.Unmarshal(m, b)
}
func (m *ExistsProjectMemberResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExistsProjectMemberResponse.Marshal(b, m, deterministic)
}
func (m *ExistsProjectMemberResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExistsProjectMemberResponse.Merge(m, src)
}
func (m *ExistsProjectMemberResponse) XXX_Size() int {
	return xxx_messageInfo_ExistsProjectMemberResponse.Size(m)
}
func (m *ExistsProjectMemberResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ExistsProjectMemberResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ExistsProjectMemberResponse proto.InternalMessageInfo

func (m *ExistsProjectMemberResponse) GetIsExist() bool {
	if m != nil {
		return m.IsExist
	}
	return false
}

type GetProjectDetailByIdRequest struct {
	ProjectId            string   `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" yaml:"-" xml:"-"`
	XXX_unrecognized     []byte   `json:"-" yaml:"-" xml:"-"`
	XXX_sizecache        int32    `json:"-" yaml:"-" xml:"-"`
}

func (m *GetProjectDetailByIdRequest) Reset()         { *m = GetProjectDetailByIdRequest{} }
func (m *GetProjectDetailByIdRequest) String() string { return proto.CompactTextString(m) }
func (*GetProjectDetailByIdRequest) ProtoMessage()    {}
func (*GetProjectDetailByIdRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2cf0ca921a221351, []int{5}
}

func (m *GetProjectDetailByIdRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetProjectDetailByIdRequest.Unmarshal(m, b)
}
func (m *GetProjectDetailByIdRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetProjectDetailByIdRequest.Marshal(b, m, deterministic)
}
func (m *GetProjectDetailByIdRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetProjectDetailByIdRequest.Merge(m, src)
}
func (m *GetProjectDetailByIdRequest) XXX_Size() int {
	return xxx_messageInfo_GetProjectDetailByIdRequest.Size(m)
}
func (m *GetProjectDetailByIdRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetProjectDetailByIdRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetProjectDetailByIdRequest proto.InternalMessageInfo

func (m *GetProjectDetailByIdRequest) GetProjectId() string {
	if m != nil {
		return m.ProjectId
	}
	return ""
}

type GetProjectsDetailByIdsRequest struct {
	ProjectIds           []string `protobuf:"bytes,1,rep,name=project_ids,json=projectIds,proto3" json:"project_ids,omitempty"`
	IncludeMemberCount   bool     `protobuf:"varint,2,opt,name=include_member_count,json=includeMemberCount,proto3" json:"include_member_count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" yaml:"-" xml:"-"`
	XXX_unrecognized     []byte   `json:"-" yaml:"-" xml:"-"`
	XXX_sizecache        int32    `json:"-" yaml:"-" xml:"-"`
}

func (m *GetProjectsDetailByIdsRequest) Reset()         { *m = GetProjectsDetailByIdsRequest{} }
func (m *GetProjectsDetailByIdsRequest) String() string { return proto.CompactTextString(m) }
func (*GetProjectsDetailByIdsRequest) ProtoMessage()    {}
func (*GetProjectsDetailByIdsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2cf0ca921a221351, []int{6}
}

func (m *GetProjectsDetailByIdsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetProjectsDetailByIdsRequest.Unmarshal(m, b)
}
func (m *GetProjectsDetailByIdsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetProjectsDetailByIdsRequest.Marshal(b, m, deterministic)
}
func (m *GetProjectsDetailByIdsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetProjectsDetailByIdsRequest.Merge(m, src)
}
func (m *GetProjectsDetailByIdsRequest) XXX_Size() int {
	return xxx_messageInfo_GetProjectsDetailByIdsRequest.Size(m)
}
func (m *GetProjectsDetailByIdsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetProjectsDetailByIdsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetProjectsDetailByIdsRequest proto.InternalMessageInfo

func (m *GetProjectsDetailByIdsRequest) GetProjectIds() []string {
	if m != nil {
		return m.ProjectIds
	}
	return nil
}

func (m *GetProjectsDetailByIdsRequest) GetIncludeMemberCount() bool {
	if m != nil {
		return m.IncludeMemberCount
	}
	return false
}

type GetProjectsIdByTimePeriodRequest struct {
	StartTime            int64    `protobuf:"varint,1,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime              int64    `protobuf:"varint,2,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" yaml:"-" xml:"-"`
	XXX_unrecognized     []byte   `json:"-" yaml:"-" xml:"-"`
	XXX_sizecache        int32    `json:"-" yaml:"-" xml:"-"`
}

func (m *GetProjectsIdByTimePeriodRequest) Reset()         { *m = GetProjectsIdByTimePeriodRequest{} }
func (m *GetProjectsIdByTimePeriodRequest) String() string { return proto.CompactTextString(m) }
func (*GetProjectsIdByTimePeriodRequest) ProtoMessage()    {}
func (*GetProjectsIdByTimePeriodRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2cf0ca921a221351, []int{7}
}

func (m *GetProjectsIdByTimePeriodRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetProjectsIdByTimePeriodRequest.Unmarshal(m, b)
}
func (m *GetProjectsIdByTimePeriodRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetProjectsIdByTimePeriodRequest.Marshal(b, m, deterministic)
}
func (m *GetProjectsIdByTimePeriodRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetProjectsIdByTimePeriodRequest.Merge(m, src)
}
func (m *GetProjectsIdByTimePeriodRequest) XXX_Size() int {
	return xxx_messageInfo_GetProjectsIdByTimePeriodRequest.Size(m)
}
func (m *GetProjectsIdByTimePeriodRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetProjectsIdByTimePeriodRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetProjectsIdByTimePeriodRequest proto.InternalMessageInfo

func (m *GetProjectsIdByTimePeriodRequest) GetStartTime() int64 {
	if m != nil {
		return m.StartTime
	}
	return 0
}

func (m *GetProjectsIdByTimePeriodRequest) GetEndTime() int64 {
	if m != nil {
		return m.EndTime
	}
	return 0
}

type GetProjectsIdByTimePeriodResponse struct {
	Projects             []*GetProjectIdByTimePeriodResponse `protobuf:"bytes,1,rep,name=projects,proto3" json:"projects,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                            `json:"-" yaml:"-" xml:"-"`
	XXX_unrecognized     []byte                              `json:"-" yaml:"-" xml:"-"`
	XXX_sizecache        int32                               `json:"-" yaml:"-" xml:"-"`
}

func (m *GetProjectsIdByTimePeriodResponse) Reset()         { *m = GetProjectsIdByTimePeriodResponse{} }
func (m *GetProjectsIdByTimePeriodResponse) String() string { return proto.CompactTextString(m) }
func (*GetProjectsIdByTimePeriodResponse) ProtoMessage()    {}
func (*GetProjectsIdByTimePeriodResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2cf0ca921a221351, []int{8}
}

func (m *GetProjectsIdByTimePeriodResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetProjectsIdByTimePeriodResponse.Unmarshal(m, b)
}
func (m *GetProjectsIdByTimePeriodResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetProjectsIdByTimePeriodResponse.Marshal(b, m, deterministic)
}
func (m *GetProjectsIdByTimePeriodResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetProjectsIdByTimePeriodResponse.Merge(m, src)
}
func (m *GetProjectsIdByTimePeriodResponse) XXX_Size() int {
	return xxx_messageInfo_GetProjectsIdByTimePeriodResponse.Size(m)
}
func (m *GetProjectsIdByTimePeriodResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetProjectsIdByTimePeriodResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetProjectsIdByTimePeriodResponse proto.InternalMessageInfo

func (m *GetProjectsIdByTimePeriodResponse) GetProjects() []*GetProjectIdByTimePeriodResponse {
	if m != nil {
		return m.Projects
	}
	return nil
}

type GetProjectByIdResponse struct {
	ProjectId            string                 `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	ProjectName          string                 `protobuf:"bytes,2,opt,name=project_name,json=projectName,proto3" json:"project_name,omitempty"`
	State                string                 `protobuf:"bytes,3,opt,name=state,proto3" json:"state,omitempty"`
	ProjectOwner         string                 `protobuf:"bytes,4,opt,name=project_owner,json=projectOwner,proto3" json:"project_owner,omitempty"`
	FilePath             string                 `protobuf:"bytes,5,opt,name=file_path,json=filePath,proto3" json:"file_path,omitempty"`
	StartTime            *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime              *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	CreateTime           *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	MemberCount          int64                  `protobuf:"varint,9,opt,name=member_count,json=memberCount,proto3" json:"member_count,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-" yaml:"-" xml:"-"`
	XXX_unrecognized     []byte                 `json:"-" yaml:"-" xml:"-"`
	XXX_sizecache        int32                  `json:"-" yaml:"-" xml:"-"`
}

func (m *GetProjectByIdResponse) Reset()         { *m = GetProjectByIdResponse{} }
func (m *GetProjectByIdResponse) String() string { return proto.CompactTextString(m) }
func (*GetProjectByIdResponse) ProtoMessage()    {}
func (*GetProjectByIdResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2cf0ca921a221351, []int{9}
}

func (m *GetProjectByIdResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetProjectByIdResponse.Unmarshal(m, b)
}
func (m *GetProjectByIdResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetProjectByIdResponse.Marshal(b, m, deterministic)
}
func (m *GetProjectByIdResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetProjectByIdResponse.Merge(m, src)
}
func (m *GetProjectByIdResponse) XXX_Size() int {
	return xxx_messageInfo_GetProjectByIdResponse.Size(m)
}
func (m *GetProjectByIdResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetProjectByIdResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetProjectByIdResponse proto.InternalMessageInfo

func (m *GetProjectByIdResponse) GetProjectId() string {
	if m != nil {
		return m.ProjectId
	}
	return ""
}

func (m *GetProjectByIdResponse) GetProjectName() string {
	if m != nil {
		return m.ProjectName
	}
	return ""
}

func (m *GetProjectByIdResponse) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

func (m *GetProjectByIdResponse) GetProjectOwner() string {
	if m != nil {
		return m.ProjectOwner
	}
	return ""
}

func (m *GetProjectByIdResponse) GetFilePath() string {
	if m != nil {
		return m.FilePath
	}
	return ""
}

func (m *GetProjectByIdResponse) GetStartTime() *timestamppb.Timestamp {
	if m != nil {
		return m.StartTime
	}
	return nil
}

func (m *GetProjectByIdResponse) GetEndTime() *timestamppb.Timestamp {
	if m != nil {
		return m.EndTime
	}
	return nil
}

func (m *GetProjectByIdResponse) GetCreateTime() *timestamppb.Timestamp {
	if m != nil {
		return m.CreateTime
	}
	return nil
}

func (m *GetProjectByIdResponse) GetMemberCount() int64 {
	if m != nil {
		return m.MemberCount
	}
	return 0
}

type GetProjectIdByTimePeriodResponse struct {
	ProjectId            int64                  `protobuf:"varint,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	EndTime              *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-" yaml:"-" xml:"-"`
	XXX_unrecognized     []byte                 `json:"-" yaml:"-" xml:"-"`
	XXX_sizecache        int32                  `json:"-" yaml:"-" xml:"-"`
}

func (m *GetProjectIdByTimePeriodResponse) Reset()         { *m = GetProjectIdByTimePeriodResponse{} }
func (m *GetProjectIdByTimePeriodResponse) String() string { return proto.CompactTextString(m) }
func (*GetProjectIdByTimePeriodResponse) ProtoMessage()    {}
func (*GetProjectIdByTimePeriodResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2cf0ca921a221351, []int{10}
}

func (m *GetProjectIdByTimePeriodResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetProjectIdByTimePeriodResponse.Unmarshal(m, b)
}
func (m *GetProjectIdByTimePeriodResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetProjectIdByTimePeriodResponse.Marshal(b, m, deterministic)
}
func (m *GetProjectIdByTimePeriodResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetProjectIdByTimePeriodResponse.Merge(m, src)
}
func (m *GetProjectIdByTimePeriodResponse) XXX_Size() int {
	return xxx_messageInfo_GetProjectIdByTimePeriodResponse.Size(m)
}
func (m *GetProjectIdByTimePeriodResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetProjectIdByTimePeriodResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetProjectIdByTimePeriodResponse proto.InternalMessageInfo

func (m *GetProjectIdByTimePeriodResponse) GetProjectId() int64 {
	if m != nil {
		return m.ProjectId
	}
	return 0
}

func (m *GetProjectIdByTimePeriodResponse) GetEndTime() *timestamppb.Timestamp {
	if m != nil {
		return m.EndTime
	}
	return nil
}

type GetProjectsByIdsResponse struct {
	Projects             []*GetProjectByIdResponse `protobuf:"bytes,1,rep,name=projects,proto3" json:"projects,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-" yaml:"-" xml:"-"`
	XXX_unrecognized     []byte                    `json:"-" yaml:"-" xml:"-"`
	XXX_sizecache        int32                     `json:"-" yaml:"-" xml:"-"`
}

func (m *GetProjectsByIdsResponse) Reset()         { *m = GetProjectsByIdsResponse{} }
func (m *GetProjectsByIdsResponse) String() string { return proto.CompactTextString(m) }
func (*GetProjectsByIdsResponse) ProtoMessage()    {}
func (*GetProjectsByIdsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2cf0ca921a221351, []int{11}
}

func (m *GetProjectsByIdsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetProjectsByIdsResponse.Unmarshal(m, b)
}
func (m *GetProjectsByIdsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetProjectsByIdsResponse.Marshal(b, m, deterministic)
}
func (m *GetProjectsByIdsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetProjectsByIdsResponse.Merge(m, src)
}
func (m *GetProjectsByIdsResponse) XXX_Size() int {
	return xxx_messageInfo_GetProjectsByIdsResponse.Size(m)
}
func (m *GetProjectsByIdsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetProjectsByIdsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetProjectsByIdsResponse proto.InternalMessageInfo

func (m *GetProjectsByIdsResponse) GetProjects() []*GetProjectByIdResponse {
	if m != nil {
		return m.Projects
	}
	return nil
}

type CheckUserOperatorProjectsPermissionRequest struct {
	UserId               string   `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" yaml:"-" xml:"-"`
	XXX_unrecognized     []byte   `json:"-" yaml:"-" xml:"-"`
	XXX_sizecache        int32    `json:"-" yaml:"-" xml:"-"`
}

func (m *CheckUserOperatorProjectsPermissionRequest) Reset() {
	*m = CheckUserOperatorProjectsPermissionRequest{}
}
func (m *CheckUserOperatorProjectsPermissionRequest) String() string {
	return proto.CompactTextString(m)
}
func (*CheckUserOperatorProjectsPermissionRequest) ProtoMessage() {}
func (*CheckUserOperatorProjectsPermissionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2cf0ca921a221351, []int{12}
}

func (m *CheckUserOperatorProjectsPermissionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CheckUserOperatorProjectsPermissionRequest.Unmarshal(m, b)
}
func (m *CheckUserOperatorProjectsPermissionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CheckUserOperatorProjectsPermissionRequest.Marshal(b, m, deterministic)
}
func (m *CheckUserOperatorProjectsPermissionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckUserOperatorProjectsPermissionRequest.Merge(m, src)
}
func (m *CheckUserOperatorProjectsPermissionRequest) XXX_Size() int {
	return xxx_messageInfo_CheckUserOperatorProjectsPermissionRequest.Size(m)
}
func (m *CheckUserOperatorProjectsPermissionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckUserOperatorProjectsPermissionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CheckUserOperatorProjectsPermissionRequest proto.InternalMessageInfo

func (m *CheckUserOperatorProjectsPermissionRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

type CheckUserOperatorProjectsPermissionResponse struct {
	Pass                 bool     `protobuf:"varint,1,opt,name=pass,proto3" json:"pass,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" yaml:"-" xml:"-"`
	XXX_unrecognized     []byte   `json:"-" yaml:"-" xml:"-"`
	XXX_sizecache        int32    `json:"-" yaml:"-" xml:"-"`
}

func (m *CheckUserOperatorProjectsPermissionResponse) Reset() {
	*m = CheckUserOperatorProjectsPermissionResponse{}
}
func (m *CheckUserOperatorProjectsPermissionResponse) String() string {
	return proto.CompactTextString(m)
}
func (*CheckUserOperatorProjectsPermissionResponse) ProtoMessage() {}
func (*CheckUserOperatorProjectsPermissionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2cf0ca921a221351, []int{13}
}

func (m *CheckUserOperatorProjectsPermissionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CheckUserOperatorProjectsPermissionResponse.Unmarshal(m, b)
}
func (m *CheckUserOperatorProjectsPermissionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CheckUserOperatorProjectsPermissionResponse.Marshal(b, m, deterministic)
}
func (m *CheckUserOperatorProjectsPermissionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckUserOperatorProjectsPermissionResponse.Merge(m, src)
}
func (m *CheckUserOperatorProjectsPermissionResponse) XXX_Size() int {
	return xxx_messageInfo_CheckUserOperatorProjectsPermissionResponse.Size(m)
}
func (m *CheckUserOperatorProjectsPermissionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckUserOperatorProjectsPermissionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CheckUserOperatorProjectsPermissionResponse proto.InternalMessageInfo

func (m *CheckUserOperatorProjectsPermissionResponse) GetPass() bool {
	if m != nil {
		return m.Pass
	}
	return false
}

type GetProjectMemberByProjectIdAndUserIdRequest struct {
	ProjectId            string   `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	UserId               string   `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" yaml:"-" xml:"-"`
	XXX_unrecognized     []byte   `json:"-" yaml:"-" xml:"-"`
	XXX_sizecache        int32    `json:"-" yaml:"-" xml:"-"`
}

func (m *GetProjectMemberByProjectIdAndUserIdRequest) Reset() {
	*m = GetProjectMemberByProjectIdAndUserIdRequest{}
}
func (m *GetProjectMemberByProjectIdAndUserIdRequest) String() string {
	return proto.CompactTextString(m)
}
func (*GetProjectMemberByProjectIdAndUserIdRequest) ProtoMessage() {}
func (*GetProjectMemberByProjectIdAndUserIdRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2cf0ca921a221351, []int{14}
}

func (m *GetProjectMemberByProjectIdAndUserIdRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetProjectMemberByProjectIdAndUserIdRequest.Unmarshal(m, b)
}
func (m *GetProjectMemberByProjectIdAndUserIdRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetProjectMemberByProjectIdAndUserIdRequest.Marshal(b, m, deterministic)
}
func (m *GetProjectMemberByProjectIdAndUserIdRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetProjectMemberByProjectIdAndUserIdRequest.Merge(m, src)
}
func (m *GetProjectMemberByProjectIdAndUserIdRequest) XXX_Size() int {
	return xxx_messageInfo_GetProjectMemberByProjectIdAndUserIdRequest.Size(m)
}
func (m *GetProjectMemberByProjectIdAndUserIdRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetProjectMemberByProjectIdAndUserIdRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetProjectMemberByProjectIdAndUserIdRequest proto.InternalMessageInfo

func (m *GetProjectMemberByProjectIdAndUserIdRequest) GetProjectId() string {
	if m != nil {
		return m.ProjectId
	}
	return ""
}

func (m *GetProjectMemberByProjectIdAndUserIdRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

type GetProjectMemberByProjectIdAndUserIdResponse struct {
	Id                   string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ProjectId            string                 `protobuf:"bytes,2,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	UserId               string                 `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	FilePath             string                 `protobuf:"bytes,4,opt,name=file_path,json=filePath,proto3" json:"file_path,omitempty"`
	CreateTime           *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-" yaml:"-" xml:"-"`
	XXX_unrecognized     []byte                 `json:"-" yaml:"-" xml:"-"`
	XXX_sizecache        int32                  `json:"-" yaml:"-" xml:"-"`
}

func (m *GetProjectMemberByProjectIdAndUserIdResponse) Reset() {
	*m = GetProjectMemberByProjectIdAndUserIdResponse{}
}
func (m *GetProjectMemberByProjectIdAndUserIdResponse) String() string {
	return proto.CompactTextString(m)
}
func (*GetProjectMemberByProjectIdAndUserIdResponse) ProtoMessage() {}
func (*GetProjectMemberByProjectIdAndUserIdResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2cf0ca921a221351, []int{15}
}

func (m *GetProjectMemberByProjectIdAndUserIdResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetProjectMemberByProjectIdAndUserIdResponse.Unmarshal(m, b)
}
func (m *GetProjectMemberByProjectIdAndUserIdResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetProjectMemberByProjectIdAndUserIdResponse.Marshal(b, m, deterministic)
}
func (m *GetProjectMemberByProjectIdAndUserIdResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetProjectMemberByProjectIdAndUserIdResponse.Merge(m, src)
}
func (m *GetProjectMemberByProjectIdAndUserIdResponse) XXX_Size() int {
	return xxx_messageInfo_GetProjectMemberByProjectIdAndUserIdResponse.Size(m)
}
func (m *GetProjectMemberByProjectIdAndUserIdResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetProjectMemberByProjectIdAndUserIdResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetProjectMemberByProjectIdAndUserIdResponse proto.InternalMessageInfo

func (m *GetProjectMemberByProjectIdAndUserIdResponse) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *GetProjectMemberByProjectIdAndUserIdResponse) GetProjectId() string {
	if m != nil {
		return m.ProjectId
	}
	return ""
}

func (m *GetProjectMemberByProjectIdAndUserIdResponse) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *GetProjectMemberByProjectIdAndUserIdResponse) GetFilePath() string {
	if m != nil {
		return m.FilePath
	}
	return ""
}

func (m *GetProjectMemberByProjectIdAndUserIdResponse) GetCreateTime() *timestamppb.Timestamp {
	if m != nil {
		return m.CreateTime
	}
	return nil
}

type GetRunningProjectIdsByTimeRequest struct {
	TimePoint            *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=time_point,json=timePoint,proto3" json:"time_point,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-" yaml:"-" xml:"-"`
	XXX_unrecognized     []byte                 `json:"-" yaml:"-" xml:"-"`
	XXX_sizecache        int32                  `json:"-" yaml:"-" xml:"-"`
}

func (m *GetRunningProjectIdsByTimeRequest) Reset()         { *m = GetRunningProjectIdsByTimeRequest{} }
func (m *GetRunningProjectIdsByTimeRequest) String() string { return proto.CompactTextString(m) }
func (*GetRunningProjectIdsByTimeRequest) ProtoMessage()    {}
func (*GetRunningProjectIdsByTimeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2cf0ca921a221351, []int{16}
}

func (m *GetRunningProjectIdsByTimeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRunningProjectIdsByTimeRequest.Unmarshal(m, b)
}
func (m *GetRunningProjectIdsByTimeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRunningProjectIdsByTimeRequest.Marshal(b, m, deterministic)
}
func (m *GetRunningProjectIdsByTimeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRunningProjectIdsByTimeRequest.Merge(m, src)
}
func (m *GetRunningProjectIdsByTimeRequest) XXX_Size() int {
	return xxx_messageInfo_GetRunningProjectIdsByTimeRequest.Size(m)
}
func (m *GetRunningProjectIdsByTimeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRunningProjectIdsByTimeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetRunningProjectIdsByTimeRequest proto.InternalMessageInfo

func (m *GetRunningProjectIdsByTimeRequest) GetTimePoint() *timestamppb.Timestamp {
	if m != nil {
		return m.TimePoint
	}
	return nil
}

type GetRunningProjectIdsByTimeResponse struct {
	ProjectIds           []int64  `protobuf:"varint,1,rep,packed,name=project_ids,json=projectIds,proto3" json:"project_ids,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" yaml:"-" xml:"-"`
	XXX_unrecognized     []byte   `json:"-" yaml:"-" xml:"-"`
	XXX_sizecache        int32    `json:"-" yaml:"-" xml:"-"`
}

func (m *GetRunningProjectIdsByTimeResponse) Reset()         { *m = GetRunningProjectIdsByTimeResponse{} }
func (m *GetRunningProjectIdsByTimeResponse) String() string { return proto.CompactTextString(m) }
func (*GetRunningProjectIdsByTimeResponse) ProtoMessage()    {}
func (*GetRunningProjectIdsByTimeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2cf0ca921a221351, []int{17}
}

func (m *GetRunningProjectIdsByTimeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRunningProjectIdsByTimeResponse.Unmarshal(m, b)
}
func (m *GetRunningProjectIdsByTimeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRunningProjectIdsByTimeResponse.Marshal(b, m, deterministic)
}
func (m *GetRunningProjectIdsByTimeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRunningProjectIdsByTimeResponse.Merge(m, src)
}
func (m *GetRunningProjectIdsByTimeResponse) XXX_Size() int {
	return xxx_messageInfo_GetRunningProjectIdsByTimeResponse.Size(m)
}
func (m *GetRunningProjectIdsByTimeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRunningProjectIdsByTimeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetRunningProjectIdsByTimeResponse proto.InternalMessageInfo

func (m *GetRunningProjectIdsByTimeResponse) GetProjectIds() []int64 {
	if m != nil {
		return m.ProjectIds
	}
	return nil
}

func init() {
	proto.RegisterType((*GetMemberProjectsByUserIdRequest)(nil), "project.GetMemberProjectsByUserIdRequest")
	proto.RegisterType((*GetMemberProjectsByUserIdResponse)(nil), "project.GetMemberProjectsByUserIdResponse")
	proto.RegisterType((*MemberProjectObject)(nil), "project.MemberProjectObject")
	proto.RegisterType((*ExistsProjectMemberRequest)(nil), "project.ExistsProjectMemberRequest")
	proto.RegisterType((*ExistsProjectMemberResponse)(nil), "project.ExistsProjectMemberResponse")
	proto.RegisterType((*GetProjectDetailByIdRequest)(nil), "project.GetProjectDetailByIdRequest")
	proto.RegisterType((*GetProjectsDetailByIdsRequest)(nil), "project.GetProjectsDetailByIdsRequest")
	proto.RegisterType((*GetProjectsIdByTimePeriodRequest)(nil), "project.GetProjectsIdByTimePeriodRequest")
	proto.RegisterType((*GetProjectsIdByTimePeriodResponse)(nil), "project.GetProjectsIdByTimePeriodResponse")
	proto.RegisterType((*GetProjectByIdResponse)(nil), "project.GetProjectByIdResponse")
	proto.RegisterType((*GetProjectIdByTimePeriodResponse)(nil), "project.GetProjectIdByTimePeriodResponse")
	proto.RegisterType((*GetProjectsByIdsResponse)(nil), "project.GetProjectsByIdsResponse")
	proto.RegisterType((*CheckUserOperatorProjectsPermissionRequest)(nil), "project.CheckUserOperatorProjectsPermissionRequest")
	proto.RegisterType((*CheckUserOperatorProjectsPermissionResponse)(nil), "project.CheckUserOperatorProjectsPermissionResponse")
	proto.RegisterType((*GetProjectMemberByProjectIdAndUserIdRequest)(nil), "project.GetProjectMemberByProjectIdAndUserIdRequest")
	proto.RegisterType((*GetProjectMemberByProjectIdAndUserIdResponse)(nil), "project.GetProjectMemberByProjectIdAndUserIdResponse")
	proto.RegisterType((*GetRunningProjectIdsByTimeRequest)(nil), "project.GetRunningProjectIdsByTimeRequest")
	proto.RegisterType((*GetRunningProjectIdsByTimeResponse)(nil), "project.GetRunningProjectIdsByTimeResponse")
}

func init() { proto.RegisterFile("project/project.proto", fileDescriptor_2cf0ca921a221351) }

var fileDescriptor_2cf0ca921a221351 = []byte{
	// 951 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x57, 0x51, 0x6f, 0xdb, 0x36,
	0x10, 0x8e, 0xec, 0x24, 0xb6, 0xcf, 0x5d, 0x07, 0xb0, 0xd9, 0xe6, 0x2a, 0x2b, 0xe2, 0x30, 0xc1,
	0x96, 0x35, 0x9b, 0x3d, 0xa4, 0x0d, 0xd0, 0xa2, 0x7b, 0xa9, 0xdb, 0xa0, 0xc8, 0xc3, 0x16, 0x43,
	0xc8, 0x30, 0x60, 0xd8, 0x66, 0xc8, 0xd6, 0x25, 0x61, 0x6b, 0x51, 0x9a, 0x48, 0xa1, 0xf5, 0xfb,
	0x9e, 0xf6, 0x38, 0x60, 0xbf, 0x69, 0xaf, 0xfb, 0x49, 0x83, 0x48, 0x4a, 0x96, 0x62, 0xd9, 0x56,
	0xb0, 0x97, 0xc4, 0x22, 0xef, 0xbb, 0xfb, 0x78, 0xfc, 0xee, 0x4e, 0x82, 0x4f, 0xc2, 0x28, 0x78,
	0x8b, 0x13, 0xd9, 0x37, 0xff, 0x7b, 0x61, 0x14, 0xc8, 0x80, 0x34, 0xcc, 0xa3, 0xbd, 0x77, 0x1d,
	0x04, 0xd7, 0x53, 0xec, 0xab, 0xe5, 0x71, 0x7c, 0xd5, 0x97, 0xcc, 0x47, 0x21, 0x5d, 0x3f, 0xd4,
	0x96, 0xd4, 0x83, 0xee, 0x1b, 0x94, 0xdf, 0xa3, 0x3f, 0xc6, 0x68, 0xa8, 0x41, 0x62, 0x30, 0xfb,
	0x51, 0x60, 0x74, 0xee, 0x39, 0xf8, 0x7b, 0x8c, 0x42, 0x92, 0xcf, 0xa0, 0x11, 0x0b, 0x8c, 0x46,
	0xcc, 0xeb, 0x58, 0x5d, 0xeb, 0xa8, 0xe5, 0x6c, 0xc7, 0x6a, 0x9f, 0x7c, 0x09, 0x1f, 0x33, 0x3e,
	0x99, 0xc6, 0x1e, 0x8e, 0x3c, 0xbc, 0x72, 0xe3, 0xa9, 0xec, 0xd4, 0xba, 0xd6, 0x51, 0xd3, 0xb9,
	0x6f, 0x96, 0x5f, 0xeb, 0x55, 0xfa, 0x2b, 0xec, 0xaf, 0x88, 0x22, 0xc2, 0x80, 0x0b, 0x24, 0xcf,
	0xa0, 0x69, 0x68, 0x8b, 0x8e, 0xd5, 0xad, 0x1f, 0xb5, 0x4f, 0x3e, 0xef, 0xa5, 0xc7, 0x2a, 0x40,
	0x2f, 0xc6, 0xc9, 0x5f, 0x27, 0xb3, 0xa6, 0x7f, 0x5a, 0xf0, 0xa0, 0xc4, 0x82, 0x3c, 0x02, 0x30,
	0x36, 0x73, 0xee, 0x2d, 0xb3, 0x72, 0xee, 0x91, 0x7d, 0xb8, 0x97, 0x6e, 0x73, 0xd7, 0x47, 0xc5,
	0xbd, 0xe5, 0xb4, 0xcd, 0xda, 0x0f, 0xae, 0x8f, 0x64, 0x17, 0x5a, 0x53, 0xc6, 0xdf, 0x8d, 0x42,
	0x57, 0xde, 0x74, 0xea, 0x6a, 0xbf, 0x99, 0x2c, 0x0c, 0x5d, 0x79, 0x43, 0x76, 0x60, 0x4b, 0x48,
	0x57, 0x62, 0x67, 0x53, 0x6d, 0xe8, 0x07, 0x7a, 0x09, 0xf6, 0xd9, 0x07, 0x26, 0xa4, 0x30, 0x5c,
	0x34, 0xb1, 0xb5, 0xb9, 0x2c, 0x72, 0xad, 0xdd, 0xe2, 0x4a, 0x9f, 0xc1, 0x6e, 0xa9, 0x57, 0x93,
	0xbb, 0x87, 0xd0, 0x64, 0x62, 0x84, 0x89, 0x85, 0xf2, 0xdb, 0x74, 0x1a, 0x4c, 0x28, 0x00, 0xfd,
	0x0e, 0x76, 0xdf, 0xa0, 0x34, 0xb0, 0xd7, 0x28, 0x5d, 0x36, 0x1d, 0xcc, 0xe6, 0x97, 0xbb, 0x3a,
	0x47, 0x34, 0x82, 0x47, 0x73, 0xb4, 0x98, 0xc3, 0x45, 0x8a, 0xdf, 0x83, 0xf6, 0x1c, 0xaf, 0x2f,
	0xae, 0xe5, 0x40, 0xe6, 0x40, 0x90, 0x6f, 0x61, 0x27, 0x15, 0x89, 0xaf, 0x48, 0x8f, 0x26, 0x41,
	0xcc, 0x53, 0xa5, 0x10, 0xb3, 0xa7, 0xcf, 0xf3, 0x2a, 0xd9, 0xa1, 0xbf, 0x28, 0x4d, 0xa6, 0x31,
	0xcf, 0xbd, 0xc1, 0xec, 0x92, 0xf9, 0x38, 0xc4, 0x88, 0x05, 0x79, 0xda, 0x42, 0xba, 0x91, 0x1c,
	0x25, 0x82, 0x56, 0xb4, 0xeb, 0x4e, 0x4b, 0xad, 0x24, 0xb6, 0x49, 0x3e, 0x90, 0x7b, 0x7a, 0xb3,
	0xa6, 0x36, 0x1b, 0xc8, 0xbd, 0x64, 0x8b, 0xbe, 0x55, 0x5a, 0x5c, 0xe6, 0xdd, 0xe4, 0xf3, 0x6c,
	0x41, 0x8b, 0x5f, 0x65, 0x5a, 0x9c, 0xa3, 0xcb, 0xc1, 0x39, 0x61, 0xfe, 0x51, 0x87, 0x4f, 0xe7,
	0xe6, 0x3a, 0xed, 0x26, 0xc2, 0xff, 0xd7, 0x66, 0x26, 0xbf, 0x7a, 0x4e, 0x7e, 0xe4, 0x00, 0x3e,
	0x4a, 0x81, 0xc1, 0x7b, 0x8e, 0x91, 0x11, 0x67, 0xea, 0xed, 0x22, 0x59, 0x4b, 0x64, 0x7d, 0xc5,
	0xa6, 0xa8, 0x65, 0xbd, 0xa5, 0x65, 0x9d, 0x2c, 0x28, 0x59, 0x3f, 0x2f, 0xa4, 0x76, 0xbb, 0x6b,
	0x1d, 0xb5, 0x4f, 0xec, 0x9e, 0x6e, 0x24, 0xbd, 0xb4, 0x91, 0xf4, 0x2e, 0xd3, 0x46, 0x92, 0x4f,
	0xfb, 0x69, 0x2e, 0xed, 0x8d, 0xb5, 0xc0, 0xf4, 0x4a, 0xc8, 0x0b, 0x68, 0x4f, 0x22, 0x74, 0x25,
	0x6a, 0x64, 0x73, 0x2d, 0x12, 0xb4, 0xb9, 0x02, 0xef, 0xc3, 0xbd, 0x82, 0xae, 0x5a, 0xea, 0xba,
	0xdb, 0x7e, 0x4e, 0x50, 0x1f, 0xf2, 0x82, 0x5a, 0x72, 0xe3, 0x8b, 0xf7, 0x51, 0xcf, 0xdf, 0xc7,
	0xe9, 0x2d, 0x41, 0x55, 0x3b, 0x19, 0xfd, 0x09, 0x3a, 0x39, 0xb1, 0x99, 0xc2, 0x31, 0x11, 0x5f,
	0x2c, 0x68, 0x6c, 0xaf, 0x44, 0x63, 0x79, 0xd1, 0xe4, 0x94, 0x75, 0x06, 0x8f, 0x5f, 0xdd, 0xe0,
	0xe4, 0x5d, 0xd2, 0x43, 0x2f, 0x42, 0x8c, 0x5c, 0x19, 0x64, 0x9d, 0x75, 0x88, 0x91, 0xcf, 0x84,
	0x60, 0x01, 0x5f, 0xd7, 0x75, 0xe8, 0x4b, 0x38, 0xae, 0xe4, 0xc6, 0x50, 0x26, 0xb0, 0x19, 0xba,
	0x42, 0x98, 0x16, 0xa3, 0x7e, 0x53, 0x84, 0xe3, 0x39, 0x5b, 0x5d, 0xc6, 0x83, 0x59, 0x96, 0xeb,
	0x97, 0xdc, 0x2b, 0x0e, 0x93, 0x35, 0xba, 0xcf, 0x31, 0xad, 0x15, 0x98, 0xfe, 0x6b, 0xc1, 0xd7,
	0xd5, 0xe2, 0x18, 0xae, 0xf7, 0xa1, 0x96, 0x05, 0xa8, 0xb1, 0x75, 0x0d, 0x36, 0x1f, 0xb8, 0x5e,
	0x68, 0xcc, 0x85, 0x5a, 0xd9, 0xbc, 0x55, 0x2b, 0xb7, 0x94, 0xbb, 0x75, 0x17, 0xe5, 0xd2, 0xdf,
	0x54, 0x27, 0x72, 0x62, 0xce, 0x19, 0xbf, 0xce, 0x4e, 0x22, 0xb4, 0x3c, 0xd3, 0x7c, 0x3d, 0x07,
	0x48, 0x5c, 0x8f, 0xc2, 0x80, 0x71, 0x59, 0x21, 0x40, 0x2b, 0xb1, 0x1e, 0x26, 0xc6, 0xf4, 0x0c,
	0xe8, 0x2a, 0xff, 0x26, 0x4f, 0x25, 0x0d, 0xbc, 0x9e, 0x6f, 0xe0, 0x27, 0xff, 0x34, 0xa0, 0x61,
	0xd0, 0x44, 0xc2, 0xc3, 0xa5, 0x83, 0x9c, 0x14, 0x5a, 0xe4, 0xca, 0x57, 0x0a, 0xfb, 0x71, 0x15,
	0x53, 0x4d, 0x90, 0x6e, 0x90, 0x31, 0x3c, 0x28, 0x19, 0x7e, 0xe4, 0x20, 0x73, 0xb2, 0x7c, 0xe0,
	0xda, 0x87, 0xab, 0x8d, 0xb2, 0x18, 0x23, 0xd8, 0x29, 0x1b, 0x93, 0xe4, 0xb0, 0xa4, 0x26, 0x17,
	0xa6, 0xa8, 0xbd, 0xae, 0x72, 0xe9, 0x06, 0xc1, 0xfc, 0x28, 0xc8, 0x4f, 0x52, 0xf2, 0x45, 0x09,
	0xb8, 0x64, 0xd4, 0xda, 0xfb, 0x65, 0x76, 0x85, 0x9e, 0x42, 0x37, 0xc8, 0x5f, 0x16, 0x1c, 0x54,
	0x28, 0x69, 0xf2, 0x24, 0x73, 0x56, 0xbd, 0x8f, 0xd8, 0x4f, 0xef, 0x06, 0xca, 0x48, 0xfd, 0x6d,
	0xc1, 0x61, 0x95, 0xe2, 0x25, 0x4f, 0x4b, 0x8e, 0xb8, 0xb6, 0xa7, 0xd8, 0xa7, 0x77, 0x44, 0x65,
	0xbc, 0xb4, 0x9c, 0xcb, 0xdf, 0x05, 0x48, 0xd9, 0xc4, 0x2f, 0x7f, 0x1b, 0x29, 0xca, 0x79, 0xf5,
	0xab, 0x05, 0xdd, 0x20, 0xef, 0xc1, 0x5e, 0x5e, 0x97, 0xa4, 0xe0, 0x6b, 0x75, 0x73, 0xb0, 0x8f,
	0x2b, 0xd9, 0xa6, 0x81, 0x07, 0xfd, 0x9f, 0xbf, 0x99, 0xc5, 0x2e, 0x17, 0xb1, 0xcb, 0x7b, 0x13,
	0xde, 0x0f, 0x45, 0xd8, 0x67, 0x5c, 0x62, 0xc4, 0xdd, 0x69, 0x7f, 0x12, 0xf8, 0x7e, 0xc0, 0xf5,
	0x87, 0x42, 0xfa, 0x35, 0x31, 0xde, 0x56, 0x8f, 0x4f, 0xfe, 0x0b, 0x00, 0x00, 0xff, 0xff, 0x77,
	0x94, 0x19, 0x1b, 0x67, 0x0c, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ProjectClient is the client API for Project service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ProjectClient interface {
	// GetMemberProjectsByUserId 根据成员id获取所属项目列表
	GetMemberProjectsByUserId(ctx context.Context, in *GetMemberProjectsByUserIdRequest, opts ...grpc.CallOption) (*GetMemberProjectsByUserIdResponse, error)
	// ExistsProjectMember 指定项目是否存在userID 用户
	ExistsProjectMember(ctx context.Context, in *ExistsProjectMemberRequest, opts ...grpc.CallOption) (*ExistsProjectMemberResponse, error)
	// GetProjectDetailById 根据projectId 获取项目详情
	GetProjectDetailById(ctx context.Context, in *GetProjectDetailByIdRequest, opts ...grpc.CallOption) (*GetProjectByIdResponse, error)
	// GetProjectsDetailByIds 根据projectIds 批量获取多个项目详情
	GetProjectsDetailByIds(ctx context.Context, in *GetProjectsDetailByIdsRequest, opts ...grpc.CallOption) (*GetProjectsByIdsResponse, error)
	// CheckUserOperatorProjectsPermission 根据用户 ID 检查是否可以管理项目
	CheckUserOperatorProjectsPermission(ctx context.Context, in *CheckUserOperatorProjectsPermissionRequest, opts ...grpc.CallOption) (*CheckUserOperatorProjectsPermissionResponse, error)
	// GetProjectMemberByProjectIdAndUserId 根据项目id 和 用户id 查询项目成员信息
	GetProjectMemberByProjectIdAndUserId(ctx context.Context, in *GetProjectMemberByProjectIdAndUserIdRequest, opts ...grpc.CallOption) (*GetProjectMemberByProjectIdAndUserIdResponse, error)
	// GetProjectsIdByTimePeriod 根据起始时间和终止时间查询项目
	GetProjectsIdByTimePeriod(ctx context.Context, in *GetProjectsIdByTimePeriodRequest, opts ...grpc.CallOption) (*GetProjectsIdByTimePeriodResponse, error)
	// GetRunningProjectIdsByTime 查询某个时间点正在运行的项目列表
	GetRunningProjectIdsByTime(ctx context.Context, in *GetRunningProjectIdsByTimeRequest, opts ...grpc.CallOption) (*GetRunningProjectIdsByTimeResponse, error)
}

type projectClient struct {
	cc *grpc.ClientConn
}

func NewProjectClient(cc *grpc.ClientConn) ProjectClient {
	return &projectClient{cc}
}

func (c *projectClient) GetMemberProjectsByUserId(ctx context.Context, in *GetMemberProjectsByUserIdRequest, opts ...grpc.CallOption) (*GetMemberProjectsByUserIdResponse, error) {
	out := new(GetMemberProjectsByUserIdResponse)
	err := c.cc.Invoke(ctx, "/project.Project/GetMemberProjectsByUserId", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *projectClient) ExistsProjectMember(ctx context.Context, in *ExistsProjectMemberRequest, opts ...grpc.CallOption) (*ExistsProjectMemberResponse, error) {
	out := new(ExistsProjectMemberResponse)
	err := c.cc.Invoke(ctx, "/project.Project/ExistsProjectMember", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *projectClient) GetProjectDetailById(ctx context.Context, in *GetProjectDetailByIdRequest, opts ...grpc.CallOption) (*GetProjectByIdResponse, error) {
	out := new(GetProjectByIdResponse)
	err := c.cc.Invoke(ctx, "/project.Project/GetProjectDetailById", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *projectClient) GetProjectsDetailByIds(ctx context.Context, in *GetProjectsDetailByIdsRequest, opts ...grpc.CallOption) (*GetProjectsByIdsResponse, error) {
	out := new(GetProjectsByIdsResponse)
	err := c.cc.Invoke(ctx, "/project.Project/GetProjectsDetailByIds", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *projectClient) CheckUserOperatorProjectsPermission(ctx context.Context, in *CheckUserOperatorProjectsPermissionRequest, opts ...grpc.CallOption) (*CheckUserOperatorProjectsPermissionResponse, error) {
	out := new(CheckUserOperatorProjectsPermissionResponse)
	err := c.cc.Invoke(ctx, "/project.Project/CheckUserOperatorProjectsPermission", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *projectClient) GetProjectMemberByProjectIdAndUserId(ctx context.Context, in *GetProjectMemberByProjectIdAndUserIdRequest, opts ...grpc.CallOption) (*GetProjectMemberByProjectIdAndUserIdResponse, error) {
	out := new(GetProjectMemberByProjectIdAndUserIdResponse)
	err := c.cc.Invoke(ctx, "/project.Project/GetProjectMemberByProjectIdAndUserId", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *projectClient) GetProjectsIdByTimePeriod(ctx context.Context, in *GetProjectsIdByTimePeriodRequest, opts ...grpc.CallOption) (*GetProjectsIdByTimePeriodResponse, error) {
	out := new(GetProjectsIdByTimePeriodResponse)
	err := c.cc.Invoke(ctx, "/project.Project/GetProjectsIdByTimePeriod", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *projectClient) GetRunningProjectIdsByTime(ctx context.Context, in *GetRunningProjectIdsByTimeRequest, opts ...grpc.CallOption) (*GetRunningProjectIdsByTimeResponse, error) {
	out := new(GetRunningProjectIdsByTimeResponse)
	err := c.cc.Invoke(ctx, "/project.Project/GetRunningProjectIdsByTime", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ProjectServer is the server API for Project service.
type ProjectServer interface {
	// GetMemberProjectsByUserId 根据成员id获取所属项目列表
	GetMemberProjectsByUserId(context.Context, *GetMemberProjectsByUserIdRequest) (*GetMemberProjectsByUserIdResponse, error)
	// ExistsProjectMember 指定项目是否存在userID 用户
	ExistsProjectMember(context.Context, *ExistsProjectMemberRequest) (*ExistsProjectMemberResponse, error)
	// GetProjectDetailById 根据projectId 获取项目详情
	GetProjectDetailById(context.Context, *GetProjectDetailByIdRequest) (*GetProjectByIdResponse, error)
	// GetProjectsDetailByIds 根据projectIds 批量获取多个项目详情
	GetProjectsDetailByIds(context.Context, *GetProjectsDetailByIdsRequest) (*GetProjectsByIdsResponse, error)
	// CheckUserOperatorProjectsPermission 根据用户 ID 检查是否可以管理项目
	CheckUserOperatorProjectsPermission(context.Context, *CheckUserOperatorProjectsPermissionRequest) (*CheckUserOperatorProjectsPermissionResponse, error)
	// GetProjectMemberByProjectIdAndUserId 根据项目id 和 用户id 查询项目成员信息
	GetProjectMemberByProjectIdAndUserId(context.Context, *GetProjectMemberByProjectIdAndUserIdRequest) (*GetProjectMemberByProjectIdAndUserIdResponse, error)
	// GetProjectsIdByTimePeriod 根据起始时间和终止时间查询项目
	GetProjectsIdByTimePeriod(context.Context, *GetProjectsIdByTimePeriodRequest) (*GetProjectsIdByTimePeriodResponse, error)
	// GetRunningProjectIdsByTime 查询某个时间点正在运行的项目列表
	GetRunningProjectIdsByTime(context.Context, *GetRunningProjectIdsByTimeRequest) (*GetRunningProjectIdsByTimeResponse, error)
}

// UnimplementedProjectServer can be embedded to have forward compatible implementations.
type UnimplementedProjectServer struct {
}

func (*UnimplementedProjectServer) GetMemberProjectsByUserId(ctx context.Context, req *GetMemberProjectsByUserIdRequest) (*GetMemberProjectsByUserIdResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetMemberProjectsByUserId not implemented")
}
func (*UnimplementedProjectServer) ExistsProjectMember(ctx context.Context, req *ExistsProjectMemberRequest) (*ExistsProjectMemberResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ExistsProjectMember not implemented")
}
func (*UnimplementedProjectServer) GetProjectDetailById(ctx context.Context, req *GetProjectDetailByIdRequest) (*GetProjectByIdResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetProjectDetailById not implemented")
}
func (*UnimplementedProjectServer) GetProjectsDetailByIds(ctx context.Context, req *GetProjectsDetailByIdsRequest) (*GetProjectsByIdsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetProjectsDetailByIds not implemented")
}
func (*UnimplementedProjectServer) CheckUserOperatorProjectsPermission(ctx context.Context, req *CheckUserOperatorProjectsPermissionRequest) (*CheckUserOperatorProjectsPermissionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CheckUserOperatorProjectsPermission not implemented")
}
func (*UnimplementedProjectServer) GetProjectMemberByProjectIdAndUserId(ctx context.Context, req *GetProjectMemberByProjectIdAndUserIdRequest) (*GetProjectMemberByProjectIdAndUserIdResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetProjectMemberByProjectIdAndUserId not implemented")
}
func (*UnimplementedProjectServer) GetProjectsIdByTimePeriod(ctx context.Context, req *GetProjectsIdByTimePeriodRequest) (*GetProjectsIdByTimePeriodResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetProjectsIdByTimePeriod not implemented")
}
func (*UnimplementedProjectServer) GetRunningProjectIdsByTime(ctx context.Context, req *GetRunningProjectIdsByTimeRequest) (*GetRunningProjectIdsByTimeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetRunningProjectIdsByTime not implemented")
}

func RegisterProjectServer(s *grpc.Server, srv ProjectServer) {
	s.RegisterService(&_Project_serviceDesc, srv)
}

func _Project_GetMemberProjectsByUserId_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetMemberProjectsByUserIdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProjectServer).GetMemberProjectsByUserId(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/project.Project/GetMemberProjectsByUserId",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProjectServer).GetMemberProjectsByUserId(ctx, req.(*GetMemberProjectsByUserIdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Project_ExistsProjectMember_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ExistsProjectMemberRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProjectServer).ExistsProjectMember(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/project.Project/ExistsProjectMember",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProjectServer).ExistsProjectMember(ctx, req.(*ExistsProjectMemberRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Project_GetProjectDetailById_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetProjectDetailByIdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProjectServer).GetProjectDetailById(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/project.Project/GetProjectDetailById",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProjectServer).GetProjectDetailById(ctx, req.(*GetProjectDetailByIdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Project_GetProjectsDetailByIds_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetProjectsDetailByIdsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProjectServer).GetProjectsDetailByIds(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/project.Project/GetProjectsDetailByIds",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProjectServer).GetProjectsDetailByIds(ctx, req.(*GetProjectsDetailByIdsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Project_CheckUserOperatorProjectsPermission_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CheckUserOperatorProjectsPermissionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProjectServer).CheckUserOperatorProjectsPermission(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/project.Project/CheckUserOperatorProjectsPermission",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProjectServer).CheckUserOperatorProjectsPermission(ctx, req.(*CheckUserOperatorProjectsPermissionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Project_GetProjectMemberByProjectIdAndUserId_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetProjectMemberByProjectIdAndUserIdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProjectServer).GetProjectMemberByProjectIdAndUserId(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/project.Project/GetProjectMemberByProjectIdAndUserId",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProjectServer).GetProjectMemberByProjectIdAndUserId(ctx, req.(*GetProjectMemberByProjectIdAndUserIdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Project_GetProjectsIdByTimePeriod_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetProjectsIdByTimePeriodRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProjectServer).GetProjectsIdByTimePeriod(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/project.Project/GetProjectsIdByTimePeriod",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProjectServer).GetProjectsIdByTimePeriod(ctx, req.(*GetProjectsIdByTimePeriodRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Project_GetRunningProjectIdsByTime_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRunningProjectIdsByTimeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProjectServer).GetRunningProjectIdsByTime(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/project.Project/GetRunningProjectIdsByTime",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProjectServer).GetRunningProjectIdsByTime(ctx, req.(*GetRunningProjectIdsByTimeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Project_serviceDesc = grpc.ServiceDesc{
	ServiceName: "project.Project",
	HandlerType: (*ProjectServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetMemberProjectsByUserId",
			Handler:    _Project_GetMemberProjectsByUserId_Handler,
		},
		{
			MethodName: "ExistsProjectMember",
			Handler:    _Project_ExistsProjectMember_Handler,
		},
		{
			MethodName: "GetProjectDetailById",
			Handler:    _Project_GetProjectDetailById_Handler,
		},
		{
			MethodName: "GetProjectsDetailByIds",
			Handler:    _Project_GetProjectsDetailByIds_Handler,
		},
		{
			MethodName: "CheckUserOperatorProjectsPermission",
			Handler:    _Project_CheckUserOperatorProjectsPermission_Handler,
		},
		{
			MethodName: "GetProjectMemberByProjectIdAndUserId",
			Handler:    _Project_GetProjectMemberByProjectIdAndUserId_Handler,
		},
		{
			MethodName: "GetProjectsIdByTimePeriod",
			Handler:    _Project_GetProjectsIdByTimePeriod_Handler,
		},
		{
			MethodName: "GetRunningProjectIdsByTime",
			Handler:    _Project_GetRunningProjectIdsByTime_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "project/project.proto",
}
