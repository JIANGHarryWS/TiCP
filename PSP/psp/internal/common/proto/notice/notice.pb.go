// Code generated by protoc-gen-go. DO NOT EDIT.
// source: notice/notice.proto

package notice

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type WebsocketMessage struct {
	UserId               string   `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Type                 string   `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	Content              string   `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" yaml:"-" xml:"-"`
	XXX_unrecognized     []byte   `json:"-" yaml:"-" xml:"-"`
	XXX_sizecache        int32    `json:"-" yaml:"-" xml:"-"`
}

func (m *WebsocketMessage) Reset()         { *m = WebsocketMessage{} }
func (m *WebsocketMessage) String() string { return proto.CompactTextString(m) }
func (*WebsocketMessage) ProtoMessage()    {}
func (*WebsocketMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_a4805187b6be1089, []int{0}
}

func (m *WebsocketMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WebsocketMessage.Unmarshal(m, b)
}
func (m *WebsocketMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WebsocketMessage.Marshal(b, m, deterministic)
}
func (m *WebsocketMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WebsocketMessage.Merge(m, src)
}
func (m *WebsocketMessage) XXX_Size() int {
	return xxx_messageInfo_WebsocketMessage.Size(m)
}
func (m *WebsocketMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_WebsocketMessage.DiscardUnknown(m)
}

var xxx_messageInfo_WebsocketMessage proto.InternalMessageInfo

func (m *WebsocketMessage) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *WebsocketMessage) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *WebsocketMessage) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

type NoticeEmpty struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-" yaml:"-" xml:"-"`
	XXX_unrecognized     []byte   `json:"-" yaml:"-" xml:"-"`
	XXX_sizecache        int32    `json:"-" yaml:"-" xml:"-"`
}

func (m *NoticeEmpty) Reset()         { *m = NoticeEmpty{} }
func (m *NoticeEmpty) String() string { return proto.CompactTextString(m) }
func (*NoticeEmpty) ProtoMessage()    {}
func (*NoticeEmpty) Descriptor() ([]byte, []int) {
	return fileDescriptor_a4805187b6be1089, []int{1}
}

func (m *NoticeEmpty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NoticeEmpty.Unmarshal(m, b)
}
func (m *NoticeEmpty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NoticeEmpty.Marshal(b, m, deterministic)
}
func (m *NoticeEmpty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NoticeEmpty.Merge(m, src)
}
func (m *NoticeEmpty) XXX_Size() int {
	return xxx_messageInfo_NoticeEmpty.Size(m)
}
func (m *NoticeEmpty) XXX_DiscardUnknown() {
	xxx_messageInfo_NoticeEmpty.DiscardUnknown(m)
}

var xxx_messageInfo_NoticeEmpty proto.InternalMessageInfo

type SendEmailRequest struct {
	Receiver             string   `protobuf:"bytes,1,opt,name=receiver,proto3" json:"receiver,omitempty"`
	EmailTemplate        string   `protobuf:"bytes,2,opt,name=email_template,json=emailTemplate,proto3" json:"email_template,omitempty"`
	JsonData             string   `protobuf:"bytes,3,opt,name=json_data,json=jsonData,proto3" json:"json_data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" yaml:"-" xml:"-"`
	XXX_unrecognized     []byte   `json:"-" yaml:"-" xml:"-"`
	XXX_sizecache        int32    `json:"-" yaml:"-" xml:"-"`
}

func (m *SendEmailRequest) Reset()         { *m = SendEmailRequest{} }
func (m *SendEmailRequest) String() string { return proto.CompactTextString(m) }
func (*SendEmailRequest) ProtoMessage()    {}
func (*SendEmailRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a4805187b6be1089, []int{2}
}

func (m *SendEmailRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendEmailRequest.Unmarshal(m, b)
}
func (m *SendEmailRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendEmailRequest.Marshal(b, m, deterministic)
}
func (m *SendEmailRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendEmailRequest.Merge(m, src)
}
func (m *SendEmailRequest) XXX_Size() int {
	return xxx_messageInfo_SendEmailRequest.Size(m)
}
func (m *SendEmailRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SendEmailRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SendEmailRequest proto.InternalMessageInfo

func (m *SendEmailRequest) GetReceiver() string {
	if m != nil {
		return m.Receiver
	}
	return ""
}

func (m *SendEmailRequest) GetEmailTemplate() string {
	if m != nil {
		return m.EmailTemplate
	}
	return ""
}

func (m *SendEmailRequest) GetJsonData() string {
	if m != nil {
		return m.JsonData
	}
	return ""
}

type SendEmailResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-" yaml:"-" xml:"-"`
	XXX_unrecognized     []byte   `json:"-" yaml:"-" xml:"-"`
	XXX_sizecache        int32    `json:"-" yaml:"-" xml:"-"`
}

func (m *SendEmailResponse) Reset()         { *m = SendEmailResponse{} }
func (m *SendEmailResponse) String() string { return proto.CompactTextString(m) }
func (*SendEmailResponse) ProtoMessage()    {}
func (*SendEmailResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a4805187b6be1089, []int{3}
}

func (m *SendEmailResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendEmailResponse.Unmarshal(m, b)
}
func (m *SendEmailResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendEmailResponse.Marshal(b, m, deterministic)
}
func (m *SendEmailResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendEmailResponse.Merge(m, src)
}
func (m *SendEmailResponse) XXX_Size() int {
	return xxx_messageInfo_SendEmailResponse.Size(m)
}
func (m *SendEmailResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SendEmailResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SendEmailResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*WebsocketMessage)(nil), "notice.WebsocketMessage")
	proto.RegisterType((*NoticeEmpty)(nil), "notice.NoticeEmpty")
	proto.RegisterType((*SendEmailRequest)(nil), "notice.SendEmailRequest")
	proto.RegisterType((*SendEmailResponse)(nil), "notice.SendEmailResponse")
}

func init() { proto.RegisterFile("notice/notice.proto", fileDescriptor_a4805187b6be1089) }

var fileDescriptor_a4805187b6be1089 = []byte{
	// 266 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x91, 0x41, 0x4b, 0xc3, 0x40,
	0x10, 0x85, 0x89, 0x4a, 0xda, 0x8c, 0x54, 0xea, 0x44, 0x70, 0x8d, 0x17, 0x09, 0x08, 0x9e, 0x2a,
	0xe8, 0x1f, 0xf0, 0x60, 0x0e, 0x1e, 0xf4, 0x50, 0x05, 0xf1, 0x14, 0xb6, 0xc9, 0x20, 0xd1, 0x66,
	0x77, 0xdd, 0x9d, 0x0a, 0xfd, 0x19, 0xfe, 0x63, 0xc9, 0x26, 0xa9, 0x25, 0xf6, 0x94, 0xbc, 0xf7,
	0x76, 0xf9, 0xde, 0xcc, 0x42, 0xac, 0x34, 0x57, 0x05, 0x5d, 0xb7, 0x9f, 0x99, 0xb1, 0x9a, 0x35,
	0x86, 0xad, 0x4a, 0xdf, 0x60, 0xfa, 0x4a, 0x0b, 0xa7, 0x8b, 0x4f, 0xe2, 0x47, 0x72, 0x4e, 0xbe,
	0x13, 0x9e, 0xc2, 0x68, 0xe5, 0xc8, 0xe6, 0x55, 0x29, 0x82, 0x8b, 0xe0, 0x2a, 0x9a, 0x87, 0x8d,
	0x7c, 0x28, 0x11, 0xe1, 0x80, 0xd7, 0x86, 0xc4, 0x9e, 0x77, 0xfd, 0x3f, 0x0a, 0x18, 0x15, 0x5a,
	0x31, 0x29, 0x16, 0xfb, 0xde, 0xee, 0x65, 0x3a, 0x81, 0xc3, 0x27, 0x0f, 0xc9, 0x6a, 0xc3, 0xeb,
	0xd4, 0xc2, 0xf4, 0x99, 0x54, 0x99, 0xd5, 0xb2, 0x5a, 0xce, 0xe9, 0x6b, 0x45, 0x8e, 0x31, 0x81,
	0xb1, 0xa5, 0x82, 0xaa, 0x6f, 0xb2, 0x1d, 0x6a, 0xa3, 0xf1, 0x12, 0x8e, 0xa8, 0x39, 0x9b, 0x33,
	0xd5, 0x66, 0x29, 0xb9, 0xc7, 0x4e, 0xbc, 0xfb, 0xd2, 0x99, 0x78, 0x0e, 0xd1, 0x87, 0xd3, 0x2a,
	0x2f, 0x25, 0xcb, 0xae, 0xc1, 0xb8, 0x31, 0xee, 0x25, 0xcb, 0x34, 0x86, 0xe3, 0x2d, 0xa6, 0x33,
	0x5a, 0x39, 0xba, 0xf9, 0x09, 0x20, 0x6c, 0x8b, 0x61, 0x06, 0x27, 0x4d, 0xfe, 0x6f, 0x03, 0x62,
	0xd6, 0x2d, 0x6b, 0x98, 0x24, 0x71, 0x9f, 0x6c, 0x8d, 0x86, 0x77, 0x10, 0x6d, 0x30, 0x7f, 0x77,
	0x87, 0xd3, 0x26, 0x67, 0x3b, 0x92, 0xb6, 0xd3, 0x22, 0xf4, 0xaf, 0x72, 0xfb, 0x1b, 0x00, 0x00,
	0xff, 0xff, 0x20, 0x93, 0x01, 0x67, 0xac, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// NoticeClient is the client API for Notice service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type NoticeClient interface {
	// 发送websocket消息
	SendWebsocketMessage(ctx context.Context, in *WebsocketMessage, opts ...grpc.CallOption) (*NoticeEmpty, error)
	// 发送邮件
	SendEmail(ctx context.Context, in *SendEmailRequest, opts ...grpc.CallOption) (*SendEmailResponse, error)
}

type noticeClient struct {
	cc *grpc.ClientConn
}

func NewNoticeClient(cc *grpc.ClientConn) NoticeClient {
	return &noticeClient{cc}
}

func (c *noticeClient) SendWebsocketMessage(ctx context.Context, in *WebsocketMessage, opts ...grpc.CallOption) (*NoticeEmpty, error) {
	out := new(NoticeEmpty)
	err := c.cc.Invoke(ctx, "/notice.Notice/SendWebsocketMessage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *noticeClient) SendEmail(ctx context.Context, in *SendEmailRequest, opts ...grpc.CallOption) (*SendEmailResponse, error) {
	out := new(SendEmailResponse)
	err := c.cc.Invoke(ctx, "/notice.Notice/SendEmail", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// NoticeServer is the server API for Notice service.
type NoticeServer interface {
	// 发送websocket消息
	SendWebsocketMessage(context.Context, *WebsocketMessage) (*NoticeEmpty, error)
	// 发送邮件
	SendEmail(context.Context, *SendEmailRequest) (*SendEmailResponse, error)
}

// UnimplementedNoticeServer can be embedded to have forward compatible implementations.
type UnimplementedNoticeServer struct {
}

func (*UnimplementedNoticeServer) SendWebsocketMessage(ctx context.Context, req *WebsocketMessage) (*NoticeEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendWebsocketMessage not implemented")
}
func (*UnimplementedNoticeServer) SendEmail(ctx context.Context, req *SendEmailRequest) (*SendEmailResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendEmail not implemented")
}

func RegisterNoticeServer(s *grpc.Server, srv NoticeServer) {
	s.RegisterService(&_Notice_serviceDesc, srv)
}

func _Notice_SendWebsocketMessage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WebsocketMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NoticeServer).SendWebsocketMessage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/notice.Notice/SendWebsocketMessage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NoticeServer).SendWebsocketMessage(ctx, req.(*WebsocketMessage))
	}
	return interceptor(ctx, in, info, handler)
}

func _Notice_SendEmail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SendEmailRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NoticeServer).SendEmail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/notice.Notice/SendEmail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NoticeServer).SendEmail(ctx, req.(*SendEmailRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Notice_serviceDesc = grpc.ServiceDesc{
	ServiceName: "notice.Notice",
	HandlerType: (*NoticeServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SendWebsocketMessage",
			Handler:    _Notice_SendWebsocketMessage_Handler,
		},
		{
			MethodName: "SendEmail",
			Handler:    _Notice_SendEmail_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "notice/notice.proto",
}
