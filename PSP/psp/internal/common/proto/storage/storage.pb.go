// Code generated by protoc-gen-go. DO NOT EDIT.
// source: storage/storage.proto

package storage

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	ptype "github.com/yuansuan/ticp/PSP/psp/internal/common/proto/ptype"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type UploadTaskStatusEnum int32

const (
	UploadTaskStatusEnum_SUCCESS   UploadTaskStatusEnum = 0
	UploadTaskStatusEnum_Uploading UploadTaskStatusEnum = 1
	UploadTaskStatusEnum_Failure   UploadTaskStatusEnum = 2
)

var UploadTaskStatusEnum_name = map[int32]string{
	0: "SUCCESS",
	1: "Uploading",
	2: "Failure",
}

var UploadTaskStatusEnum_value = map[string]int32{
	"SUCCESS":   0,
	"Uploading": 1,
	"Failure":   2,
}

func (x UploadTaskStatusEnum) String() string {
	return proto.EnumName(UploadTaskStatusEnum_name, int32(x))
}

func (UploadTaskStatusEnum) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_803a4779d728664c, []int{0}
}

type ReadReq struct {
	Path                 string   `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	UserName             string   `protobuf:"bytes,2,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	Cross                bool     `protobuf:"varint,3,opt,name=cross,proto3" json:"cross,omitempty"`
	IsCloud              bool     `protobuf:"varint,4,opt,name=is_cloud,json=isCloud,proto3" json:"is_cloud,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" yaml:"-" xml:"-"`
	XXX_unrecognized     []byte   `json:"-" yaml:"-" xml:"-"`
	XXX_sizecache        int32    `json:"-" yaml:"-" xml:"-"`
}

func (m *ReadReq) Reset()         { *m = ReadReq{} }
func (m *ReadReq) String() string { return proto.CompactTextString(m) }
func (*ReadReq) ProtoMessage()    {}
func (*ReadReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_803a4779d728664c, []int{0}
}

func (m *ReadReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadReq.Unmarshal(m, b)
}
func (m *ReadReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadReq.Marshal(b, m, deterministic)
}
func (m *ReadReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadReq.Merge(m, src)
}
func (m *ReadReq) XXX_Size() int {
	return xxx_messageInfo_ReadReq.Size(m)
}
func (m *ReadReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadReq.DiscardUnknown(m)
}

var xxx_messageInfo_ReadReq proto.InternalMessageInfo

func (m *ReadReq) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *ReadReq) GetUserName() string {
	if m != nil {
		return m.UserName
	}
	return ""
}

func (m *ReadReq) GetCross() bool {
	if m != nil {
		return m.Cross
	}
	return false
}

func (m *ReadReq) GetIsCloud() bool {
	if m != nil {
		return m.IsCloud
	}
	return false
}

type ReadResp struct {
	Chunk                []byte   `protobuf:"bytes,1,opt,name=chunk,proto3" json:"chunk,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" yaml:"-" xml:"-"`
	XXX_unrecognized     []byte   `json:"-" yaml:"-" xml:"-"`
	XXX_sizecache        int32    `json:"-" yaml:"-" xml:"-"`
}

func (m *ReadResp) Reset()         { *m = ReadResp{} }
func (m *ReadResp) String() string { return proto.CompactTextString(m) }
func (*ReadResp) ProtoMessage()    {}
func (*ReadResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_803a4779d728664c, []int{1}
}

func (m *ReadResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadResp.Unmarshal(m, b)
}
func (m *ReadResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadResp.Marshal(b, m, deterministic)
}
func (m *ReadResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadResp.Merge(m, src)
}
func (m *ReadResp) XXX_Size() int {
	return xxx_messageInfo_ReadResp.Size(m)
}
func (m *ReadResp) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadResp.DiscardUnknown(m)
}

var xxx_messageInfo_ReadResp proto.InternalMessageInfo

func (m *ReadResp) GetChunk() []byte {
	if m != nil {
		return m.Chunk
	}
	return nil
}

type GetLocalRootPathConfigReq struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-" yaml:"-" xml:"-"`
	XXX_unrecognized     []byte   `json:"-" yaml:"-" xml:"-"`
	XXX_sizecache        int32    `json:"-" yaml:"-" xml:"-"`
}

func (m *GetLocalRootPathConfigReq) Reset()         { *m = GetLocalRootPathConfigReq{} }
func (m *GetLocalRootPathConfigReq) String() string { return proto.CompactTextString(m) }
func (*GetLocalRootPathConfigReq) ProtoMessage()    {}
func (*GetLocalRootPathConfigReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_803a4779d728664c, []int{2}
}

func (m *GetLocalRootPathConfigReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetLocalRootPathConfigReq.Unmarshal(m, b)
}
func (m *GetLocalRootPathConfigReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetLocalRootPathConfigReq.Marshal(b, m, deterministic)
}
func (m *GetLocalRootPathConfigReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetLocalRootPathConfigReq.Merge(m, src)
}
func (m *GetLocalRootPathConfigReq) XXX_Size() int {
	return xxx_messageInfo_GetLocalRootPathConfigReq.Size(m)
}
func (m *GetLocalRootPathConfigReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetLocalRootPathConfigReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetLocalRootPathConfigReq proto.InternalMessageInfo

type GetLocalRootPathConfigResp struct {
	LocalRootPath        string   `protobuf:"bytes,1,opt,name=localRootPath,proto3" json:"localRootPath,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" yaml:"-" xml:"-"`
	XXX_unrecognized     []byte   `json:"-" yaml:"-" xml:"-"`
	XXX_sizecache        int32    `json:"-" yaml:"-" xml:"-"`
}

func (m *GetLocalRootPathConfigResp) Reset()         { *m = GetLocalRootPathConfigResp{} }
func (m *GetLocalRootPathConfigResp) String() string { return proto.CompactTextString(m) }
func (*GetLocalRootPathConfigResp) ProtoMessage()    {}
func (*GetLocalRootPathConfigResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_803a4779d728664c, []int{3}
}

func (m *GetLocalRootPathConfigResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetLocalRootPathConfigResp.Unmarshal(m, b)
}
func (m *GetLocalRootPathConfigResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetLocalRootPathConfigResp.Marshal(b, m, deterministic)
}
func (m *GetLocalRootPathConfigResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetLocalRootPathConfigResp.Merge(m, src)
}
func (m *GetLocalRootPathConfigResp) XXX_Size() int {
	return xxx_messageInfo_GetLocalRootPathConfigResp.Size(m)
}
func (m *GetLocalRootPathConfigResp) XXX_DiscardUnknown() {
	xxx_messageInfo_GetLocalRootPathConfigResp.DiscardUnknown(m)
}

var xxx_messageInfo_GetLocalRootPathConfigResp proto.InternalMessageInfo

func (m *GetLocalRootPathConfigResp) GetLocalRootPath() string {
	if m != nil {
		return m.LocalRootPath
	}
	return ""
}

type HardLinkReq struct {
	SrcFilePaths         []string `protobuf:"bytes,1,rep,name=srcFilePaths,proto3" json:"srcFilePaths,omitempty"`
	SrcDirPaths          []string `protobuf:"bytes,2,rep,name=srcDirPaths,proto3" json:"srcDirPaths,omitempty"`
	FilterPaths          []string `protobuf:"bytes,3,rep,name=filterPaths,proto3" json:"filterPaths,omitempty"`
	CurrentPath          string   `protobuf:"bytes,4,opt,name=currentPath,proto3" json:"currentPath,omitempty"`
	DstPath              string   `protobuf:"bytes,5,opt,name=dstPath,proto3" json:"dstPath,omitempty"`
	Overwrite            bool     `protobuf:"varint,6,opt,name=overwrite,proto3" json:"overwrite,omitempty"`
	Cross                bool     `protobuf:"varint,7,opt,name=cross,proto3" json:"cross,omitempty"`
	IsCloud              bool     `protobuf:"varint,8,opt,name=isCloud,proto3" json:"isCloud,omitempty"`
	UserName             string   `protobuf:"bytes,9,opt,name=userName,proto3" json:"userName,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" yaml:"-" xml:"-"`
	XXX_unrecognized     []byte   `json:"-" yaml:"-" xml:"-"`
	XXX_sizecache        int32    `json:"-" yaml:"-" xml:"-"`
}

func (m *HardLinkReq) Reset()         { *m = HardLinkReq{} }
func (m *HardLinkReq) String() string { return proto.CompactTextString(m) }
func (*HardLinkReq) ProtoMessage()    {}
func (*HardLinkReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_803a4779d728664c, []int{4}
}

func (m *HardLinkReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HardLinkReq.Unmarshal(m, b)
}
func (m *HardLinkReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HardLinkReq.Marshal(b, m, deterministic)
}
func (m *HardLinkReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HardLinkReq.Merge(m, src)
}
func (m *HardLinkReq) XXX_Size() int {
	return xxx_messageInfo_HardLinkReq.Size(m)
}
func (m *HardLinkReq) XXX_DiscardUnknown() {
	xxx_messageInfo_HardLinkReq.DiscardUnknown(m)
}

var xxx_messageInfo_HardLinkReq proto.InternalMessageInfo

func (m *HardLinkReq) GetSrcFilePaths() []string {
	if m != nil {
		return m.SrcFilePaths
	}
	return nil
}

func (m *HardLinkReq) GetSrcDirPaths() []string {
	if m != nil {
		return m.SrcDirPaths
	}
	return nil
}

func (m *HardLinkReq) GetFilterPaths() []string {
	if m != nil {
		return m.FilterPaths
	}
	return nil
}

func (m *HardLinkReq) GetCurrentPath() string {
	if m != nil {
		return m.CurrentPath
	}
	return ""
}

func (m *HardLinkReq) GetDstPath() string {
	if m != nil {
		return m.DstPath
	}
	return ""
}

func (m *HardLinkReq) GetOverwrite() bool {
	if m != nil {
		return m.Overwrite
	}
	return false
}

func (m *HardLinkReq) GetCross() bool {
	if m != nil {
		return m.Cross
	}
	return false
}

func (m *HardLinkReq) GetIsCloud() bool {
	if m != nil {
		return m.IsCloud
	}
	return false
}

func (m *HardLinkReq) GetUserName() string {
	if m != nil {
		return m.UserName
	}
	return ""
}

type HardLinkResp struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-" yaml:"-" xml:"-"`
	XXX_unrecognized     []byte   `json:"-" yaml:"-" xml:"-"`
	XXX_sizecache        int32    `json:"-" yaml:"-" xml:"-"`
}

func (m *HardLinkResp) Reset()         { *m = HardLinkResp{} }
func (m *HardLinkResp) String() string { return proto.CompactTextString(m) }
func (*HardLinkResp) ProtoMessage()    {}
func (*HardLinkResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_803a4779d728664c, []int{5}
}

func (m *HardLinkResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HardLinkResp.Unmarshal(m, b)
}
func (m *HardLinkResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HardLinkResp.Marshal(b, m, deterministic)
}
func (m *HardLinkResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HardLinkResp.Merge(m, src)
}
func (m *HardLinkResp) XXX_Size() int {
	return xxx_messageInfo_HardLinkResp.Size(m)
}
func (m *HardLinkResp) XXX_DiscardUnknown() {
	xxx_messageInfo_HardLinkResp.DiscardUnknown(m)
}

var xxx_messageInfo_HardLinkResp proto.InternalMessageInfo

type SymLinkReq struct {
	SrcPath              string   `protobuf:"bytes,1,opt,name=srcPath,proto3" json:"srcPath,omitempty"`
	DstPath              string   `protobuf:"bytes,2,opt,name=dstPath,proto3" json:"dstPath,omitempty"`
	Overwrite            bool     `protobuf:"varint,3,opt,name=overwrite,proto3" json:"overwrite,omitempty"`
	Cross                bool     `protobuf:"varint,4,opt,name=cross,proto3" json:"cross,omitempty"`
	IsCloud              bool     `protobuf:"varint,5,opt,name=isCloud,proto3" json:"isCloud,omitempty"`
	UserName             string   `protobuf:"bytes,6,opt,name=userName,proto3" json:"userName,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" yaml:"-" xml:"-"`
	XXX_unrecognized     []byte   `json:"-" yaml:"-" xml:"-"`
	XXX_sizecache        int32    `json:"-" yaml:"-" xml:"-"`
}

func (m *SymLinkReq) Reset()         { *m = SymLinkReq{} }
func (m *SymLinkReq) String() string { return proto.CompactTextString(m) }
func (*SymLinkReq) ProtoMessage()    {}
func (*SymLinkReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_803a4779d728664c, []int{6}
}

func (m *SymLinkReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SymLinkReq.Unmarshal(m, b)
}
func (m *SymLinkReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SymLinkReq.Marshal(b, m, deterministic)
}
func (m *SymLinkReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SymLinkReq.Merge(m, src)
}
func (m *SymLinkReq) XXX_Size() int {
	return xxx_messageInfo_SymLinkReq.Size(m)
}
func (m *SymLinkReq) XXX_DiscardUnknown() {
	xxx_messageInfo_SymLinkReq.DiscardUnknown(m)
}

var xxx_messageInfo_SymLinkReq proto.InternalMessageInfo

func (m *SymLinkReq) GetSrcPath() string {
	if m != nil {
		return m.SrcPath
	}
	return ""
}

func (m *SymLinkReq) GetDstPath() string {
	if m != nil {
		return m.DstPath
	}
	return ""
}

func (m *SymLinkReq) GetOverwrite() bool {
	if m != nil {
		return m.Overwrite
	}
	return false
}

func (m *SymLinkReq) GetCross() bool {
	if m != nil {
		return m.Cross
	}
	return false
}

func (m *SymLinkReq) GetIsCloud() bool {
	if m != nil {
		return m.IsCloud
	}
	return false
}

func (m *SymLinkReq) GetUserName() string {
	if m != nil {
		return m.UserName
	}
	return ""
}

type SymLinkResp struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-" yaml:"-" xml:"-"`
	XXX_unrecognized     []byte   `json:"-" yaml:"-" xml:"-"`
	XXX_sizecache        int32    `json:"-" yaml:"-" xml:"-"`
}

func (m *SymLinkResp) Reset()         { *m = SymLinkResp{} }
func (m *SymLinkResp) String() string { return proto.CompactTextString(m) }
func (*SymLinkResp) ProtoMessage()    {}
func (*SymLinkResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_803a4779d728664c, []int{7}
}

func (m *SymLinkResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SymLinkResp.Unmarshal(m, b)
}
func (m *SymLinkResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SymLinkResp.Marshal(b, m, deterministic)
}
func (m *SymLinkResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SymLinkResp.Merge(m, src)
}
func (m *SymLinkResp) XXX_Size() int {
	return xxx_messageInfo_SymLinkResp.Size(m)
}
func (m *SymLinkResp) XXX_DiscardUnknown() {
	xxx_messageInfo_SymLinkResp.DiscardUnknown(m)
}

var xxx_messageInfo_SymLinkResp proto.InternalMessageInfo

type LinkReq struct {
	FilePaths            []string `protobuf:"bytes,1,rep,name=filePaths,proto3" json:"filePaths,omitempty"`
	DstPath              string   `protobuf:"bytes,2,opt,name=dstPath,proto3" json:"dstPath,omitempty"`
	Overwrite            bool     `protobuf:"varint,3,opt,name=overwrite,proto3" json:"overwrite,omitempty"`
	Cross                bool     `protobuf:"varint,4,opt,name=cross,proto3" json:"cross,omitempty"`
	IsCloud              bool     `protobuf:"varint,5,opt,name=isCloud,proto3" json:"isCloud,omitempty"`
	UserName             string   `protobuf:"bytes,6,opt,name=userName,proto3" json:"userName,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" yaml:"-" xml:"-"`
	XXX_unrecognized     []byte   `json:"-" yaml:"-" xml:"-"`
	XXX_sizecache        int32    `json:"-" yaml:"-" xml:"-"`
}

func (m *LinkReq) Reset()         { *m = LinkReq{} }
func (m *LinkReq) String() string { return proto.CompactTextString(m) }
func (*LinkReq) ProtoMessage()    {}
func (*LinkReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_803a4779d728664c, []int{8}
}

func (m *LinkReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LinkReq.Unmarshal(m, b)
}
func (m *LinkReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LinkReq.Marshal(b, m, deterministic)
}
func (m *LinkReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LinkReq.Merge(m, src)
}
func (m *LinkReq) XXX_Size() int {
	return xxx_messageInfo_LinkReq.Size(m)
}
func (m *LinkReq) XXX_DiscardUnknown() {
	xxx_messageInfo_LinkReq.DiscardUnknown(m)
}

var xxx_messageInfo_LinkReq proto.InternalMessageInfo

func (m *LinkReq) GetFilePaths() []string {
	if m != nil {
		return m.FilePaths
	}
	return nil
}

func (m *LinkReq) GetDstPath() string {
	if m != nil {
		return m.DstPath
	}
	return ""
}

func (m *LinkReq) GetOverwrite() bool {
	if m != nil {
		return m.Overwrite
	}
	return false
}

func (m *LinkReq) GetCross() bool {
	if m != nil {
		return m.Cross
	}
	return false
}

func (m *LinkReq) GetIsCloud() bool {
	if m != nil {
		return m.IsCloud
	}
	return false
}

func (m *LinkReq) GetUserName() string {
	if m != nil {
		return m.UserName
	}
	return ""
}

type LinkResp struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-" yaml:"-" xml:"-"`
	XXX_unrecognized     []byte   `json:"-" yaml:"-" xml:"-"`
	XXX_sizecache        int32    `json:"-" yaml:"-" xml:"-"`
}

func (m *LinkResp) Reset()         { *m = LinkResp{} }
func (m *LinkResp) String() string { return proto.CompactTextString(m) }
func (*LinkResp) ProtoMessage()    {}
func (*LinkResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_803a4779d728664c, []int{9}
}

func (m *LinkResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LinkResp.Unmarshal(m, b)
}
func (m *LinkResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LinkResp.Marshal(b, m, deterministic)
}
func (m *LinkResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LinkResp.Merge(m, src)
}
func (m *LinkResp) XXX_Size() int {
	return xxx_messageInfo_LinkResp.Size(m)
}
func (m *LinkResp) XXX_DiscardUnknown() {
	xxx_messageInfo_LinkResp.DiscardUnknown(m)
}

var xxx_messageInfo_LinkResp proto.InternalMessageInfo

type InitUserHomeReq struct {
	UserName             string   `protobuf:"bytes,1,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" yaml:"-" xml:"-"`
	XXX_unrecognized     []byte   `json:"-" yaml:"-" xml:"-"`
	XXX_sizecache        int32    `json:"-" yaml:"-" xml:"-"`
}

func (m *InitUserHomeReq) Reset()         { *m = InitUserHomeReq{} }
func (m *InitUserHomeReq) String() string { return proto.CompactTextString(m) }
func (*InitUserHomeReq) ProtoMessage()    {}
func (*InitUserHomeReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_803a4779d728664c, []int{10}
}

func (m *InitUserHomeReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InitUserHomeReq.Unmarshal(m, b)
}
func (m *InitUserHomeReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InitUserHomeReq.Marshal(b, m, deterministic)
}
func (m *InitUserHomeReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InitUserHomeReq.Merge(m, src)
}
func (m *InitUserHomeReq) XXX_Size() int {
	return xxx_messageInfo_InitUserHomeReq.Size(m)
}
func (m *InitUserHomeReq) XXX_DiscardUnknown() {
	xxx_messageInfo_InitUserHomeReq.DiscardUnknown(m)
}

var xxx_messageInfo_InitUserHomeReq proto.InternalMessageInfo

func (m *InitUserHomeReq) GetUserName() string {
	if m != nil {
		return m.UserName
	}
	return ""
}

type InitUserHomeResp struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-" yaml:"-" xml:"-"`
	XXX_unrecognized     []byte   `json:"-" yaml:"-" xml:"-"`
	XXX_sizecache        int32    `json:"-" yaml:"-" xml:"-"`
}

func (m *InitUserHomeResp) Reset()         { *m = InitUserHomeResp{} }
func (m *InitUserHomeResp) String() string { return proto.CompactTextString(m) }
func (*InitUserHomeResp) ProtoMessage()    {}
func (*InitUserHomeResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_803a4779d728664c, []int{11}
}

func (m *InitUserHomeResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InitUserHomeResp.Unmarshal(m, b)
}
func (m *InitUserHomeResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InitUserHomeResp.Marshal(b, m, deterministic)
}
func (m *InitUserHomeResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InitUserHomeResp.Merge(m, src)
}
func (m *InitUserHomeResp) XXX_Size() int {
	return xxx_messageInfo_InitUserHomeResp.Size(m)
}
func (m *InitUserHomeResp) XXX_DiscardUnknown() {
	xxx_messageInfo_InitUserHomeResp.DiscardUnknown(m)
}

var xxx_messageInfo_InitUserHomeResp proto.InternalMessageInfo

type GetUploadHpcFileTaskStatusReq struct {
	TaskKey              string   `protobuf:"bytes,1,opt,name=task_key,json=taskKey,proto3" json:"task_key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" yaml:"-" xml:"-"`
	XXX_unrecognized     []byte   `json:"-" yaml:"-" xml:"-"`
	XXX_sizecache        int32    `json:"-" yaml:"-" xml:"-"`
}

func (m *GetUploadHpcFileTaskStatusReq) Reset()         { *m = GetUploadHpcFileTaskStatusReq{} }
func (m *GetUploadHpcFileTaskStatusReq) String() string { return proto.CompactTextString(m) }
func (*GetUploadHpcFileTaskStatusReq) ProtoMessage()    {}
func (*GetUploadHpcFileTaskStatusReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_803a4779d728664c, []int{12}
}

func (m *GetUploadHpcFileTaskStatusReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetUploadHpcFileTaskStatusReq.Unmarshal(m, b)
}
func (m *GetUploadHpcFileTaskStatusReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetUploadHpcFileTaskStatusReq.Marshal(b, m, deterministic)
}
func (m *GetUploadHpcFileTaskStatusReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetUploadHpcFileTaskStatusReq.Merge(m, src)
}
func (m *GetUploadHpcFileTaskStatusReq) XXX_Size() int {
	return xxx_messageInfo_GetUploadHpcFileTaskStatusReq.Size(m)
}
func (m *GetUploadHpcFileTaskStatusReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetUploadHpcFileTaskStatusReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetUploadHpcFileTaskStatusReq proto.InternalMessageInfo

func (m *GetUploadHpcFileTaskStatusReq) GetTaskKey() string {
	if m != nil {
		return m.TaskKey
	}
	return ""
}

type GetUploadHpcFileTaskStatusResp struct {
	Status               UploadTaskStatusEnum `protobuf:"varint,1,opt,name=status,proto3,enum=storage.UploadTaskStatusEnum" json:"status,omitempty"`
	TotalSize            int64                `protobuf:"varint,2,opt,name=total_size,json=totalSize,proto3" json:"total_size,omitempty"`
	CurrentSize          int64                `protobuf:"varint,3,opt,name=current_size,json=currentSize,proto3" json:"current_size,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-" yaml:"-" xml:"-"`
	XXX_unrecognized     []byte               `json:"-" yaml:"-" xml:"-"`
	XXX_sizecache        int32                `json:"-" yaml:"-" xml:"-"`
}

func (m *GetUploadHpcFileTaskStatusResp) Reset()         { *m = GetUploadHpcFileTaskStatusResp{} }
func (m *GetUploadHpcFileTaskStatusResp) String() string { return proto.CompactTextString(m) }
func (*GetUploadHpcFileTaskStatusResp) ProtoMessage()    {}
func (*GetUploadHpcFileTaskStatusResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_803a4779d728664c, []int{13}
}

func (m *GetUploadHpcFileTaskStatusResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetUploadHpcFileTaskStatusResp.Unmarshal(m, b)
}
func (m *GetUploadHpcFileTaskStatusResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetUploadHpcFileTaskStatusResp.Marshal(b, m, deterministic)
}
func (m *GetUploadHpcFileTaskStatusResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetUploadHpcFileTaskStatusResp.Merge(m, src)
}
func (m *GetUploadHpcFileTaskStatusResp) XXX_Size() int {
	return xxx_messageInfo_GetUploadHpcFileTaskStatusResp.Size(m)
}
func (m *GetUploadHpcFileTaskStatusResp) XXX_DiscardUnknown() {
	xxx_messageInfo_GetUploadHpcFileTaskStatusResp.DiscardUnknown(m)
}

var xxx_messageInfo_GetUploadHpcFileTaskStatusResp proto.InternalMessageInfo

func (m *GetUploadHpcFileTaskStatusResp) GetStatus() UploadTaskStatusEnum {
	if m != nil {
		return m.Status
	}
	return UploadTaskStatusEnum_SUCCESS
}

func (m *GetUploadHpcFileTaskStatusResp) GetTotalSize() int64 {
	if m != nil {
		return m.TotalSize
	}
	return 0
}

func (m *GetUploadHpcFileTaskStatusResp) GetCurrentSize() int64 {
	if m != nil {
		return m.CurrentSize
	}
	return 0
}

type SubmitUploadHpcFileTaskReq struct {
	SrcFilePaths         []string `protobuf:"bytes,1,rep,name=src_file_paths,json=srcFilePaths,proto3" json:"src_file_paths,omitempty"`
	SrcDirPaths          []string `protobuf:"bytes,2,rep,name=src_dir_paths,json=srcDirPaths,proto3" json:"src_dir_paths,omitempty"`
	DestDirPath          string   `protobuf:"bytes,3,opt,name=dest_dir_path,json=destDirPath,proto3" json:"dest_dir_path,omitempty"`
	CurrentPath          string   `protobuf:"bytes,4,opt,name=current_path,json=currentPath,proto3" json:"current_path,omitempty"`
	Overwrite            bool     `protobuf:"varint,5,opt,name=overwrite,proto3" json:"overwrite,omitempty"`
	UserName             string   `protobuf:"bytes,6,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	Cross                bool     `protobuf:"varint,7,opt,name=cross,proto3" json:"cross,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" yaml:"-" xml:"-"`
	XXX_unrecognized     []byte   `json:"-" yaml:"-" xml:"-"`
	XXX_sizecache        int32    `json:"-" yaml:"-" xml:"-"`
}

func (m *SubmitUploadHpcFileTaskReq) Reset()         { *m = SubmitUploadHpcFileTaskReq{} }
func (m *SubmitUploadHpcFileTaskReq) String() string { return proto.CompactTextString(m) }
func (*SubmitUploadHpcFileTaskReq) ProtoMessage()    {}
func (*SubmitUploadHpcFileTaskReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_803a4779d728664c, []int{14}
}

func (m *SubmitUploadHpcFileTaskReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubmitUploadHpcFileTaskReq.Unmarshal(m, b)
}
func (m *SubmitUploadHpcFileTaskReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubmitUploadHpcFileTaskReq.Marshal(b, m, deterministic)
}
func (m *SubmitUploadHpcFileTaskReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubmitUploadHpcFileTaskReq.Merge(m, src)
}
func (m *SubmitUploadHpcFileTaskReq) XXX_Size() int {
	return xxx_messageInfo_SubmitUploadHpcFileTaskReq.Size(m)
}
func (m *SubmitUploadHpcFileTaskReq) XXX_DiscardUnknown() {
	xxx_messageInfo_SubmitUploadHpcFileTaskReq.DiscardUnknown(m)
}

var xxx_messageInfo_SubmitUploadHpcFileTaskReq proto.InternalMessageInfo

func (m *SubmitUploadHpcFileTaskReq) GetSrcFilePaths() []string {
	if m != nil {
		return m.SrcFilePaths
	}
	return nil
}

func (m *SubmitUploadHpcFileTaskReq) GetSrcDirPaths() []string {
	if m != nil {
		return m.SrcDirPaths
	}
	return nil
}

func (m *SubmitUploadHpcFileTaskReq) GetDestDirPath() string {
	if m != nil {
		return m.DestDirPath
	}
	return ""
}

func (m *SubmitUploadHpcFileTaskReq) GetCurrentPath() string {
	if m != nil {
		return m.CurrentPath
	}
	return ""
}

func (m *SubmitUploadHpcFileTaskReq) GetOverwrite() bool {
	if m != nil {
		return m.Overwrite
	}
	return false
}

func (m *SubmitUploadHpcFileTaskReq) GetUserName() string {
	if m != nil {
		return m.UserName
	}
	return ""
}

func (m *SubmitUploadHpcFileTaskReq) GetCross() bool {
	if m != nil {
		return m.Cross
	}
	return false
}

type SubmitUploadHpcFileTaskResp struct {
	TaskKey              string   `protobuf:"bytes,1,opt,name=task_key,json=taskKey,proto3" json:"task_key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" yaml:"-" xml:"-"`
	XXX_unrecognized     []byte   `json:"-" yaml:"-" xml:"-"`
	XXX_sizecache        int32    `json:"-" yaml:"-" xml:"-"`
}

func (m *SubmitUploadHpcFileTaskResp) Reset()         { *m = SubmitUploadHpcFileTaskResp{} }
func (m *SubmitUploadHpcFileTaskResp) String() string { return proto.CompactTextString(m) }
func (*SubmitUploadHpcFileTaskResp) ProtoMessage()    {}
func (*SubmitUploadHpcFileTaskResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_803a4779d728664c, []int{15}
}

func (m *SubmitUploadHpcFileTaskResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubmitUploadHpcFileTaskResp.Unmarshal(m, b)
}
func (m *SubmitUploadHpcFileTaskResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubmitUploadHpcFileTaskResp.Marshal(b, m, deterministic)
}
func (m *SubmitUploadHpcFileTaskResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubmitUploadHpcFileTaskResp.Merge(m, src)
}
func (m *SubmitUploadHpcFileTaskResp) XXX_Size() int {
	return xxx_messageInfo_SubmitUploadHpcFileTaskResp.Size(m)
}
func (m *SubmitUploadHpcFileTaskResp) XXX_DiscardUnknown() {
	xxx_messageInfo_SubmitUploadHpcFileTaskResp.DiscardUnknown(m)
}

var xxx_messageInfo_SubmitUploadHpcFileTaskResp proto.InternalMessageInfo

func (m *SubmitUploadHpcFileTaskResp) GetTaskKey() string {
	if m != nil {
		return m.TaskKey
	}
	return ""
}

type RealpathReq struct {
	IsCloud              bool     `protobuf:"varint,1,opt,name=is_cloud,json=isCloud,proto3" json:"is_cloud,omitempty"`
	RelativePath         string   `protobuf:"bytes,2,opt,name=relativePath,proto3" json:"relativePath,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" yaml:"-" xml:"-"`
	XXX_unrecognized     []byte   `json:"-" yaml:"-" xml:"-"`
	XXX_sizecache        int32    `json:"-" yaml:"-" xml:"-"`
}

func (m *RealpathReq) Reset()         { *m = RealpathReq{} }
func (m *RealpathReq) String() string { return proto.CompactTextString(m) }
func (*RealpathReq) ProtoMessage()    {}
func (*RealpathReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_803a4779d728664c, []int{16}
}

func (m *RealpathReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RealpathReq.Unmarshal(m, b)
}
func (m *RealpathReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RealpathReq.Marshal(b, m, deterministic)
}
func (m *RealpathReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RealpathReq.Merge(m, src)
}
func (m *RealpathReq) XXX_Size() int {
	return xxx_messageInfo_RealpathReq.Size(m)
}
func (m *RealpathReq) XXX_DiscardUnknown() {
	xxx_messageInfo_RealpathReq.DiscardUnknown(m)
}

var xxx_messageInfo_RealpathReq proto.InternalMessageInfo

func (m *RealpathReq) GetIsCloud() bool {
	if m != nil {
		return m.IsCloud
	}
	return false
}

func (m *RealpathReq) GetRelativePath() string {
	if m != nil {
		return m.RelativePath
	}
	return ""
}

type RealpathResp struct {
	Realpath             string   `protobuf:"bytes,1,opt,name=realpath,proto3" json:"realpath,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" yaml:"-" xml:"-"`
	XXX_unrecognized     []byte   `json:"-" yaml:"-" xml:"-"`
	XXX_sizecache        int32    `json:"-" yaml:"-" xml:"-"`
}

func (m *RealpathResp) Reset()         { *m = RealpathResp{} }
func (m *RealpathResp) String() string { return proto.CompactTextString(m) }
func (*RealpathResp) ProtoMessage()    {}
func (*RealpathResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_803a4779d728664c, []int{17}
}

func (m *RealpathResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RealpathResp.Unmarshal(m, b)
}
func (m *RealpathResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RealpathResp.Marshal(b, m, deterministic)
}
func (m *RealpathResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RealpathResp.Merge(m, src)
}
func (m *RealpathResp) XXX_Size() int {
	return xxx_messageInfo_RealpathResp.Size(m)
}
func (m *RealpathResp) XXX_DiscardUnknown() {
	xxx_messageInfo_RealpathResp.DiscardUnknown(m)
}

var xxx_messageInfo_RealpathResp proto.InternalMessageInfo

func (m *RealpathResp) GetRealpath() string {
	if m != nil {
		return m.Realpath
	}
	return ""
}

type ListOfRecurReq struct {
	Paths                []string `protobuf:"bytes,1,rep,name=paths,proto3" json:"paths,omitempty"`
	UserName             string   `protobuf:"bytes,2,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" yaml:"-" xml:"-"`
	XXX_unrecognized     []byte   `json:"-" yaml:"-" xml:"-"`
	XXX_sizecache        int32    `json:"-" yaml:"-" xml:"-"`
}

func (m *ListOfRecurReq) Reset()         { *m = ListOfRecurReq{} }
func (m *ListOfRecurReq) String() string { return proto.CompactTextString(m) }
func (*ListOfRecurReq) ProtoMessage()    {}
func (*ListOfRecurReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_803a4779d728664c, []int{18}
}

func (m *ListOfRecurReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListOfRecurReq.Unmarshal(m, b)
}
func (m *ListOfRecurReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListOfRecurReq.Marshal(b, m, deterministic)
}
func (m *ListOfRecurReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListOfRecurReq.Merge(m, src)
}
func (m *ListOfRecurReq) XXX_Size() int {
	return xxx_messageInfo_ListOfRecurReq.Size(m)
}
func (m *ListOfRecurReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ListOfRecurReq.DiscardUnknown(m)
}

var xxx_messageInfo_ListOfRecurReq proto.InternalMessageInfo

func (m *ListOfRecurReq) GetPaths() []string {
	if m != nil {
		return m.Paths
	}
	return nil
}

func (m *ListOfRecurReq) GetUserName() string {
	if m != nil {
		return m.UserName
	}
	return ""
}

type ListOfRecurRsp struct {
	Files                []*File  `protobuf:"bytes,1,rep,name=files,proto3" json:"files,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" yaml:"-" xml:"-"`
	XXX_unrecognized     []byte   `json:"-" yaml:"-" xml:"-"`
	XXX_sizecache        int32    `json:"-" yaml:"-" xml:"-"`
}

func (m *ListOfRecurRsp) Reset()         { *m = ListOfRecurRsp{} }
func (m *ListOfRecurRsp) String() string { return proto.CompactTextString(m) }
func (*ListOfRecurRsp) ProtoMessage()    {}
func (*ListOfRecurRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_803a4779d728664c, []int{19}
}

func (m *ListOfRecurRsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListOfRecurRsp.Unmarshal(m, b)
}
func (m *ListOfRecurRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListOfRecurRsp.Marshal(b, m, deterministic)
}
func (m *ListOfRecurRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListOfRecurRsp.Merge(m, src)
}
func (m *ListOfRecurRsp) XXX_Size() int {
	return xxx_messageInfo_ListOfRecurRsp.Size(m)
}
func (m *ListOfRecurRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_ListOfRecurRsp.DiscardUnknown(m)
}

var xxx_messageInfo_ListOfRecurRsp proto.InternalMessageInfo

func (m *ListOfRecurRsp) GetFiles() []*File {
	if m != nil {
		return m.Files
	}
	return nil
}

type InitUserHomeDirReq struct {
	UserName             string   `protobuf:"bytes,1,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" yaml:"-" xml:"-"`
	XXX_unrecognized     []byte   `json:"-" yaml:"-" xml:"-"`
	XXX_sizecache        int32    `json:"-" yaml:"-" xml:"-"`
}

func (m *InitUserHomeDirReq) Reset()         { *m = InitUserHomeDirReq{} }
func (m *InitUserHomeDirReq) String() string { return proto.CompactTextString(m) }
func (*InitUserHomeDirReq) ProtoMessage()    {}
func (*InitUserHomeDirReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_803a4779d728664c, []int{20}
}

func (m *InitUserHomeDirReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InitUserHomeDirReq.Unmarshal(m, b)
}
func (m *InitUserHomeDirReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InitUserHomeDirReq.Marshal(b, m, deterministic)
}
func (m *InitUserHomeDirReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InitUserHomeDirReq.Merge(m, src)
}
func (m *InitUserHomeDirReq) XXX_Size() int {
	return xxx_messageInfo_InitUserHomeDirReq.Size(m)
}
func (m *InitUserHomeDirReq) XXX_DiscardUnknown() {
	xxx_messageInfo_InitUserHomeDirReq.DiscardUnknown(m)
}

var xxx_messageInfo_InitUserHomeDirReq proto.InternalMessageInfo

func (m *InitUserHomeDirReq) GetUserName() string {
	if m != nil {
		return m.UserName
	}
	return ""
}

// EmptyResp ...
type EmptyResp struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-" yaml:"-" xml:"-"`
	XXX_unrecognized     []byte   `json:"-" yaml:"-" xml:"-"`
	XXX_sizecache        int32    `json:"-" yaml:"-" xml:"-"`
}

func (m *EmptyResp) Reset()         { *m = EmptyResp{} }
func (m *EmptyResp) String() string { return proto.CompactTextString(m) }
func (*EmptyResp) ProtoMessage()    {}
func (*EmptyResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_803a4779d728664c, []int{21}
}

func (m *EmptyResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EmptyResp.Unmarshal(m, b)
}
func (m *EmptyResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EmptyResp.Marshal(b, m, deterministic)
}
func (m *EmptyResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EmptyResp.Merge(m, src)
}
func (m *EmptyResp) XXX_Size() int {
	return xxx_messageInfo_EmptyResp.Size(m)
}
func (m *EmptyResp) XXX_DiscardUnknown() {
	xxx_messageInfo_EmptyResp.DiscardUnknown(m)
}

var xxx_messageInfo_EmptyResp proto.InternalMessageInfo

type ExistReq struct {
	Paths                []string `protobuf:"bytes,1,rep,name=paths,proto3" json:"paths,omitempty"`
	UserName             string   `protobuf:"bytes,2,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	Cross                bool     `protobuf:"varint,3,opt,name=cross,proto3" json:"cross,omitempty"`
	IsCloud              bool     `protobuf:"varint,4,opt,name=is_cloud,json=isCloud,proto3" json:"is_cloud,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" yaml:"-" xml:"-"`
	XXX_unrecognized     []byte   `json:"-" yaml:"-" xml:"-"`
	XXX_sizecache        int32    `json:"-" yaml:"-" xml:"-"`
}

func (m *ExistReq) Reset()         { *m = ExistReq{} }
func (m *ExistReq) String() string { return proto.CompactTextString(m) }
func (*ExistReq) ProtoMessage()    {}
func (*ExistReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_803a4779d728664c, []int{22}
}

func (m *ExistReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExistReq.Unmarshal(m, b)
}
func (m *ExistReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExistReq.Marshal(b, m, deterministic)
}
func (m *ExistReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExistReq.Merge(m, src)
}
func (m *ExistReq) XXX_Size() int {
	return xxx_messageInfo_ExistReq.Size(m)
}
func (m *ExistReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ExistReq.DiscardUnknown(m)
}

var xxx_messageInfo_ExistReq proto.InternalMessageInfo

func (m *ExistReq) GetPaths() []string {
	if m != nil {
		return m.Paths
	}
	return nil
}

func (m *ExistReq) GetUserName() string {
	if m != nil {
		return m.UserName
	}
	return ""
}

func (m *ExistReq) GetCross() bool {
	if m != nil {
		return m.Cross
	}
	return false
}

func (m *ExistReq) GetIsCloud() bool {
	if m != nil {
		return m.IsCloud
	}
	return false
}

type ExistResp struct {
	IsExist              []bool   `protobuf:"varint,1,rep,packed,name=isExist,proto3" json:"isExist,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" yaml:"-" xml:"-"`
	XXX_unrecognized     []byte   `json:"-" yaml:"-" xml:"-"`
	XXX_sizecache        int32    `json:"-" yaml:"-" xml:"-"`
}

func (m *ExistResp) Reset()         { *m = ExistResp{} }
func (m *ExistResp) String() string { return proto.CompactTextString(m) }
func (*ExistResp) ProtoMessage()    {}
func (*ExistResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_803a4779d728664c, []int{23}
}

func (m *ExistResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExistResp.Unmarshal(m, b)
}
func (m *ExistResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExistResp.Marshal(b, m, deterministic)
}
func (m *ExistResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExistResp.Merge(m, src)
}
func (m *ExistResp) XXX_Size() int {
	return xxx_messageInfo_ExistResp.Size(m)
}
func (m *ExistResp) XXX_DiscardUnknown() {
	xxx_messageInfo_ExistResp.DiscardUnknown(m)
}

var xxx_messageInfo_ExistResp proto.InternalMessageInfo

func (m *ExistResp) GetIsExist() []bool {
	if m != nil {
		return m.IsExist
	}
	return nil
}

type CreateDirReq struct {
	Path                 string   `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	UserName             string   `protobuf:"bytes,2,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	Cross                bool     `protobuf:"varint,3,opt,name=cross,proto3" json:"cross,omitempty"`
	IsCloud              bool     `protobuf:"varint,4,opt,name=is_cloud,json=isCloud,proto3" json:"is_cloud,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" yaml:"-" xml:"-"`
	XXX_unrecognized     []byte   `json:"-" yaml:"-" xml:"-"`
	XXX_sizecache        int32    `json:"-" yaml:"-" xml:"-"`
}

func (m *CreateDirReq) Reset()         { *m = CreateDirReq{} }
func (m *CreateDirReq) String() string { return proto.CompactTextString(m) }
func (*CreateDirReq) ProtoMessage()    {}
func (*CreateDirReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_803a4779d728664c, []int{24}
}

func (m *CreateDirReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateDirReq.Unmarshal(m, b)
}
func (m *CreateDirReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateDirReq.Marshal(b, m, deterministic)
}
func (m *CreateDirReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateDirReq.Merge(m, src)
}
func (m *CreateDirReq) XXX_Size() int {
	return xxx_messageInfo_CreateDirReq.Size(m)
}
func (m *CreateDirReq) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateDirReq.DiscardUnknown(m)
}

var xxx_messageInfo_CreateDirReq proto.InternalMessageInfo

func (m *CreateDirReq) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *CreateDirReq) GetUserName() string {
	if m != nil {
		return m.UserName
	}
	return ""
}

func (m *CreateDirReq) GetCross() bool {
	if m != nil {
		return m.Cross
	}
	return false
}

func (m *CreateDirReq) GetIsCloud() bool {
	if m != nil {
		return m.IsCloud
	}
	return false
}

type CreateDirResp struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-" yaml:"-" xml:"-"`
	XXX_unrecognized     []byte   `json:"-" yaml:"-" xml:"-"`
	XXX_sizecache        int32    `json:"-" yaml:"-" xml:"-"`
}

func (m *CreateDirResp) Reset()         { *m = CreateDirResp{} }
func (m *CreateDirResp) String() string { return proto.CompactTextString(m) }
func (*CreateDirResp) ProtoMessage()    {}
func (*CreateDirResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_803a4779d728664c, []int{25}
}

func (m *CreateDirResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateDirResp.Unmarshal(m, b)
}
func (m *CreateDirResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateDirResp.Marshal(b, m, deterministic)
}
func (m *CreateDirResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateDirResp.Merge(m, src)
}
func (m *CreateDirResp) XXX_Size() int {
	return xxx_messageInfo_CreateDirResp.Size(m)
}
func (m *CreateDirResp) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateDirResp.DiscardUnknown(m)
}

var xxx_messageInfo_CreateDirResp proto.InternalMessageInfo

type MvReq struct {
	Srcpath              string   `protobuf:"bytes,1,opt,name=srcpath,proto3" json:"srcpath,omitempty"`
	Dstpath              string   `protobuf:"bytes,2,opt,name=dstpath,proto3" json:"dstpath,omitempty"`
	Overwrite            bool     `protobuf:"varint,3,opt,name=overwrite,proto3" json:"overwrite,omitempty"`
	IsCloud              bool     `protobuf:"varint,4,opt,name=is_cloud,json=isCloud,proto3" json:"is_cloud,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" yaml:"-" xml:"-"`
	XXX_unrecognized     []byte   `json:"-" yaml:"-" xml:"-"`
	XXX_sizecache        int32    `json:"-" yaml:"-" xml:"-"`
}

func (m *MvReq) Reset()         { *m = MvReq{} }
func (m *MvReq) String() string { return proto.CompactTextString(m) }
func (*MvReq) ProtoMessage()    {}
func (*MvReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_803a4779d728664c, []int{26}
}

func (m *MvReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MvReq.Unmarshal(m, b)
}
func (m *MvReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MvReq.Marshal(b, m, deterministic)
}
func (m *MvReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MvReq.Merge(m, src)
}
func (m *MvReq) XXX_Size() int {
	return xxx_messageInfo_MvReq.Size(m)
}
func (m *MvReq) XXX_DiscardUnknown() {
	xxx_messageInfo_MvReq.DiscardUnknown(m)
}

var xxx_messageInfo_MvReq proto.InternalMessageInfo

func (m *MvReq) GetSrcpath() string {
	if m != nil {
		return m.Srcpath
	}
	return ""
}

func (m *MvReq) GetDstpath() string {
	if m != nil {
		return m.Dstpath
	}
	return ""
}

func (m *MvReq) GetOverwrite() bool {
	if m != nil {
		return m.Overwrite
	}
	return false
}

func (m *MvReq) GetIsCloud() bool {
	if m != nil {
		return m.IsCloud
	}
	return false
}

type MvResp struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-" yaml:"-" xml:"-"`
	XXX_unrecognized     []byte   `json:"-" yaml:"-" xml:"-"`
	XXX_sizecache        int32    `json:"-" yaml:"-" xml:"-"`
}

func (m *MvResp) Reset()         { *m = MvResp{} }
func (m *MvResp) String() string { return proto.CompactTextString(m) }
func (*MvResp) ProtoMessage()    {}
func (*MvResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_803a4779d728664c, []int{27}
}

func (m *MvResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MvResp.Unmarshal(m, b)
}
func (m *MvResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MvResp.Marshal(b, m, deterministic)
}
func (m *MvResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MvResp.Merge(m, src)
}
func (m *MvResp) XXX_Size() int {
	return xxx_messageInfo_MvResp.Size(m)
}
func (m *MvResp) XXX_DiscardUnknown() {
	xxx_messageInfo_MvResp.DiscardUnknown(m)
}

var xxx_messageInfo_MvResp proto.InternalMessageInfo

type RmReq struct {
	Paths                []string `protobuf:"bytes,1,rep,name=paths,proto3" json:"paths,omitempty"`
	UserName             string   `protobuf:"bytes,2,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	Cross                bool     `protobuf:"varint,3,opt,name=cross,proto3" json:"cross,omitempty"`
	IsCloud              bool     `protobuf:"varint,4,opt,name=is_cloud,json=isCloud,proto3" json:"is_cloud,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" yaml:"-" xml:"-"`
	XXX_unrecognized     []byte   `json:"-" yaml:"-" xml:"-"`
	XXX_sizecache        int32    `json:"-" yaml:"-" xml:"-"`
}

func (m *RmReq) Reset()         { *m = RmReq{} }
func (m *RmReq) String() string { return proto.CompactTextString(m) }
func (*RmReq) ProtoMessage()    {}
func (*RmReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_803a4779d728664c, []int{28}
}

func (m *RmReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RmReq.Unmarshal(m, b)
}
func (m *RmReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RmReq.Marshal(b, m, deterministic)
}
func (m *RmReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RmReq.Merge(m, src)
}
func (m *RmReq) XXX_Size() int {
	return xxx_messageInfo_RmReq.Size(m)
}
func (m *RmReq) XXX_DiscardUnknown() {
	xxx_messageInfo_RmReq.DiscardUnknown(m)
}

var xxx_messageInfo_RmReq proto.InternalMessageInfo

func (m *RmReq) GetPaths() []string {
	if m != nil {
		return m.Paths
	}
	return nil
}

func (m *RmReq) GetUserName() string {
	if m != nil {
		return m.UserName
	}
	return ""
}

func (m *RmReq) GetCross() bool {
	if m != nil {
		return m.Cross
	}
	return false
}

func (m *RmReq) GetIsCloud() bool {
	if m != nil {
		return m.IsCloud
	}
	return false
}

type RmResp struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-" yaml:"-" xml:"-"`
	XXX_unrecognized     []byte   `json:"-" yaml:"-" xml:"-"`
	XXX_sizecache        int32    `json:"-" yaml:"-" xml:"-"`
}

func (m *RmResp) Reset()         { *m = RmResp{} }
func (m *RmResp) String() string { return proto.CompactTextString(m) }
func (*RmResp) ProtoMessage()    {}
func (*RmResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_803a4779d728664c, []int{29}
}

func (m *RmResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RmResp.Unmarshal(m, b)
}
func (m *RmResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RmResp.Marshal(b, m, deterministic)
}
func (m *RmResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RmResp.Merge(m, src)
}
func (m *RmResp) XXX_Size() int {
	return xxx_messageInfo_RmResp.Size(m)
}
func (m *RmResp) XXX_DiscardUnknown() {
	xxx_messageInfo_RmResp.DiscardUnknown(m)
}

var xxx_messageInfo_RmResp proto.InternalMessageInfo

type File struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Mode                 string   `protobuf:"bytes,2,opt,name=mode,proto3" json:"mode,omitempty"`
	Size                 int64    `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`
	MDate                int64    `protobuf:"varint,4,opt,name=m_date,json=mDate,proto3" json:"m_date,omitempty"`
	Type                 string   `protobuf:"bytes,5,opt,name=type,proto3" json:"type,omitempty"`
	IsDir                bool     `protobuf:"varint,6,opt,name=is_dir,json=isDir,proto3" json:"is_dir,omitempty"`
	IsSymLink            bool     `protobuf:"varint,7,opt,name=is_sym_link,json=isSymLink,proto3" json:"is_sym_link,omitempty"`
	Path                 string   `protobuf:"bytes,8,opt,name=path,proto3" json:"path,omitempty"`
	IsText               bool     `protobuf:"varint,9,opt,name=is_text,json=isText,proto3" json:"is_text,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" yaml:"-" xml:"-"`
	XXX_unrecognized     []byte   `json:"-" yaml:"-" xml:"-"`
	XXX_sizecache        int32    `json:"-" yaml:"-" xml:"-"`
}

func (m *File) Reset()         { *m = File{} }
func (m *File) String() string { return proto.CompactTextString(m) }
func (*File) ProtoMessage()    {}
func (*File) Descriptor() ([]byte, []int) {
	return fileDescriptor_803a4779d728664c, []int{30}
}

func (m *File) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_File.Unmarshal(m, b)
}
func (m *File) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_File.Marshal(b, m, deterministic)
}
func (m *File) XXX_Merge(src proto.Message) {
	xxx_messageInfo_File.Merge(m, src)
}
func (m *File) XXX_Size() int {
	return xxx_messageInfo_File.Size(m)
}
func (m *File) XXX_DiscardUnknown() {
	xxx_messageInfo_File.DiscardUnknown(m)
}

var xxx_messageInfo_File proto.InternalMessageInfo

func (m *File) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *File) GetMode() string {
	if m != nil {
		return m.Mode
	}
	return ""
}

func (m *File) GetSize() int64 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *File) GetMDate() int64 {
	if m != nil {
		return m.MDate
	}
	return 0
}

func (m *File) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *File) GetIsDir() bool {
	if m != nil {
		return m.IsDir
	}
	return false
}

func (m *File) GetIsSymLink() bool {
	if m != nil {
		return m.IsSymLink
	}
	return false
}

func (m *File) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *File) GetIsText() bool {
	if m != nil {
		return m.IsText
	}
	return false
}

type ListReq struct {
	Path                 string         `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	UserName             string         `protobuf:"bytes,2,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	Cross                bool           `protobuf:"varint,3,opt,name=cross,proto3" json:"cross,omitempty"`
	IsCloud              bool           `protobuf:"varint,4,opt,name=is_cloud,json=isCloud,proto3" json:"is_cloud,omitempty"`
	ShowHideFile         bool           `protobuf:"varint,5,opt,name=show_hide_file,json=showHideFile,proto3" json:"show_hide_file,omitempty"`
	FilterRegexpList     []string       `protobuf:"bytes,6,rep,name=filter_regexp_list,json=filterRegexpList,proto3" json:"filter_regexp_list,omitempty"`
	Page                 *ptype.PageReq `protobuf:"bytes,7,opt,name=page,proto3" json:"page,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-" yaml:"-" xml:"-"`
	XXX_unrecognized     []byte         `json:"-" yaml:"-" xml:"-"`
	XXX_sizecache        int32          `json:"-" yaml:"-" xml:"-"`
}

func (m *ListReq) Reset()         { *m = ListReq{} }
func (m *ListReq) String() string { return proto.CompactTextString(m) }
func (*ListReq) ProtoMessage()    {}
func (*ListReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_803a4779d728664c, []int{31}
}

func (m *ListReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListReq.Unmarshal(m, b)
}
func (m *ListReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListReq.Marshal(b, m, deterministic)
}
func (m *ListReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListReq.Merge(m, src)
}
func (m *ListReq) XXX_Size() int {
	return xxx_messageInfo_ListReq.Size(m)
}
func (m *ListReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ListReq.DiscardUnknown(m)
}

var xxx_messageInfo_ListReq proto.InternalMessageInfo

func (m *ListReq) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *ListReq) GetUserName() string {
	if m != nil {
		return m.UserName
	}
	return ""
}

func (m *ListReq) GetCross() bool {
	if m != nil {
		return m.Cross
	}
	return false
}

func (m *ListReq) GetIsCloud() bool {
	if m != nil {
		return m.IsCloud
	}
	return false
}

func (m *ListReq) GetShowHideFile() bool {
	if m != nil {
		return m.ShowHideFile
	}
	return false
}

func (m *ListReq) GetFilterRegexpList() []string {
	if m != nil {
		return m.FilterRegexpList
	}
	return nil
}

func (m *ListReq) GetPage() *ptype.PageReq {
	if m != nil {
		return m.Page
	}
	return nil
}

type ListResp struct {
	Files                []*File  `protobuf:"bytes,1,rep,name=files,proto3" json:"files,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" yaml:"-" xml:"-"`
	XXX_unrecognized     []byte   `json:"-" yaml:"-" xml:"-"`
	XXX_sizecache        int32    `json:"-" yaml:"-" xml:"-"`
}

func (m *ListResp) Reset()         { *m = ListResp{} }
func (m *ListResp) String() string { return proto.CompactTextString(m) }
func (*ListResp) ProtoMessage()    {}
func (*ListResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_803a4779d728664c, []int{32}
}

func (m *ListResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListResp.Unmarshal(m, b)
}
func (m *ListResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListResp.Marshal(b, m, deterministic)
}
func (m *ListResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListResp.Merge(m, src)
}
func (m *ListResp) XXX_Size() int {
	return xxx_messageInfo_ListResp.Size(m)
}
func (m *ListResp) XXX_DiscardUnknown() {
	xxx_messageInfo_ListResp.DiscardUnknown(m)
}

var xxx_messageInfo_ListResp proto.InternalMessageInfo

func (m *ListResp) GetFiles() []*File {
	if m != nil {
		return m.Files
	}
	return nil
}

func init() {
	proto.RegisterEnum("storage.UploadTaskStatusEnum", UploadTaskStatusEnum_name, UploadTaskStatusEnum_value)
	proto.RegisterType((*ReadReq)(nil), "storage.ReadReq")
	proto.RegisterType((*ReadResp)(nil), "storage.ReadResp")
	proto.RegisterType((*GetLocalRootPathConfigReq)(nil), "storage.GetLocalRootPathConfigReq")
	proto.RegisterType((*GetLocalRootPathConfigResp)(nil), "storage.GetLocalRootPathConfigResp")
	proto.RegisterType((*HardLinkReq)(nil), "storage.HardLinkReq")
	proto.RegisterType((*HardLinkResp)(nil), "storage.HardLinkResp")
	proto.RegisterType((*SymLinkReq)(nil), "storage.SymLinkReq")
	proto.RegisterType((*SymLinkResp)(nil), "storage.SymLinkResp")
	proto.RegisterType((*LinkReq)(nil), "storage.LinkReq")
	proto.RegisterType((*LinkResp)(nil), "storage.LinkResp")
	proto.RegisterType((*InitUserHomeReq)(nil), "storage.InitUserHomeReq")
	proto.RegisterType((*InitUserHomeResp)(nil), "storage.InitUserHomeResp")
	proto.RegisterType((*GetUploadHpcFileTaskStatusReq)(nil), "storage.GetUploadHpcFileTaskStatusReq")
	proto.RegisterType((*GetUploadHpcFileTaskStatusResp)(nil), "storage.GetUploadHpcFileTaskStatusResp")
	proto.RegisterType((*SubmitUploadHpcFileTaskReq)(nil), "storage.SubmitUploadHpcFileTaskReq")
	proto.RegisterType((*SubmitUploadHpcFileTaskResp)(nil), "storage.SubmitUploadHpcFileTaskResp")
	proto.RegisterType((*RealpathReq)(nil), "storage.RealpathReq")
	proto.RegisterType((*RealpathResp)(nil), "storage.RealpathResp")
	proto.RegisterType((*ListOfRecurReq)(nil), "storage.ListOfRecurReq")
	proto.RegisterType((*ListOfRecurRsp)(nil), "storage.ListOfRecurRsp")
	proto.RegisterType((*InitUserHomeDirReq)(nil), "storage.InitUserHomeDirReq")
	proto.RegisterType((*EmptyResp)(nil), "storage.EmptyResp")
	proto.RegisterType((*ExistReq)(nil), "storage.ExistReq")
	proto.RegisterType((*ExistResp)(nil), "storage.ExistResp")
	proto.RegisterType((*CreateDirReq)(nil), "storage.CreateDirReq")
	proto.RegisterType((*CreateDirResp)(nil), "storage.CreateDirResp")
	proto.RegisterType((*MvReq)(nil), "storage.MvReq")
	proto.RegisterType((*MvResp)(nil), "storage.MvResp")
	proto.RegisterType((*RmReq)(nil), "storage.RmReq")
	proto.RegisterType((*RmResp)(nil), "storage.RmResp")
	proto.RegisterType((*File)(nil), "storage.file")
	proto.RegisterType((*ListReq)(nil), "storage.ListReq")
	proto.RegisterType((*ListResp)(nil), "storage.ListResp")
}

func init() { proto.RegisterFile("storage/storage.proto", fileDescriptor_803a4779d728664c) }

var fileDescriptor_803a4779d728664c = []byte{
	// 1309 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x57, 0xeb, 0x6e, 0x1b, 0xc5,
	0x17, 0xff, 0x6f, 0x7c, 0xdd, 0x63, 0x3b, 0xf5, 0x7f, 0x48, 0x5a, 0x67, 0x7b, 0x51, 0x98, 0xb6,
	0x50, 0x15, 0x6a, 0x43, 0xa0, 0x02, 0xf5, 0x0b, 0x52, 0x9d, 0xb4, 0x41, 0xa4, 0x50, 0xad, 0x9b,
	0x2f, 0x7c, 0x59, 0x6d, 0xed, 0x49, 0x32, 0xf2, 0x5e, 0xa6, 0x7b, 0xc6, 0x69, 0xdc, 0x37, 0x41,
	0xbc, 0x01, 0x3c, 0x0d, 0xcf, 0xc0, 0x13, 0xf0, 0x02, 0x08, 0xcd, 0xec, 0xc5, 0xb3, 0x6e, 0x9c,
	0x14, 0xa4, 0x22, 0x3e, 0xed, 0x9e, 0x73, 0x7e, 0x33, 0xe7, 0xcc, 0x9c, 0xeb, 0xc0, 0x26, 0xca,
	0x38, 0xf1, 0x8f, 0xd9, 0x20, 0xfb, 0xf6, 0x45, 0x12, 0xcb, 0x98, 0x34, 0x32, 0xd2, 0xe9, 0x0a,
	0x39, 0x17, 0x6c, 0x20, 0x0a, 0x11, 0x9d, 0x42, 0xc3, 0x65, 0xfe, 0xc4, 0x65, 0xaf, 0x08, 0x81,
	0xaa, 0xf0, 0xe5, 0x49, 0xcf, 0xda, 0xb6, 0xee, 0xd9, 0xae, 0xfe, 0x27, 0xd7, 0xc1, 0x9e, 0x21,
	0x4b, 0xbc, 0xc8, 0x0f, 0x59, 0x6f, 0x4d, 0x0b, 0x9a, 0x8a, 0xf1, 0xbd, 0x1f, 0x32, 0xb2, 0x01,
	0xb5, 0x71, 0x12, 0x23, 0xf6, 0x2a, 0xdb, 0xd6, 0xbd, 0xa6, 0x9b, 0x12, 0x64, 0x0b, 0x9a, 0x1c,
	0xbd, 0x71, 0x10, 0xcf, 0x26, 0xbd, 0xaa, 0x16, 0x34, 0x38, 0x0e, 0x15, 0x49, 0xb7, 0xa1, 0x99,
	0x2a, 0x43, 0xa1, 0x17, 0x9f, 0xcc, 0xa2, 0xa9, 0x56, 0xd7, 0x76, 0x53, 0x82, 0x5e, 0x87, 0xad,
	0xa7, 0x4c, 0x1e, 0xc4, 0x63, 0x3f, 0x70, 0xe3, 0x58, 0x3e, 0xf7, 0xe5, 0xc9, 0x30, 0x8e, 0x8e,
	0xf8, 0xb1, 0xcb, 0x5e, 0xd1, 0xc7, 0xe0, 0xac, 0x12, 0xa2, 0x20, 0x77, 0xa0, 0x13, 0x98, 0xa2,
	0xec, 0x1c, 0x65, 0x26, 0xfd, 0x79, 0x0d, 0x5a, 0xfb, 0x7e, 0x32, 0x39, 0xe0, 0xd1, 0x54, 0x1d,
	0x9a, 0x42, 0x1b, 0x93, 0xf1, 0x13, 0x1e, 0x30, 0x25, 0xc6, 0x9e, 0xb5, 0x5d, 0xb9, 0x67, 0xbb,
	0x25, 0x1e, 0xd9, 0x86, 0x16, 0x26, 0xe3, 0x5d, 0x9e, 0xa4, 0x90, 0x35, 0x0d, 0x31, 0x59, 0x0a,
	0x71, 0xc4, 0x03, 0xc9, 0x32, 0x44, 0x25, 0x45, 0x18, 0x2c, 0x85, 0x18, 0xcf, 0x92, 0x84, 0x45,
	0xa9, 0x6d, 0x55, 0x6d, 0x9b, 0xc9, 0x22, 0x3d, 0x68, 0x4c, 0x30, 0x95, 0xd6, 0xb4, 0x34, 0x27,
	0xc9, 0x0d, 0xb0, 0xe3, 0x53, 0x96, 0xbc, 0x4e, 0xb8, 0x64, 0xbd, 0xba, 0xbe, 0xd2, 0x05, 0x63,
	0xe1, 0x85, 0x86, 0xe9, 0x85, 0x1e, 0xe4, 0xb7, 0xde, 0x6b, 0x96, 0x9c, 0x40, 0x1c, 0x28, 0x3c,
	0xd8, 0xb3, 0xcb, 0x1e, 0xa5, 0xeb, 0xd0, 0x5e, 0x5c, 0x0e, 0x0a, 0xfa, 0x8b, 0x05, 0x30, 0x9a,
	0x87, 0xf9, 0x65, 0xf5, 0xa0, 0x81, 0xc9, 0xd8, 0xb8, 0xdc, 0x9c, 0x34, 0x8d, 0x5f, 0xbb, 0xc0,
	0xf8, 0xca, 0x4a, 0xe3, 0xab, 0x2b, 0x8c, 0xaf, 0xad, 0x36, 0xbe, 0xbe, 0x64, 0x7c, 0x07, 0x5a,
	0x85, 0xad, 0x28, 0xe8, 0xaf, 0x16, 0x34, 0x72, 0xc3, 0x6f, 0x80, 0x7d, 0xb4, 0xe4, 0xe2, 0x05,
	0xe3, 0x3f, 0x61, 0x3c, 0x40, 0xb3, 0xb0, 0xbc, 0x0f, 0x57, 0xbe, 0x8d, 0xb8, 0x3c, 0x44, 0x96,
	0xec, 0xc7, 0x21, 0x53, 0x07, 0x28, 0xe5, 0xa1, 0xb5, 0xb4, 0x96, 0x40, 0xb7, 0x8c, 0x47, 0x41,
	0x1f, 0xc1, 0xcd, 0xa7, 0x4c, 0x1e, 0x8a, 0x20, 0xf6, 0x27, 0xfb, 0x42, 0x07, 0xf3, 0x0b, 0x1f,
	0xa7, 0x23, 0xe9, 0xcb, 0x19, 0xaa, 0x1d, 0xb7, 0xa0, 0x29, 0x7d, 0x9c, 0x7a, 0x53, 0x36, 0xcf,
	0x9d, 0xa9, 0xe8, 0xef, 0xd8, 0x9c, 0xfe, 0x64, 0xc1, 0xad, 0x8b, 0x16, 0xa3, 0x20, 0x0f, 0xa1,
	0x8e, 0x9a, 0xd2, 0x6b, 0xd7, 0x77, 0x6e, 0xf6, 0xf3, 0x8a, 0x93, 0xae, 0x5a, 0xc0, 0xf7, 0xa2,
	0x59, 0xe8, 0x66, 0x60, 0x72, 0x13, 0x40, 0xc6, 0xd2, 0x0f, 0x3c, 0xe4, 0x6f, 0xd2, 0x7a, 0x52,
	0x71, 0x6d, 0xcd, 0x19, 0xf1, 0x37, 0x8c, 0x7c, 0x08, 0xed, 0x2c, 0x23, 0x52, 0x40, 0x45, 0x03,
	0xf2, 0x2c, 0x51, 0x10, 0xfa, 0xa7, 0x05, 0xce, 0x68, 0xf6, 0x32, 0xe4, 0x6f, 0x9b, 0xa7, 0x4e,
	0x75, 0x07, 0xd6, 0x31, 0x19, 0x7b, 0xca, 0xb7, 0x9e, 0x58, 0x99, 0xd0, 0x14, 0x3a, 0x0a, 0x35,
	0xe1, 0x49, 0x06, 0x3a, 0x27, 0xa5, 0x29, 0x74, 0x26, 0x0c, 0x65, 0x01, 0xd2, 0xc6, 0xd8, 0x6e,
	0x4b, 0x31, 0x33, 0x90, 0x69, 0xaf, 0x58, 0x91, 0xd5, 0xa5, 0x08, 0xaa, 0x2d, 0x47, 0x50, 0xc9,
	0xad, 0xf5, 0x55, 0xe5, 0xd5, 0x4c, 0x6c, 0xfa, 0x35, 0x5c, 0x5f, 0x79, 0x7e, 0x14, 0x17, 0xb9,
	0xf5, 0x00, 0x5a, 0x2e, 0xf3, 0x03, 0x65, 0x69, 0x16, 0x00, 0x45, 0x9d, 0xb6, 0xca, 0x81, 0x4a,
	0xa1, 0x9d, 0xb0, 0xc0, 0x97, 0xfc, 0x94, 0x19, 0x59, 0x51, 0xe2, 0xd1, 0xfb, 0xd0, 0x5e, 0xec,
	0x86, 0x42, 0x05, 0x77, 0x92, 0xd1, 0x79, 0x80, 0xe6, 0x34, 0x1d, 0xc2, 0xfa, 0x01, 0x47, 0xf9,
	0xc3, 0x91, 0xcb, 0xc6, 0xb3, 0x44, 0x29, 0xdf, 0x80, 0x9a, 0xe9, 0x9e, 0x94, 0xb8, 0xb0, 0xdb,
	0xd0, 0x87, 0xe5, 0x4d, 0x50, 0x90, 0xdb, 0x50, 0x53, 0x8e, 0x4e, 0x37, 0x69, 0xed, 0x74, 0x8a,
	0x18, 0x54, 0x5c, 0x37, 0x95, 0xd1, 0xcf, 0x81, 0x98, 0xc9, 0xb1, 0xcb, 0x93, 0x4b, 0xf3, 0xa9,
	0x05, 0xf6, 0x5e, 0x28, 0xe4, 0x5c, 0x27, 0x52, 0x04, 0xcd, 0xbd, 0x33, 0x8e, 0xf2, 0x9f, 0x59,
	0xfd, 0xf7, 0x7b, 0xe4, 0x5d, 0xb0, 0x33, 0x7d, 0x28, 0xd2, 0x5a, 0xa2, 0x49, 0xad, 0x52, 0xc3,
	0x34, 0x49, 0x05, 0xb4, 0x87, 0x09, 0xf3, 0x65, 0x7e, 0xa0, 0xf7, 0xdf, 0xbc, 0xaf, 0x40, 0xc7,
	0xd0, 0x88, 0x82, 0x4a, 0xa8, 0x3d, 0x3b, 0x5d, 0xb4, 0x05, 0x51, 0x6e, 0x0b, 0x62, 0xd1, 0x16,
	0x44, 0xb9, 0xb2, 0x8a, 0xcb, 0x2b, 0xeb, 0x05, 0x66, 0x34, 0xa1, 0xae, 0xb4, 0xa2, 0xa0, 0x53,
	0xa8, 0xb9, 0xe1, 0xbf, 0xe5, 0x96, 0x26, 0xd4, 0x95, 0x32, 0x14, 0xf4, 0x37, 0x0b, 0xaa, 0x2a,
	0xb4, 0xd4, 0x95, 0x1b, 0xe1, 0xa3, 0xff, 0x15, 0x2f, 0x8c, 0x27, 0xb9, 0x3e, 0xfd, 0xaf, 0x78,
	0x46, 0x35, 0xd3, 0xff, 0x64, 0x13, 0xea, 0xa1, 0x37, 0xf1, 0x25, 0xd3, 0x7a, 0x2a, 0x6e, 0x2d,
	0xdc, 0xf5, 0xa5, 0x86, 0xaa, 0x01, 0x2d, 0x1b, 0x00, 0xf4, 0xbf, 0x82, 0x72, 0x54, 0x65, 0x28,
	0x6b, 0xfd, 0x35, 0x8e, 0xbb, 0x3c, 0x21, 0xb7, 0xa0, 0xc5, 0xd1, 0xc3, 0x79, 0xe8, 0x05, 0x3c,
	0x9a, 0x66, 0x35, 0xc2, 0xe6, 0x98, 0xb5, 0xc0, 0x22, 0x20, 0x9a, 0x46, 0x40, 0x5c, 0x53, 0xe1,
	0xe4, 0x49, 0x76, 0x26, 0x75, 0xe7, 0x6f, 0xba, 0x75, 0x8e, 0x2f, 0xd8, 0x99, 0xa4, 0xbf, 0xeb,
	0x5e, 0x99, 0x06, 0xf9, 0x7b, 0x8f, 0x24, 0x5d, 0xa4, 0x4f, 0xe2, 0xd7, 0xde, 0x09, 0x9f, 0x30,
	0x5d, 0xaa, 0xb3, 0xc2, 0xd8, 0x56, 0xdc, 0x7d, 0x3e, 0x61, 0xaa, 0xa2, 0x91, 0x4f, 0x81, 0xa4,
	0x03, 0x94, 0x97, 0xb0, 0x63, 0x76, 0x26, 0xbc, 0x40, 0xa5, 0x41, 0x5d, 0xbb, 0xb8, 0x9b, 0x4a,
	0x5c, 0x2d, 0x50, 0x86, 0x13, 0xaa, 0xac, 0x3e, 0x66, 0xfa, 0x1e, 0x5a, 0x3b, 0xeb, 0x7d, 0x3d,
	0xe8, 0xf6, 0x9f, 0xfb, 0xc7, 0xaa, 0x7d, 0xba, 0x5a, 0x46, 0x07, 0xaa, 0xc7, 0x66, 0x99, 0xf5,
	0x2e, 0xb5, 0xe3, 0xfe, 0x37, 0xb0, 0x71, 0x5e, 0x3b, 0x23, 0x2d, 0x68, 0x8c, 0x0e, 0x87, 0xc3,
	0xbd, 0xd1, 0xa8, 0xfb, 0x3f, 0xd2, 0x01, 0x3b, 0x05, 0xf1, 0xe8, 0xb8, 0x6b, 0x29, 0xd9, 0x13,
	0x9f, 0x07, 0xb3, 0x84, 0x75, 0xd7, 0x76, 0xfe, 0xa8, 0x43, 0x63, 0x94, 0x6e, 0x4c, 0x3e, 0x81,
	0xaa, 0xb6, 0xb4, 0x5b, 0xa8, 0xca, 0x6e, 0xdc, 0xf9, 0xff, 0x12, 0x07, 0x05, 0x79, 0x04, 0x76,
	0x91, 0x6c, 0x64, 0xb3, 0x90, 0x9b, 0x29, 0xef, 0x5c, 0x3d, 0x8f, 0x8d, 0x82, 0xf4, 0xa1, 0xa6,
	0x6b, 0x04, 0x59, 0xec, 0x9b, 0x57, 0x30, 0x87, 0x2c, 0xb3, 0x50, 0x90, 0xbb, 0xb0, 0xf6, 0xec,
	0x94, 0xac, 0x17, 0x12, 0x9d, 0xd4, 0xce, 0x95, 0x12, 0x9d, 0xc2, 0xdc, 0xd0, 0x80, 0xe9, 0xdc,
	0x33, 0x60, 0x69, 0x7a, 0x90, 0xaf, 0xf4, 0x8c, 0xaf, 0xeb, 0x3e, 0xd9, 0x58, 0x08, 0x17, 0x8d,
	0xc7, 0xd9, 0x3c, 0x87, 0x8b, 0x82, 0x4c, 0xe0, 0xda, 0x8a, 0xc6, 0x46, 0x6e, 0x17, 0x2b, 0x56,
	0xb7, 0x7e, 0xe7, 0xce, 0xe5, 0x20, 0x14, 0x24, 0xd4, 0x6f, 0x88, 0x15, 0xa3, 0x0d, 0xf9, 0xa8,
	0xd8, 0xe3, 0xc2, 0xe1, 0xc9, 0xf9, 0xf8, 0x9d, 0x70, 0x28, 0xc8, 0x10, 0xda, 0x66, 0xf7, 0x21,
	0xbd, 0x62, 0xe1, 0xd2, 0x84, 0xe7, 0x6c, 0xad, 0x90, 0xa0, 0x48, 0x23, 0x27, 0x9a, 0x96, 0x22,
	0x47, 0xcf, 0xb5, 0xa5, 0xc8, 0x49, 0x87, 0x47, 0xf2, 0x25, 0x34, 0xf2, 0x12, 0xf0, 0xc1, 0xe2,
	0x46, 0x8a, 0x19, 0xde, 0xd9, 0x78, 0x9b, 0x99, 0x7a, 0x2d, 0x1f, 0xfc, 0x0d, 0xaf, 0x19, 0x0f,
	0x25, 0xc3, 0x6b, 0xe6, 0x0b, 0x81, 0xf8, 0x70, 0xf5, 0xfc, 0x37, 0x19, 0xa1, 0xe6, 0x1d, 0x9d,
	0xff, 0xa2, 0x73, 0x6e, 0x5f, 0x8a, 0x41, 0x41, 0x1e, 0x40, 0x55, 0xbd, 0x1a, 0x8d, 0xe3, 0x67,
	0x2f, 0x56, 0xe3, 0xf8, 0xf9, 0xb3, 0xf2, 0x33, 0xeb, 0xf1, 0xe0, 0xc7, 0x07, 0xf3, 0x99, 0x1f,
	0xe1, 0xcc, 0x8f, 0xfa, 0xe3, 0x68, 0x20, 0x50, 0x0c, 0x78, 0x24, 0x59, 0x12, 0xf9, 0xc1, 0x60,
	0x1c, 0x87, 0x61, 0x1c, 0x0d, 0xf4, 0xd3, 0x37, 0x7f, 0x23, 0xbf, 0xac, 0x6b, 0xf2, 0x8b, 0xbf,
	0x02, 0x00, 0x00, 0xff, 0xff, 0x4c, 0xd5, 0x1d, 0x26, 0x3d, 0x0f, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// StorageClient is the client API for Storage service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type StorageClient interface {
	List(ctx context.Context, in *ListReq, opts ...grpc.CallOption) (*ListResp, error)
	CreateDir(ctx context.Context, in *CreateDirReq, opts ...grpc.CallOption) (*CreateDirResp, error)
	Exist(ctx context.Context, in *ExistReq, opts ...grpc.CallOption) (*ExistResp, error)
	Mv(ctx context.Context, in *MvReq, opts ...grpc.CallOption) (*MvResp, error)
	Rm(ctx context.Context, in *RmReq, opts ...grpc.CallOption) (*RmResp, error)
	Realpath(ctx context.Context, in *RealpathReq, opts ...grpc.CallOption) (*RealpathResp, error)
	SubmitUploadHpcFileTask(ctx context.Context, in *SubmitUploadHpcFileTaskReq, opts ...grpc.CallOption) (*SubmitUploadHpcFileTaskResp, error)
	GetUploadHpcFileTaskStatus(ctx context.Context, in *GetUploadHpcFileTaskStatusReq, opts ...grpc.CallOption) (*GetUploadHpcFileTaskStatusResp, error)
	InitUserHome(ctx context.Context, in *InitUserHomeReq, opts ...grpc.CallOption) (*InitUserHomeResp, error)
	Link(ctx context.Context, in *LinkReq, opts ...grpc.CallOption) (*LinkResp, error)
	SymLink(ctx context.Context, in *SymLinkReq, opts ...grpc.CallOption) (*SymLinkResp, error)
	HardLink(ctx context.Context, in *HardLinkReq, opts ...grpc.CallOption) (*HardLinkResp, error)
	GetLocalRootPathConfig(ctx context.Context, in *GetLocalRootPathConfigReq, opts ...grpc.CallOption) (*GetLocalRootPathConfigResp, error)
	Read(ctx context.Context, in *ReadReq, opts ...grpc.CallOption) (Storage_ReadClient, error)
}

type storageClient struct {
	cc *grpc.ClientConn
}

func NewStorageClient(cc *grpc.ClientConn) StorageClient {
	return &storageClient{cc}
}

func (c *storageClient) List(ctx context.Context, in *ListReq, opts ...grpc.CallOption) (*ListResp, error) {
	out := new(ListResp)
	err := c.cc.Invoke(ctx, "/storage.Storage/List", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *storageClient) CreateDir(ctx context.Context, in *CreateDirReq, opts ...grpc.CallOption) (*CreateDirResp, error) {
	out := new(CreateDirResp)
	err := c.cc.Invoke(ctx, "/storage.Storage/CreateDir", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *storageClient) Exist(ctx context.Context, in *ExistReq, opts ...grpc.CallOption) (*ExistResp, error) {
	out := new(ExistResp)
	err := c.cc.Invoke(ctx, "/storage.Storage/Exist", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *storageClient) Mv(ctx context.Context, in *MvReq, opts ...grpc.CallOption) (*MvResp, error) {
	out := new(MvResp)
	err := c.cc.Invoke(ctx, "/storage.Storage/Mv", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *storageClient) Rm(ctx context.Context, in *RmReq, opts ...grpc.CallOption) (*RmResp, error) {
	out := new(RmResp)
	err := c.cc.Invoke(ctx, "/storage.Storage/Rm", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *storageClient) Realpath(ctx context.Context, in *RealpathReq, opts ...grpc.CallOption) (*RealpathResp, error) {
	out := new(RealpathResp)
	err := c.cc.Invoke(ctx, "/storage.Storage/Realpath", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *storageClient) SubmitUploadHpcFileTask(ctx context.Context, in *SubmitUploadHpcFileTaskReq, opts ...grpc.CallOption) (*SubmitUploadHpcFileTaskResp, error) {
	out := new(SubmitUploadHpcFileTaskResp)
	err := c.cc.Invoke(ctx, "/storage.Storage/SubmitUploadHpcFileTask", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *storageClient) GetUploadHpcFileTaskStatus(ctx context.Context, in *GetUploadHpcFileTaskStatusReq, opts ...grpc.CallOption) (*GetUploadHpcFileTaskStatusResp, error) {
	out := new(GetUploadHpcFileTaskStatusResp)
	err := c.cc.Invoke(ctx, "/storage.Storage/GetUploadHpcFileTaskStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *storageClient) InitUserHome(ctx context.Context, in *InitUserHomeReq, opts ...grpc.CallOption) (*InitUserHomeResp, error) {
	out := new(InitUserHomeResp)
	err := c.cc.Invoke(ctx, "/storage.Storage/InitUserHome", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *storageClient) Link(ctx context.Context, in *LinkReq, opts ...grpc.CallOption) (*LinkResp, error) {
	out := new(LinkResp)
	err := c.cc.Invoke(ctx, "/storage.Storage/Link", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *storageClient) SymLink(ctx context.Context, in *SymLinkReq, opts ...grpc.CallOption) (*SymLinkResp, error) {
	out := new(SymLinkResp)
	err := c.cc.Invoke(ctx, "/storage.Storage/SymLink", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *storageClient) HardLink(ctx context.Context, in *HardLinkReq, opts ...grpc.CallOption) (*HardLinkResp, error) {
	out := new(HardLinkResp)
	err := c.cc.Invoke(ctx, "/storage.Storage/HardLink", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *storageClient) GetLocalRootPathConfig(ctx context.Context, in *GetLocalRootPathConfigReq, opts ...grpc.CallOption) (*GetLocalRootPathConfigResp, error) {
	out := new(GetLocalRootPathConfigResp)
	err := c.cc.Invoke(ctx, "/storage.Storage/GetLocalRootPathConfig", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *storageClient) Read(ctx context.Context, in *ReadReq, opts ...grpc.CallOption) (Storage_ReadClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Storage_serviceDesc.Streams[0], "/storage.Storage/Read", opts...)
	if err != nil {
		return nil, err
	}
	x := &storageReadClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Storage_ReadClient interface {
	Recv() (*ReadResp, error)
	grpc.ClientStream
}

type storageReadClient struct {
	grpc.ClientStream
}

func (x *storageReadClient) Recv() (*ReadResp, error) {
	m := new(ReadResp)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// StorageServer is the server API for Storage service.
type StorageServer interface {
	List(context.Context, *ListReq) (*ListResp, error)
	CreateDir(context.Context, *CreateDirReq) (*CreateDirResp, error)
	Exist(context.Context, *ExistReq) (*ExistResp, error)
	Mv(context.Context, *MvReq) (*MvResp, error)
	Rm(context.Context, *RmReq) (*RmResp, error)
	Realpath(context.Context, *RealpathReq) (*RealpathResp, error)
	SubmitUploadHpcFileTask(context.Context, *SubmitUploadHpcFileTaskReq) (*SubmitUploadHpcFileTaskResp, error)
	GetUploadHpcFileTaskStatus(context.Context, *GetUploadHpcFileTaskStatusReq) (*GetUploadHpcFileTaskStatusResp, error)
	InitUserHome(context.Context, *InitUserHomeReq) (*InitUserHomeResp, error)
	Link(context.Context, *LinkReq) (*LinkResp, error)
	SymLink(context.Context, *SymLinkReq) (*SymLinkResp, error)
	HardLink(context.Context, *HardLinkReq) (*HardLinkResp, error)
	GetLocalRootPathConfig(context.Context, *GetLocalRootPathConfigReq) (*GetLocalRootPathConfigResp, error)
	Read(*ReadReq, Storage_ReadServer) error
}

// UnimplementedStorageServer can be embedded to have forward compatible implementations.
type UnimplementedStorageServer struct {
}

func (*UnimplementedStorageServer) List(ctx context.Context, req *ListReq) (*ListResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method List not implemented")
}
func (*UnimplementedStorageServer) CreateDir(ctx context.Context, req *CreateDirReq) (*CreateDirResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateDir not implemented")
}
func (*UnimplementedStorageServer) Exist(ctx context.Context, req *ExistReq) (*ExistResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Exist not implemented")
}
func (*UnimplementedStorageServer) Mv(ctx context.Context, req *MvReq) (*MvResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Mv not implemented")
}
func (*UnimplementedStorageServer) Rm(ctx context.Context, req *RmReq) (*RmResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Rm not implemented")
}
func (*UnimplementedStorageServer) Realpath(ctx context.Context, req *RealpathReq) (*RealpathResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Realpath not implemented")
}
func (*UnimplementedStorageServer) SubmitUploadHpcFileTask(ctx context.Context, req *SubmitUploadHpcFileTaskReq) (*SubmitUploadHpcFileTaskResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SubmitUploadHpcFileTask not implemented")
}
func (*UnimplementedStorageServer) GetUploadHpcFileTaskStatus(ctx context.Context, req *GetUploadHpcFileTaskStatusReq) (*GetUploadHpcFileTaskStatusResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUploadHpcFileTaskStatus not implemented")
}
func (*UnimplementedStorageServer) InitUserHome(ctx context.Context, req *InitUserHomeReq) (*InitUserHomeResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InitUserHome not implemented")
}
func (*UnimplementedStorageServer) Link(ctx context.Context, req *LinkReq) (*LinkResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Link not implemented")
}
func (*UnimplementedStorageServer) SymLink(ctx context.Context, req *SymLinkReq) (*SymLinkResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SymLink not implemented")
}
func (*UnimplementedStorageServer) HardLink(ctx context.Context, req *HardLinkReq) (*HardLinkResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method HardLink not implemented")
}
func (*UnimplementedStorageServer) GetLocalRootPathConfig(ctx context.Context, req *GetLocalRootPathConfigReq) (*GetLocalRootPathConfigResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetLocalRootPathConfig not implemented")
}
func (*UnimplementedStorageServer) Read(req *ReadReq, srv Storage_ReadServer) error {
	return status.Errorf(codes.Unimplemented, "method Read not implemented")
}

func RegisterStorageServer(s *grpc.Server, srv StorageServer) {
	s.RegisterService(&_Storage_serviceDesc, srv)
}

func _Storage_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StorageServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/storage.Storage/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StorageServer).List(ctx, req.(*ListReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Storage_CreateDir_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateDirReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StorageServer).CreateDir(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/storage.Storage/CreateDir",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StorageServer).CreateDir(ctx, req.(*CreateDirReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Storage_Exist_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ExistReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StorageServer).Exist(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/storage.Storage/Exist",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StorageServer).Exist(ctx, req.(*ExistReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Storage_Mv_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MvReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StorageServer).Mv(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/storage.Storage/Mv",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StorageServer).Mv(ctx, req.(*MvReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Storage_Rm_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RmReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StorageServer).Rm(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/storage.Storage/Rm",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StorageServer).Rm(ctx, req.(*RmReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Storage_Realpath_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RealpathReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StorageServer).Realpath(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/storage.Storage/Realpath",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StorageServer).Realpath(ctx, req.(*RealpathReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Storage_SubmitUploadHpcFileTask_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SubmitUploadHpcFileTaskReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StorageServer).SubmitUploadHpcFileTask(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/storage.Storage/SubmitUploadHpcFileTask",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StorageServer).SubmitUploadHpcFileTask(ctx, req.(*SubmitUploadHpcFileTaskReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Storage_GetUploadHpcFileTaskStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUploadHpcFileTaskStatusReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StorageServer).GetUploadHpcFileTaskStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/storage.Storage/GetUploadHpcFileTaskStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StorageServer).GetUploadHpcFileTaskStatus(ctx, req.(*GetUploadHpcFileTaskStatusReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Storage_InitUserHome_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InitUserHomeReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StorageServer).InitUserHome(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/storage.Storage/InitUserHome",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StorageServer).InitUserHome(ctx, req.(*InitUserHomeReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Storage_Link_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LinkReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StorageServer).Link(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/storage.Storage/Link",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StorageServer).Link(ctx, req.(*LinkReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Storage_SymLink_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SymLinkReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StorageServer).SymLink(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/storage.Storage/SymLink",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StorageServer).SymLink(ctx, req.(*SymLinkReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Storage_HardLink_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HardLinkReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StorageServer).HardLink(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/storage.Storage/HardLink",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StorageServer).HardLink(ctx, req.(*HardLinkReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Storage_GetLocalRootPathConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetLocalRootPathConfigReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StorageServer).GetLocalRootPathConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/storage.Storage/GetLocalRootPathConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StorageServer).GetLocalRootPathConfig(ctx, req.(*GetLocalRootPathConfigReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Storage_Read_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ReadReq)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(StorageServer).Read(m, &storageReadServer{stream})
}

type Storage_ReadServer interface {
	Send(*ReadResp) error
	grpc.ServerStream
}

type storageReadServer struct {
	grpc.ServerStream
}

func (x *storageReadServer) Send(m *ReadResp) error {
	return x.ServerStream.SendMsg(m)
}

var _Storage_serviceDesc = grpc.ServiceDesc{
	ServiceName: "storage.Storage",
	HandlerType: (*StorageServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "List",
			Handler:    _Storage_List_Handler,
		},
		{
			MethodName: "CreateDir",
			Handler:    _Storage_CreateDir_Handler,
		},
		{
			MethodName: "Exist",
			Handler:    _Storage_Exist_Handler,
		},
		{
			MethodName: "Mv",
			Handler:    _Storage_Mv_Handler,
		},
		{
			MethodName: "Rm",
			Handler:    _Storage_Rm_Handler,
		},
		{
			MethodName: "Realpath",
			Handler:    _Storage_Realpath_Handler,
		},
		{
			MethodName: "SubmitUploadHpcFileTask",
			Handler:    _Storage_SubmitUploadHpcFileTask_Handler,
		},
		{
			MethodName: "GetUploadHpcFileTaskStatus",
			Handler:    _Storage_GetUploadHpcFileTaskStatus_Handler,
		},
		{
			MethodName: "InitUserHome",
			Handler:    _Storage_InitUserHome_Handler,
		},
		{
			MethodName: "Link",
			Handler:    _Storage_Link_Handler,
		},
		{
			MethodName: "SymLink",
			Handler:    _Storage_SymLink_Handler,
		},
		{
			MethodName: "HardLink",
			Handler:    _Storage_HardLink_Handler,
		},
		{
			MethodName: "GetLocalRootPathConfig",
			Handler:    _Storage_GetLocalRootPathConfig_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Read",
			Handler:       _Storage_Read_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "storage/storage.proto",
}
