// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/yuansuan/ticp/iPaaS/project-root/internal/storage/dao (interfaces: StorageSharedDirectoryDao)

// Package dao is a generated GoMock package.
package dao

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	model "github.com/yuansuan/ticp/iPaaS/project-root/internal/storage/dao/model"
	xorm "xorm.io/xorm"
)

// MockStorageSharedDirectoryDao is a mock of StorageSharedDirectoryDao interface.
type MockStorageSharedDirectoryDao struct {
	ctrl     *gomock.Controller
	recorder *MockStorageSharedDirectoryDaoMockRecorder
}

// MockStorageSharedDirectoryDaoMockRecorder is the mock recorder for MockStorageSharedDirectoryDao.
type MockStorageSharedDirectoryDaoMockRecorder struct {
	mock *MockStorageSharedDirectoryDao
}

// NewMockStorageSharedDirectoryDao creates a new mock instance.
func NewMockStorageSharedDirectoryDao(ctrl *gomock.Controller) *MockStorageSharedDirectoryDao {
	mock := &MockStorageSharedDirectoryDao{ctrl: ctrl}
	mock.recorder = &MockStorageSharedDirectoryDaoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockStorageSharedDirectoryDao) EXPECT() *MockStorageSharedDirectoryDaoMockRecorder {
	return m.recorder
}

// DeleteByPath mocks base method.
func (m *MockStorageSharedDirectoryDao) DeleteByPath(arg0 *xorm.Session, arg1 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteByPath", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteByPath indicates an expected call of DeleteByPath.
func (mr *MockStorageSharedDirectoryDaoMockRecorder) DeleteByPath(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteByPath", reflect.TypeOf((*MockStorageSharedDirectoryDao)(nil).DeleteByPath), arg0, arg1)
}

// GetByPath mocks base method.
func (m *MockStorageSharedDirectoryDao) GetByPath(arg0 *xorm.Session, arg1 string) (bool, *model.SharedDirectory, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetByPath", arg0, arg1)
	ret0, _ := ret[0].(bool)
	ret1, _ := ret[1].(*model.SharedDirectory)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// GetByPath indicates an expected call of GetByPath.
func (mr *MockStorageSharedDirectoryDaoMockRecorder) GetByPath(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetByPath", reflect.TypeOf((*MockStorageSharedDirectoryDao)(nil).GetByPath), arg0, arg1)
}

// Insert mocks base method.
func (m *MockStorageSharedDirectoryDao) Insert(arg0 *xorm.Session, arg1 *model.SharedDirectory) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Insert", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// Insert indicates an expected call of Insert.
func (mr *MockStorageSharedDirectoryDaoMockRecorder) Insert(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Insert", reflect.TypeOf((*MockStorageSharedDirectoryDao)(nil).Insert), arg0, arg1)
}

// ListByPathPrefix mocks base method.
func (m *MockStorageSharedDirectoryDao) ListByPathPrefix(arg0 *xorm.Session, arg1 string) ([]*model.SharedDirectory, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListByPathPrefix", arg0, arg1)
	ret0, _ := ret[0].([]*model.SharedDirectory)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListByPathPrefix indicates an expected call of ListByPathPrefix.
func (mr *MockStorageSharedDirectoryDaoMockRecorder) ListByPathPrefix(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListByPathPrefix", reflect.TypeOf((*MockStorageSharedDirectoryDao)(nil).ListByPathPrefix), arg0, arg1)
}

// ListByUserID mocks base method.
func (m *MockStorageSharedDirectoryDao) ListByUserID(arg0 *xorm.Session, arg1 string) ([]*model.SharedDirectory, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListByUserID", arg0, arg1)
	ret0, _ := ret[0].([]*model.SharedDirectory)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListByUserID indicates an expected call of ListByUserID.
func (mr *MockStorageSharedDirectoryDaoMockRecorder) ListByUserID(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListByUserID", reflect.TypeOf((*MockStorageSharedDirectoryDao)(nil).ListByUserID), arg0, arg1)
}
