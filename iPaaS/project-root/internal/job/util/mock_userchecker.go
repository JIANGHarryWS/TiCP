// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/yuansuan/ticp/iPaaS/project-root/internal/job/util (interfaces: UserChecker)

// Package util is a generated GoMock package.
package util

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	snowflake "github.com/yuansuan/ticp/common/go-kit/gin-boot/util/snowflake"
)

// MockUserChecker is a mock of UserChecker interface.
type MockUserChecker struct {
	ctrl     *gomock.Controller
	recorder *MockUserCheckerMockRecorder
}

// MockUserCheckerMockRecorder is the mock recorder for MockUserChecker.
type MockUserCheckerMockRecorder struct {
	mock *MockUserChecker
}

// NewMockUserChecker creates a new mock instance.
func NewMockUserChecker(ctrl *gomock.Controller) *MockUserChecker {
	mock := &MockUserChecker{ctrl: ctrl}
	mock.recorder = &MockUserCheckerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockUserChecker) EXPECT() *MockUserCheckerMockRecorder {
	return m.recorder
}

// IsYsProductUser mocks base method.
func (m *MockUserChecker) IsYsProductUser(arg0 snowflake.ID) (bool, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "IsYsProductUser", arg0)
	ret0, _ := ret[0].(bool)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// IsYsProductUser indicates an expected call of IsYsProductUser.
func (mr *MockUserCheckerMockRecorder) IsYsProductUser(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "IsYsProductUser", reflect.TypeOf((*MockUserChecker)(nil).IsYsProductUser), arg0)
}
