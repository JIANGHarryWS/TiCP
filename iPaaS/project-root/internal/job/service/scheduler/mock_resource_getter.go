// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/yuansuan/ticp/iPaaS/project-root/internal/job/service/scheduler (interfaces: ResourceGetter)

// Package scheduler is a generated GoMock package.
package scheduler

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	resource "github.com/yuansuan/ticp/common/project-root-api/hpc/v1/resource"
)

// MockResourceGetter is a mock of ResourceGetter interface.
type MockResourceGetter struct {
	ctrl     *gomock.Controller
	recorder *MockResourceGetterMockRecorder
}

// MockResourceGetterMockRecorder is the mock recorder for MockResourceGetter.
type MockResourceGetterMockRecorder struct {
	mock *MockResourceGetter
}

// NewMockResourceGetter creates a new mock instance.
func NewMockResourceGetter(ctrl *gomock.Controller) *MockResourceGetter {
	mock := &MockResourceGetter{ctrl: ctrl}
	mock.recorder = &MockResourceGetterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockResourceGetter) EXPECT() *MockResourceGetterMockRecorder {
	return m.recorder
}

// GetResource mocks base method.
func (m *MockResourceGetter) GetResource(arg0 string) (*resource.SystemGetResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetResource", arg0)
	ret0, _ := ret[0].(*resource.SystemGetResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetResource indicates an expected call of GetResource.
func (mr *MockResourceGetterMockRecorder) GetResource(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetResource", reflect.TypeOf((*MockResourceGetter)(nil).GetResource), arg0)
}
