syntax = "proto3";

import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";
import "protos/platform/ptype/page.proto";
import "validate/validate.proto";

package hydra_lcp;
option go_package = "github.com/yuansuan/ticp/iPaaS/sso/protos";

service HydraLcpService {
    rpc GetUserInfo(GetUserInfoReq) returns (UserInfo);
    rpc GetUserInfoBatch(GetUserInfoBatchReq) returns (UserInfoBatch);

    rpc ListUsers(ListUserReq) returns (UserInfoList);

    rpc UpdateName(UserInfoReq) returns (UserInfo);

    rpc QueryInfoByPhoneNumber(QueryInfoByPhoneNumberReq) returns (UserInfo);
    rpc UpdatePhoneNumber(UpdatePhoneNumberReq) returns (UserInfo);

    rpc UpdateEmail(UserInfoReq) returns (UserInfo);

    rpc UpdateWechatInfo(WechatInfoReq) returns (UserInfo);

    // 更新用户头像
    rpc UpdateHeadimg (UserInfoReq) returns (UserInfo);

    rpc UpdateRealName(UserInfoReq) returns (UserInfo);

    rpc CheckPassword(UserInfoReq) returns (google.protobuf.Empty);

    rpc CheckPassword2(CheckPasswordReq) returns (UserInfo);

    rpc UpdatePassword(UpdatePasswordReq) returns (google.protobuf.Empty);

    rpc UpdatePasswordByOld(UpdatePasswordByOldReq) returns (google.protobuf.Empty);

    // 直接重置用户的密码
    rpc ResetPassword(ResetPasswordReq) returns (google.protobuf.Empty);

    // 获取外部认证用户信息
    rpc GetExternalUserInfo(GetExternalUserInfoReq) returns (GetExternalUserInfoReply);

    // 检验外部认证用户是否存在
    rpc CheckExternalUserExist(CheckExternalUserExistReq) returns (CheckExternalUserExistReply);

    // 通过手机号添加用户
    rpc AddUserFromPhone(AddUserFromPhoneReq) returns (UserInfo);

    // 验证手机号与验证码
    rpc VerifyPhoneCode(VerifyPhoneCodeReq) returns (VerifyPhoneCodeResp);

    // 验证手机号与验证码
    rpc VerifyJwtToken(VerifyJwtTokenReq) returns (VerifyPhoneCodeResp);

    // 发送短信
    rpc SendSms(SendSmsReq) returns (SendSmsResp);

    // 获取微信公众号绑定数据
    rpc GetOffiaccountBinding (GetOffiaccountBindingReq) returns (OffiaccountBinding);

    // 为余额通知获取公众号关注列表数据
    rpc GetOffiaccountBalanceSubList (GetOffiaccountBalanceSubListReq) returns (GetOffiaccountBalanceSubListResp);

    // 发送公众号通知 单个发送
    rpc SendOffiaccountNotification (SendOffiaccountNotificationReq) returns (SendOffiaccountNotificationResp);

    // 批量发送余额通知
    rpc SendOffiaccountBalanceNotifications (SendOffiaccountBalanceNotificationsReq) returns (google.protobuf.Empty);

    // 发送可视化作业提醒
    rpc SendOffiaccountVisJobNotification (SendOffiaccountVisJobNotificationReq) returns (google.protobuf.Empty);

    // 解除微信公众号通知
    rpc DeactivateOffiaccountNotification (DeactivateOffiaccountNotificationReq) returns (DeactivateOffiaccountNotificationResp);

    // 添加作业到待通知列表
    rpc AddJobToNotify (AddJobToNotifyReq) returns (JobToNotify);

    rpc GetJobToNotify (GetJobToNotifyReq) returns (JobToNotify);

    // 设置待通知Job的通知状态
    rpc SetJobToNotifyStatus (SetJobToNotifyStatusReq) returns (SetJobToNotifyStatusResp);

    // GetOffiaccountAK Get Official Account access token from central server. Internal use only!
    rpc GetOffiaccountAK (GetOffiaccountAKReq) returns (GetOffiaccountAKResp);

    // 保存公众号菜单
    rpc SaveOffiaccountMenu (SaveOffiaccountMenuReq) returns (google.protobuf.Empty);

    rpc GetOffiaccountMenu (GetOffiaccountMenuReq) returns (OffiaccountMenu);

    // 创建关键词回复规则
    rpc AddOffiaccountReplyRule (AddOffiaccountReplyRuleReq) returns (google.protobuf.Empty);

    // 获取关键词回复规则
    rpc GetOffiaccountReplyRule (GetOffiaccountReplyRuleReq) returns (OffiaccountReplyRule);

    rpc UpdateOffiaccountReplyRule (OffiaccountReplyRule) returns (google.protobuf.Empty);

    // 获取关键词回复规则列表
    rpc GetOffiaccountReplyRuleList (GetOffiaccountReplyRuleListReq) returns (GetOffiaccountReplyRuleListResp);

    // 启用/禁用关键词回复规则
    rpc SwitchOffiaccountReplyRule (SwitchOffiaccountReplyRuleReq) returns (OffiaccountReplyRule);

    // 保存公众号订阅自动回复/收到消息回复
    rpc SaveOffiaccountSubGeneralReply (SaveOffiaccountSubGeneralReplyReq) returns (google.protobuf.Empty);

    // 获取公众号订阅自动回复/收到消息回复
    rpc GetOffiaccountSubGeneralReply (GetOffiaccountSubGeneralReplyReq) returns (OffiaccountReplyRule);

    // 删除公众号订阅自动回复/收到消息回复
    rpc DeleteOffiaccountSubGeneralReply (DeleteOffiaccountSubGeneralReplyReq) returns (google.protobuf.Empty);

    // 获取JSSDK的页面配置（签名）
    rpc GetJsConfig(GetJsConfigReq) returns (GetJsConfigResp);

    // 获取JSSDK的临时票据
    rpc GetJsTicket(GetJsTicketReq) returns (GetJsTicketResp);

    // 后台超级验证码
    rpc SuperVerificationCodeForOms (SuperVerificationCodeForOmsReq) returns (SuperVerificationCodeForOmsResp);

    // 在SSO中添加一个用户
    rpc AddUser(AddUserReq) returns (AddUserResp);

    rpc AddUser2(AddUserReq) returns (AddUserResp);
}

message UpdatePasswordByOldReq{
    string old_pwd =1;
    string new_pwd =2;
    string ys_id=3;
}

message ResetPasswordReq {
    string ysid = 1 [(validate.rules).string.min_len = 1];
    string new_pwd = 2 [(validate.rules).string.min_len = 1];
}

message GetUserInfoReq {
    // @inject_tag: `validate:"is_ysid"`
    string ysid = 1;
}

message GetUserInfoBatchReq {
    repeated string ysid = 1;
}

message ListUserReq {
    ptype.Page page = 1;
    string name = 2;
}

message UserInfoReq {
    // @inject_tag: `validate:"is_ysid"`
    string ysid = 1;
    string param = 2;
}

message CheckPasswordReq {
    // @inject_tag: `validate:"is_ysid"`
    string ysid = 1;
    string phone = 2;
    string email = 3;
    string password = 4;
}

message UserInfo {
    // @inject_tag: `validate:"is_ysid"`
    string ysid = 1;
    string name = 2;
    string email = 3;
    string phone = 4;
    string wechat_union_id = 5;
    string wechat_open_id = 6;
    string wechat_nick_name = 7;
    string real_name = 8;
    string user_name = 9;
    string display_user_name = 10;

    string headimg_url =11;
    string user_channel =12;
    string user_source =13;
    string user_referer=14;

    google.protobuf.Timestamp create_time=15;
    string company = 16;
}

message UserInfoBatch {
    repeated UserInfo user_info = 1;
}

message UserInfoList {
    repeated UserInfo user_info = 1;
    int64 total = 2;
}

message WechatInfoReq {
    // @inject_tag: `validate:"is_ysid"`
    string ysid = 1;
    string wechat_union_id = 2;
    string wechat_open_id = 3;
    string wechat_nick_name = 4;
}

message UpdatePasswordReq {
    // @inject_tag: `validate:"is_ysid"`
    string ysid = 1;
    string password_new = 2;
    string captcha = 3;
}

message QueryInfoByPhoneNumberReq {
    string phone_number = 1;
}

message UpdatePhoneNumberReq {
    // @inject_tag: `validate:"is_ysid"`
    string ysid = 1;
    string phone_number_new = 2;
    string captcha = 3;
}


message GetExternalUserInfoReq {
    // @inject_tag: `validate:"is_ysid"`
    string ysid = 1;
}

message GetExternalUserInfoReply {
    string ysid = 1;
    string user_name = 2;
}

message CheckExternalUserExistReq {
    string user_name = 1;
}

message CheckExternalUserExistReply{
    bool is_exist = 1;
}

// 通过手机号添加用户请求
message AddUserFromPhoneReq {
    string phone = 1;
    string product_id = 2;
    string company_id = 3;
}

message VerifyPhoneCodeReq {
    string phone = 1;
    string code = 2;
}

message VerifyJwtTokenReq {
    string phone = 1;
    string token = 2;
}

message VerifyPhoneCodeResp {
    bool is_succeed=1;
    string token=2;
}

message SendSmsReq {
    string phone = 1;
    // 模板名称：
    // ApplyTerminalSucess 申请终端操作成功
    // ApplyTerminalFailed 申请终端操作失败
    string tpl_name = 2;
    repeated string param = 3;
    // 产品ID
    // @inject_tag: `validate:"is_ysid"`
    string product_id = 4;
}

message SendSmsResp {
    bool is_succeed =1;
}

message GetOffiaccountBindingReq {
    // @inject_tag: `validate:"is_ysid"`
    string user_id = 1;
    string wechat_openid = 2;
    string platform = 3;
    string notification_type = 4;
    // @inject_tag: `validate:"is_ysid"`
    string company_id = 5;
}

message OffiaccountBinding {
    // @inject_tag: `validate:"is_ysid"`
    string id = 1;
    string platform = 2;
    // @inject_tag: `validate:"is_ysid"`
    string user_id = 3;
    // @inject_tag: `validate:"is_ysid"`
    string create_by = 4;
    // @inject_tag: `validate:"is_ysid"`
    string update_by = 5;
    // @inject_tag: `validate:"is_ysid"`
    string company_id = 6;
    string company_ids = 7;
    string wechat_openid = 8;
    string wechat_unionid = 9;
    string wechat_nickname = 10;
    string wechat_headimgurl = 11;
    string wechat_language = 12;
    int32 user_gender = 13;
    string user_city = 14;
    // job or balance
    string notification_type = 15;
    int32 notification_activated =16;
    int32 is_subscribed =17;
    string subscribe_scene =18;
    google.protobuf.Timestamp subscribe_time=19;
    google.protobuf.Timestamp unsubscribe_time=20;
    google.protobuf.Timestamp activate_time=21;
    google.protobuf.Timestamp deactivate_time=22;
}

message GetOffiaccountBalanceSubListReq {
    // @inject_tag: `validate:"is_ysid"`
    string user_id = 1;
    // @inject_tag: `validate:"is_ysid"`
    string company_id = 2;
    string platform = 3;
    ptype.Page page = 4;
}

message GetOffiaccountBalanceSubListResp {
    repeated OffiaccountBinding OffiaccountBindings = 1;
    ptype.PageCtx page_ctx = 2;
}

message NotificationContent {
    string first = 1;
    string keyword1 = 2;
    string keyword2 =3;
    string keyword3 = 4;
    string keyword4 = 5;
    string remark = 6;
}
message SendOffiaccountNotificationReq {
    // @inject_tag: `validate:"is_ysid"`
    string user_id = 1;
    string notification_type = 2;
    NotificationContent notification_content = 3;
}

message SendOffiaccountNotificationResp {
    int64 notification_id = 1;
}

message SendOffiaccountBalanceNotificationsReq {
    // @inject_tag: `validate:"is_ysid"`
    string company_id = 1;
    string platform = 2;
    string notification_type = 3;
    NotificationContent notification_content = 4;
}

message SendOffiaccountVisJobNotificationReq {
    // @inject_tag: `validate:"is_ysid"`
    string user_id = 1;
    // @inject_tag: `validate:"required"`
    string platform = 2;
    // @inject_tag: `validate:"required"`
    string notification_type = 3;
    NotificationContent notification_content = 4;
}

message DeactivateOffiaccountNotificationReq {
    string platform = 1;
    string user_id = 2;
    string wechat_openid = 3;
    string notification_type = 4;
    // @inject_tag: `validate:"is_ysid"`
    string company_id = 5;
}

message DeactivateOffiaccountNotificationResp {
    int64 update_num = 1;
}

message JobToNotify {
    string id = 1;
    string user_id = 2;
    string job_id = 3;
    int32 status = 4;
    google.protobuf.Timestamp create_time=5;
    google.protobuf.Timestamp update_time=6;
}

message AddJobToNotifyReq {
    // @inject_tag: `validate:"is_ysid"`
    string id = 1;
    // @inject_tag: `validate:"is_ysid"`
    string user_id = 2;
    // @inject_tag: `validate:"is_ysid"`
    string job_id = 3;
    // @inject_tag: `validate:"is_ysid"`
    string company_id = 4;
}

message GetJobToNotifyReq {
    // @inject_tag: `validate:"is_ysid"`
    string user_id = 1;
    // @inject_tag: `validate:"is_ysid"`
    string job_id = 2;
}

message SetJobToNotifyStatusReq {
    // @inject_tag: `validate:"is_ysid"`
    string user_id = 1;
    // @inject_tag: `validate:"is_ysid"`
    string job_id = 2;
    int32 status = 3;
}

message SetJobToNotifyStatusResp {
    int64 update_num = 1;
}

message GetOffiaccountAKReq {
    string app_id = 1;
}

message GetOffiaccountAKResp {
    string access_token = 1;
}

message SaveOffiaccountMenuReq {
    // @inject_tag: `validate:"is_ysid"`
    string id = 1;
    string app_id = 2;
    string button = 3;
    // @inject_tag: `validate:"is_ysid"`
    string creator_id = 4;
    bool   publish = 5;
}

message OffiaccountMenu {
    // @inject_tag: `validate:"is_ysid"`
    string id = 1;
    string app_id = 2;
    string button = 3;
    string creator_id = 4;
    google.protobuf.Timestamp create_time= 5;
    google.protobuf.Timestamp update_time= 6;
}

message GetOffiaccountMenuReq {
    string app_id = 1;
}


message OffiaccountReplyRule {
    // @inject_tag: `validate:"is_ysid"`
    string id = 1; 
    string rule_name = 2;
    string keywords = 3;
    string reply_list = 4;
    string reply_mode = 5;
    string is_active = 6;
    string creator_id = 7;
    google.protobuf.Timestamp create_time = 8;
    google.protobuf.Timestamp update_time = 9;
}

message AddOffiaccountReplyRuleReq {
    // @inject_tag: `validate:"is_ysid"`
    string user_id = 1;
    string rule_name = 2;
    string keywords = 3;
    string reply_list = 4;
    string reply_mode = 5;
}

message GetOffiaccountReplyRuleReq {
    // @inject_tag: `validate:"is_ysid"`
    string rule_id = 1;
}

message GetOffiaccountReplyRuleListReq {
    ptype.Page page = 1;
}

message GetOffiaccountReplyRuleListResp {
    repeated OffiaccountReplyRule OffiaccountReplyRules = 1;
    ptype.PageCtx page_ctx = 2;
}

message SwitchOffiaccountReplyRuleReq {
    // @inject_tag: `validate:"is_ysid"`
    string rule_id = 1;
}

message SaveOffiaccountSubGeneralReplyReq {
    // @inject_tag: `validate:"is_ysid"`
    string user_id = 1;
    string reply_mode = 2;
    string reply_list = 3;
}

message GetOffiaccountSubGeneralReplyReq {
    string reply_mode = 1;
}

message DeleteOffiaccountSubGeneralReplyReq {
    string reply_mode = 1;
}

message HandleIDMCallbackReq {
    string session_state = 1;
    string code = 2;
    string state = 3;
}

message HandleIDMCallbackResp {
    string url = 1;
}

message SyncIDMUserReq {
    repeated string idm_ids = 1;
}

message SyncIDMUserResp {
    repeated string idm_ids = 1;
}

message GetJsConfigReq {
    string uri = 1;
}

message GetJsConfigResp {
    string app_id = 1;
    int64 timestamp = 2;
    string nonce_str = 3;
    string signature = 4;
}

message GetJsTicketReq {
}

message GetJsTicketResp {
    string ticket = 1;
}



message SuperVerificationCodeForOmsReq{
    string phone = 1;
}

message SuperVerificationCodeForOmsResp{
    string code = 1;
}

message AddUserReq {
    string phone = 1;
    string password = 2;
    // 用户注册来源（可扩展）：xx活动注册、xx用户推荐
    string user_source = 3;
    // 用户注册渠道（可扩展）：远算云、智算未来、航天云网
    string user_channel = 4;
    string name = 5;
    string company_name = 6;
    string unified_social_creditCode = 7;
    string email = 8;
}

message AddUserResp {
    string user_id = 1;
}