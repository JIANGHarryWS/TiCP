// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.17.1
// source: protos/platform/company/user.proto

package company

import (
	ptype "github.com/yuansuan/ticp/iPaaS/sso/protos/platform/ptype"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 邀请用户状态
type InviteUserStatus int32

const (
	// 未知
	InviteUserStatus_INVITE_UNKNOWN InviteUserStatus = 0
	// 未确认
	InviteUserStatus_INVITE_UNCONFIRMED InviteUserStatus = 1
	// 同意
	InviteUserStatus_INVITE_ACCEPT InviteUserStatus = 2
	// 拒绝
	InviteUserStatus_INVITE_REJECT InviteUserStatus = 3
)

// Enum value maps for InviteUserStatus.
var (
	InviteUserStatus_name = map[int32]string{
		0: "INVITE_UNKNOWN",
		1: "INVITE_UNCONFIRMED",
		2: "INVITE_ACCEPT",
		3: "INVITE_REJECT",
	}
	InviteUserStatus_value = map[string]int32{
		"INVITE_UNKNOWN":     0,
		"INVITE_UNCONFIRMED": 1,
		"INVITE_ACCEPT":      2,
		"INVITE_REJECT":      3,
	}
)

func (x InviteUserStatus) Enum() *InviteUserStatus {
	p := new(InviteUserStatus)
	*p = x
	return p
}

func (x InviteUserStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (InviteUserStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_protos_platform_company_user_proto_enumTypes[0].Descriptor()
}

func (InviteUserStatus) Type() protoreflect.EnumType {
	return &file_protos_platform_company_user_proto_enumTypes[0]
}

func (x InviteUserStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use InviteUserStatus.Descriptor instead.
func (InviteUserStatus) EnumDescriptor() ([]byte, []int) {
	return file_protos_platform_company_user_proto_rawDescGZIP(), []int{0}
}

// 邀请用户是否成为管理员
type InviteUserToAdmin int32

const (
	// 未知
	InviteUserToAdmin_INVITE_TO_UNKNOW InviteUserToAdmin = 0
	// 非管理员
	InviteUserToAdmin_INVITE_NOT_ADMIN InviteUserToAdmin = 1
	// 管理员
	InviteUserToAdmin_INVITE_IS_ADMIN InviteUserToAdmin = 2
)

// Enum value maps for InviteUserToAdmin.
var (
	InviteUserToAdmin_name = map[int32]string{
		0: "INVITE_TO_UNKNOW",
		1: "INVITE_NOT_ADMIN",
		2: "INVITE_IS_ADMIN",
	}
	InviteUserToAdmin_value = map[string]int32{
		"INVITE_TO_UNKNOW": 0,
		"INVITE_NOT_ADMIN": 1,
		"INVITE_IS_ADMIN":  2,
	}
)

func (x InviteUserToAdmin) Enum() *InviteUserToAdmin {
	p := new(InviteUserToAdmin)
	*p = x
	return p
}

func (x InviteUserToAdmin) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (InviteUserToAdmin) Descriptor() protoreflect.EnumDescriptor {
	return file_protos_platform_company_user_proto_enumTypes[1].Descriptor()
}

func (InviteUserToAdmin) Type() protoreflect.EnumType {
	return &file_protos_platform_company_user_proto_enumTypes[1]
}

func (x InviteUserToAdmin) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use InviteUserToAdmin.Descriptor instead.
func (InviteUserToAdmin) EnumDescriptor() ([]byte, []int) {
	return file_protos_platform_company_user_proto_rawDescGZIP(), []int{1}
}

// 个人用户查询排序
type UserQueryOrderBy int32

const (
	UserQueryOrderBy_USER_ORDERBY_NULL UserQueryOrderBy = 0
	// 注册时间倒序
	UserQueryOrderBy_USER_ORDERBY_REGTIME_DESC UserQueryOrderBy = 1
	// 注册时间正序
	UserQueryOrderBy_USER_ORDERBY_REGTIME_ASC UserQueryOrderBy = 2
	// 最近登录时间倒序
	UserQueryOrderBy_USER_ORDERBY_LASTLOGINTIME_DESC UserQueryOrderBy = 3
	// 最近登录时间正序
	UserQueryOrderBy_USER_ORDERBY_LASTLOGINTIME_ASC UserQueryOrderBy = 4
)

// Enum value maps for UserQueryOrderBy.
var (
	UserQueryOrderBy_name = map[int32]string{
		0: "USER_ORDERBY_NULL",
		1: "USER_ORDERBY_REGTIME_DESC",
		2: "USER_ORDERBY_REGTIME_ASC",
		3: "USER_ORDERBY_LASTLOGINTIME_DESC",
		4: "USER_ORDERBY_LASTLOGINTIME_ASC",
	}
	UserQueryOrderBy_value = map[string]int32{
		"USER_ORDERBY_NULL":               0,
		"USER_ORDERBY_REGTIME_DESC":       1,
		"USER_ORDERBY_REGTIME_ASC":        2,
		"USER_ORDERBY_LASTLOGINTIME_DESC": 3,
		"USER_ORDERBY_LASTLOGINTIME_ASC":  4,
	}
)

func (x UserQueryOrderBy) Enum() *UserQueryOrderBy {
	p := new(UserQueryOrderBy)
	*p = x
	return p
}

func (x UserQueryOrderBy) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UserQueryOrderBy) Descriptor() protoreflect.EnumDescriptor {
	return file_protos_platform_company_user_proto_enumTypes[2].Descriptor()
}

func (UserQueryOrderBy) Type() protoreflect.EnumType {
	return &file_protos_platform_company_user_proto_enumTypes[2]
}

func (x UserQueryOrderBy) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UserQueryOrderBy.Descriptor instead.
func (UserQueryOrderBy) EnumDescriptor() ([]byte, []int) {
	return file_protos_platform_company_user_proto_rawDescGZIP(), []int{2}
}

// 是否加入企业
type WhetherJoinCompany int32

const (
	WhetherJoinCompany_UNKNOW_JOIN_COMPANY  WhetherJoinCompany = 0
	WhetherJoinCompany_NOT_JOIN_COMPANY     WhetherJoinCompany = 1
	WhetherJoinCompany_ALREADY_JOIN_COMPANY WhetherJoinCompany = 2
)

// Enum value maps for WhetherJoinCompany.
var (
	WhetherJoinCompany_name = map[int32]string{
		0: "UNKNOW_JOIN_COMPANY",
		1: "NOT_JOIN_COMPANY",
		2: "ALREADY_JOIN_COMPANY",
	}
	WhetherJoinCompany_value = map[string]int32{
		"UNKNOW_JOIN_COMPANY":  0,
		"NOT_JOIN_COMPANY":     1,
		"ALREADY_JOIN_COMPANY": 2,
	}
)

func (x WhetherJoinCompany) Enum() *WhetherJoinCompany {
	p := new(WhetherJoinCompany)
	*p = x
	return p
}

func (x WhetherJoinCompany) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WhetherJoinCompany) Descriptor() protoreflect.EnumDescriptor {
	return file_protos_platform_company_user_proto_enumTypes[3].Descriptor()
}

func (WhetherJoinCompany) Type() protoreflect.EnumType {
	return &file_protos_platform_company_user_proto_enumTypes[3]
}

func (x WhetherJoinCompany) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WhetherJoinCompany.Descriptor instead.
func (WhetherJoinCompany) EnumDescriptor() ([]byte, []int) {
	return file_protos_platform_company_user_proto_rawDescGZIP(), []int{3}
}

type User struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// 企业ID
	CompanyId string `protobuf:"bytes,2,opt,name=company_id,json=companyId,proto3" json:"company_id,omitempty"`
	// 姓名
	RealName string `protobuf:"bytes,3,opt,name=real_name,json=realName,proto3" json:"real_name,omitempty"`
	// 电话
	Phone string `protobuf:"bytes,4,opt,name=phone,proto3" json:"phone,omitempty"`
	// email
	Email string `protobuf:"bytes,5,opt,name=email,proto3" json:"email,omitempty"`
	// 资金账号ID
	AccountId string `protobuf:"bytes,6,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	// 创建时间
	CreateTime *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	// 更新时间
	UpdateTime *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	// 最近登录时间
	LastLoginTime *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=last_login_time,json=lastLoginTime,proto3" json:"last_login_time,omitempty"`
	// 用户名
	UserName string `protobuf:"bytes,10,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	// 显示用户名
	DisplayUserName string `protobuf:"bytes,11,opt,name=display_user_name,json=displayUserName,proto3" json:"display_user_name,omitempty"`
	// 最大空间数量
	MaxProjects int64 `protobuf:"varint,12,opt,name=max_projects,json=maxProjects,proto3" json:"max_projects,omitempty"`
}

func (x *User) Reset() {
	*x = User{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_platform_company_user_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User) ProtoMessage() {}

func (x *User) ProtoReflect() protoreflect.Message {
	mi := &file_protos_platform_company_user_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User.ProtoReflect.Descriptor instead.
func (*User) Descriptor() ([]byte, []int) {
	return file_protos_platform_company_user_proto_rawDescGZIP(), []int{0}
}

func (x *User) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *User) GetCompanyId() string {
	if x != nil {
		return x.CompanyId
	}
	return ""
}

func (x *User) GetRealName() string {
	if x != nil {
		return x.RealName
	}
	return ""
}

func (x *User) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *User) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *User) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *User) GetCreateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CreateTime
	}
	return nil
}

func (x *User) GetUpdateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdateTime
	}
	return nil
}

func (x *User) GetLastLoginTime() *timestamppb.Timestamp {
	if x != nil {
		return x.LastLoginTime
	}
	return nil
}

func (x *User) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *User) GetDisplayUserName() string {
	if x != nil {
		return x.DisplayUserName
	}
	return ""
}

func (x *User) GetMaxProjects() int64 {
	if x != nil {
		return x.MaxProjects
	}
	return 0
}

type InviteUser struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// 企业ID
	CompanyId string `protobuf:"bytes,2,opt,name=company_id,json=companyId,proto3" json:"company_id,omitempty"`
	// 企业名称
	CompanyName string `protobuf:"bytes,3,opt,name=company_name,json=companyName,proto3" json:"company_name,omitempty"`
	// 姓名
	RealName string `protobuf:"bytes,4,opt,name=real_name,json=realName,proto3" json:"real_name,omitempty"`
	// 用户ID
	UserId string `protobuf:"bytes,5,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// 邀请状态
	Status InviteUserStatus `protobuf:"varint,6,opt,name=status,proto3,enum=company.InviteUserStatus" json:"status,omitempty"`
	// 是否初始化为管理员 1否；2是；
	IsAdmin    InviteUserToAdmin      `protobuf:"varint,7,opt,name=is_admin,json=isAdmin,proto3,enum=company.InviteUserToAdmin" json:"is_admin,omitempty"`
	CreateUid  string                 `protobuf:"bytes,8,opt,name=create_uid,json=createUid,proto3" json:"create_uid,omitempty"`
	CreateName string                 `protobuf:"bytes,9,opt,name=create_name,json=createName,proto3" json:"create_name,omitempty"`
	CreateTime *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	UpdateTime *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	// 电话
	Phone string `protobuf:"bytes,12,opt,name=phone,proto3" json:"phone,omitempty"`
	// 角色ID
	RoleId       string `protobuf:"bytes,13,opt,name=role_id,json=roleId,proto3" json:"role_id,omitempty"`
	DepartmentId string `protobuf:"bytes,14,opt,name=department_id,json=departmentId,proto3" json:"department_id,omitempty"`
	// 最大项目数量
	MaxProjects int64 `protobuf:"varint,15,opt,name=max_projects,json=maxProjects,proto3" json:"max_projects,omitempty"`
}

func (x *InviteUser) Reset() {
	*x = InviteUser{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_platform_company_user_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InviteUser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InviteUser) ProtoMessage() {}

func (x *InviteUser) ProtoReflect() protoreflect.Message {
	mi := &file_protos_platform_company_user_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InviteUser.ProtoReflect.Descriptor instead.
func (*InviteUser) Descriptor() ([]byte, []int) {
	return file_protos_platform_company_user_proto_rawDescGZIP(), []int{1}
}

func (x *InviteUser) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *InviteUser) GetCompanyId() string {
	if x != nil {
		return x.CompanyId
	}
	return ""
}

func (x *InviteUser) GetCompanyName() string {
	if x != nil {
		return x.CompanyName
	}
	return ""
}

func (x *InviteUser) GetRealName() string {
	if x != nil {
		return x.RealName
	}
	return ""
}

func (x *InviteUser) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *InviteUser) GetStatus() InviteUserStatus {
	if x != nil {
		return x.Status
	}
	return InviteUserStatus_INVITE_UNKNOWN
}

func (x *InviteUser) GetIsAdmin() InviteUserToAdmin {
	if x != nil {
		return x.IsAdmin
	}
	return InviteUserToAdmin_INVITE_TO_UNKNOW
}

func (x *InviteUser) GetCreateUid() string {
	if x != nil {
		return x.CreateUid
	}
	return ""
}

func (x *InviteUser) GetCreateName() string {
	if x != nil {
		return x.CreateName
	}
	return ""
}

func (x *InviteUser) GetCreateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CreateTime
	}
	return nil
}

func (x *InviteUser) GetUpdateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdateTime
	}
	return nil
}

func (x *InviteUser) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *InviteUser) GetRoleId() string {
	if x != nil {
		return x.RoleId
	}
	return ""
}

func (x *InviteUser) GetDepartmentId() string {
	if x != nil {
		return x.DepartmentId
	}
	return ""
}

func (x *InviteUser) GetMaxProjects() int64 {
	if x != nil {
		return x.MaxProjects
	}
	return 0
}

// 企业邀请用户请求参数
type InviteUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: `validate:"is_ysid,required"`
	CompanyId string `protobuf:"bytes,1,opt,name=company_id,json=companyId,proto3" json:"company_id,omitempty"`
	// @inject_tag: `validate:"is_ysid,required"`
	UserId    string            `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	IsAdmin   InviteUserToAdmin `protobuf:"varint,3,opt,name=is_admin,json=isAdmin,proto3,enum=company.InviteUserToAdmin" json:"is_admin,omitempty"`
	CreateUid string            `protobuf:"bytes,4,opt,name=create_uid,json=createUid,proto3" json:"create_uid,omitempty"`
	// @inject_tag: `validate:"required"`
	CreateName string `protobuf:"bytes,5,opt,name=create_name,json=createName,proto3" json:"create_name,omitempty"`
	// 电话
	Phone string `protobuf:"bytes,6,opt,name=phone,proto3" json:"phone,omitempty"`
	// 姓名
	RealName string `protobuf:"bytes,7,opt,name=real_name,json=realName,proto3" json:"real_name,omitempty"`
	// @inject_tag: `validate:"is_ysid"`
	DepartmentId string `protobuf:"bytes,8,opt,name=department_id,json=departmentId,proto3" json:"department_id,omitempty"`
}

func (x *InviteUserRequest) Reset() {
	*x = InviteUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_platform_company_user_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InviteUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InviteUserRequest) ProtoMessage() {}

func (x *InviteUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_platform_company_user_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InviteUserRequest.ProtoReflect.Descriptor instead.
func (*InviteUserRequest) Descriptor() ([]byte, []int) {
	return file_protos_platform_company_user_proto_rawDescGZIP(), []int{2}
}

func (x *InviteUserRequest) GetCompanyId() string {
	if x != nil {
		return x.CompanyId
	}
	return ""
}

func (x *InviteUserRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *InviteUserRequest) GetIsAdmin() InviteUserToAdmin {
	if x != nil {
		return x.IsAdmin
	}
	return InviteUserToAdmin_INVITE_TO_UNKNOW
}

func (x *InviteUserRequest) GetCreateUid() string {
	if x != nil {
		return x.CreateUid
	}
	return ""
}

func (x *InviteUserRequest) GetCreateName() string {
	if x != nil {
		return x.CreateName
	}
	return ""
}

func (x *InviteUserRequest) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *InviteUserRequest) GetRealName() string {
	if x != nil {
		return x.RealName
	}
	return ""
}

func (x *InviteUserRequest) GetDepartmentId() string {
	if x != nil {
		return x.DepartmentId
	}
	return ""
}

// 企业邀请用户返回结果
type InviteUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *InviteUserResponse) Reset() {
	*x = InviteUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_platform_company_user_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InviteUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InviteUserResponse) ProtoMessage() {}

func (x *InviteUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_platform_company_user_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InviteUserResponse.ProtoReflect.Descriptor instead.
func (*InviteUserResponse) Descriptor() ([]byte, []int) {
	return file_protos_platform_company_user_proto_rawDescGZIP(), []int{3}
}

func (x *InviteUserResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// 用户确认邀请请求
type ConfirmInviteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: `validate:"is_ysid,required"`
	CompanyId string `protobuf:"bytes,1,opt,name=company_id,json=companyId,proto3" json:"company_id,omitempty"`
	// @inject_tag: `validate:"is_ysid,required"`
	UserId string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// @inject_tag: `validate:"required"`
	Status InviteUserStatus `protobuf:"varint,3,opt,name=status,proto3,enum=company.InviteUserStatus" json:"status,omitempty"`
	// 姓名
	RealName string `protobuf:"bytes,4,opt,name=real_name,json=realName,proto3" json:"real_name,omitempty"`
	// email
	Email string `protobuf:"bytes,5,opt,name=email,proto3" json:"email,omitempty"`
	// 电话
	Phone string `protobuf:"bytes,6,opt,name=phone,proto3" json:"phone,omitempty"`
}

func (x *ConfirmInviteRequest) Reset() {
	*x = ConfirmInviteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_platform_company_user_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfirmInviteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfirmInviteRequest) ProtoMessage() {}

func (x *ConfirmInviteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_platform_company_user_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfirmInviteRequest.ProtoReflect.Descriptor instead.
func (*ConfirmInviteRequest) Descriptor() ([]byte, []int) {
	return file_protos_platform_company_user_proto_rawDescGZIP(), []int{4}
}

func (x *ConfirmInviteRequest) GetCompanyId() string {
	if x != nil {
		return x.CompanyId
	}
	return ""
}

func (x *ConfirmInviteRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ConfirmInviteRequest) GetStatus() InviteUserStatus {
	if x != nil {
		return x.Status
	}
	return InviteUserStatus_INVITE_UNKNOWN
}

func (x *ConfirmInviteRequest) GetRealName() string {
	if x != nil {
		return x.RealName
	}
	return ""
}

func (x *ConfirmInviteRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *ConfirmInviteRequest) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

// 用户确认邀请结果
type ConfirmInviteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// success 成功 ； fail 失败
	Msg string `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *ConfirmInviteResponse) Reset() {
	*x = ConfirmInviteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_platform_company_user_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfirmInviteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfirmInviteResponse) ProtoMessage() {}

func (x *ConfirmInviteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_platform_company_user_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfirmInviteResponse.ProtoReflect.Descriptor instead.
func (*ConfirmInviteResponse) Descriptor() ([]byte, []int) {
	return file_protos_platform_company_user_proto_rawDescGZIP(), []int{5}
}

func (x *ConfirmInviteResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

// 用户邀请信息请求
type GetUserInviteInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: `validate:"is_ysid,required"`
	InviteId string `protobuf:"bytes,1,opt,name=invite_id,json=inviteId,proto3" json:"invite_id,omitempty"`
	// @inject_tag: `validate:"is_ysid,required"`
	UserId string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *GetUserInviteInfoRequest) Reset() {
	*x = GetUserInviteInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_platform_company_user_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserInviteInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserInviteInfoRequest) ProtoMessage() {}

func (x *GetUserInviteInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_platform_company_user_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserInviteInfoRequest.ProtoReflect.Descriptor instead.
func (*GetUserInviteInfoRequest) Descriptor() ([]byte, []int) {
	return file_protos_platform_company_user_proto_rawDescGZIP(), []int{6}
}

func (x *GetUserInviteInfoRequest) GetInviteId() string {
	if x != nil {
		return x.InviteId
	}
	return ""
}

func (x *GetUserInviteInfoRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

// 用户邀请信息结果
type GetUserInviteInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *InviteUser `protobuf:"bytes,1,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *GetUserInviteInfoResponse) Reset() {
	*x = GetUserInviteInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_platform_company_user_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserInviteInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserInviteInfoResponse) ProtoMessage() {}

func (x *GetUserInviteInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_platform_company_user_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserInviteInfoResponse.ProtoReflect.Descriptor instead.
func (*GetUserInviteInfoResponse) Descriptor() ([]byte, []int) {
	return file_protos_platform_company_user_proto_rawDescGZIP(), []int{7}
}

func (x *GetUserInviteInfoResponse) GetInfo() *InviteUser {
	if x != nil {
		return x.Info
	}
	return nil
}

// 用户信息修改请求
type UserModifyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: `validate:"is_ysid,required"`
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// 电话
	Phone string `protobuf:"bytes,2,opt,name=phone,proto3" json:"phone,omitempty"`
	// 姓名
	RealName string `protobuf:"bytes,3,opt,name=real_name,json=realName,proto3" json:"real_name,omitempty"`
	// email
	Email string `protobuf:"bytes,4,opt,name=email,proto3" json:"email,omitempty"`
	// 最后登录时间
	LastLoginTime *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=last_login_time,json=lastLoginTime,proto3" json:"last_login_time,omitempty"`
	// 最大项目数量
	MaxProjects int64 `protobuf:"varint,6,opt,name=max_projects,json=maxProjects,proto3" json:"max_projects,omitempty"`
}

func (x *UserModifyRequest) Reset() {
	*x = UserModifyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_platform_company_user_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserModifyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserModifyRequest) ProtoMessage() {}

func (x *UserModifyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_platform_company_user_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserModifyRequest.ProtoReflect.Descriptor instead.
func (*UserModifyRequest) Descriptor() ([]byte, []int) {
	return file_protos_platform_company_user_proto_rawDescGZIP(), []int{8}
}

func (x *UserModifyRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UserModifyRequest) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *UserModifyRequest) GetRealName() string {
	if x != nil {
		return x.RealName
	}
	return ""
}

func (x *UserModifyRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *UserModifyRequest) GetLastLoginTime() *timestamppb.Timestamp {
	if x != nil {
		return x.LastLoginTime
	}
	return nil
}

func (x *UserModifyRequest) GetMaxProjects() int64 {
	if x != nil {
		return x.MaxProjects
	}
	return 0
}

// 用户信息修改结果
type UserModifyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// success 成功 ； fail 失败
	Msg string `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *UserModifyResponse) Reset() {
	*x = UserModifyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_platform_company_user_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserModifyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserModifyResponse) ProtoMessage() {}

func (x *UserModifyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_platform_company_user_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserModifyResponse.ProtoReflect.Descriptor instead.
func (*UserModifyResponse) Descriptor() ([]byte, []int) {
	return file_protos_platform_company_user_proto_rawDescGZIP(), []int{9}
}

func (x *UserModifyResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

// 用户初始化请求
type UserInitRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: `validate:"is_ysid,required"`
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// @inject_tag: `validate:"required"`
	Phone string `protobuf:"bytes,2,opt,name=phone,proto3" json:"phone,omitempty"`
	// 姓名
	RealName string `protobuf:"bytes,3,opt,name=real_name,json=realName,proto3" json:"real_name,omitempty"`
	// email
	Email string `protobuf:"bytes,4,opt,name=email,proto3" json:"email,omitempty"`
	// 用户名
	UserName string `protobuf:"bytes,5,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	// 用户产品ID,初始化默认工作空间使用，默认为远算云
	// @inject_tag: `validate:"is_ysid"`
	ProductId string `protobuf:"bytes,6,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
}

func (x *UserInitRequest) Reset() {
	*x = UserInitRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_platform_company_user_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserInitRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserInitRequest) ProtoMessage() {}

func (x *UserInitRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_platform_company_user_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserInitRequest.ProtoReflect.Descriptor instead.
func (*UserInitRequest) Descriptor() ([]byte, []int) {
	return file_protos_platform_company_user_proto_rawDescGZIP(), []int{10}
}

func (x *UserInitRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UserInitRequest) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *UserInitRequest) GetRealName() string {
	if x != nil {
		return x.RealName
	}
	return ""
}

func (x *UserInitRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *UserInitRequest) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *UserInitRequest) GetProductId() string {
	if x != nil {
		return x.ProductId
	}
	return ""
}

// 用户初始化结果
type UserInitResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// success 成功 ； fail 失败
	Msg string `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *UserInitResponse) Reset() {
	*x = UserInitResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_platform_company_user_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserInitResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserInitResponse) ProtoMessage() {}

func (x *UserInitResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_platform_company_user_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserInitResponse.ProtoReflect.Descriptor instead.
func (*UserInitResponse) Descriptor() ([]byte, []int) {
	return file_protos_platform_company_user_proto_rawDescGZIP(), []int{11}
}

func (x *UserInitResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

// 获取用户角色及权限请求
type GetUserRoleAndPermissonRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: `validate:"is_ysid,required"`
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// @inject_tag: `validate:"is_ysid,required"`
	CompanyId string `protobuf:"bytes,2,opt,name=company_id,json=companyId,proto3" json:"company_id,omitempty"`
}

func (x *GetUserRoleAndPermissonRequest) Reset() {
	*x = GetUserRoleAndPermissonRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_platform_company_user_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserRoleAndPermissonRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserRoleAndPermissonRequest) ProtoMessage() {}

func (x *GetUserRoleAndPermissonRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_platform_company_user_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserRoleAndPermissonRequest.ProtoReflect.Descriptor instead.
func (*GetUserRoleAndPermissonRequest) Descriptor() ([]byte, []int) {
	return file_protos_platform_company_user_proto_rawDescGZIP(), []int{12}
}

func (x *GetUserRoleAndPermissonRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetUserRoleAndPermissonRequest) GetCompanyId() string {
	if x != nil {
		return x.CompanyId
	}
	return ""
}

// 获取用户角色及权限结果
type GetUserRoleAndPermissonResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 角色ID
	RoleList []*Role `protobuf:"bytes,1,rep,name=role_list,json=roleList,proto3" json:"role_list,omitempty"`
	// 权限列表
	PermissionList []*Permission `protobuf:"bytes,2,rep,name=permission_list,json=permissionList,proto3" json:"permission_list,omitempty"`
}

func (x *GetUserRoleAndPermissonResponse) Reset() {
	*x = GetUserRoleAndPermissonResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_platform_company_user_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserRoleAndPermissonResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserRoleAndPermissonResponse) ProtoMessage() {}

func (x *GetUserRoleAndPermissonResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_platform_company_user_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserRoleAndPermissonResponse.ProtoReflect.Descriptor instead.
func (*GetUserRoleAndPermissonResponse) Descriptor() ([]byte, []int) {
	return file_protos_platform_company_user_proto_rawDescGZIP(), []int{13}
}

func (x *GetUserRoleAndPermissonResponse) GetRoleList() []*Role {
	if x != nil {
		return x.RoleList
	}
	return nil
}

func (x *GetUserRoleAndPermissonResponse) GetPermissionList() []*Permission {
	if x != nil {
		return x.PermissionList
	}
	return nil
}

// 验证用户权限请求
type CheckUserPermissonRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: `validate:"is_ysid,required"`
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// @inject_tag: `validate:"is_ysid,required"`
	CompanyId string `protobuf:"bytes,2,opt,name=company_id,json=companyId,proto3" json:"company_id,omitempty"`
	// permission code
	// @inject_tag: `validate:"required"`
	PermissionCode string `protobuf:"bytes,3,opt,name=permission_code,json=permissionCode,proto3" json:"permission_code,omitempty"`
}

func (x *CheckUserPermissonRequest) Reset() {
	*x = CheckUserPermissonRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_platform_company_user_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckUserPermissonRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckUserPermissonRequest) ProtoMessage() {}

func (x *CheckUserPermissonRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_platform_company_user_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckUserPermissonRequest.ProtoReflect.Descriptor instead.
func (*CheckUserPermissonRequest) Descriptor() ([]byte, []int) {
	return file_protos_platform_company_user_proto_rawDescGZIP(), []int{14}
}

func (x *CheckUserPermissonRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *CheckUserPermissonRequest) GetCompanyId() string {
	if x != nil {
		return x.CompanyId
	}
	return ""
}

func (x *CheckUserPermissonRequest) GetPermissionCode() string {
	if x != nil {
		return x.PermissionCode
	}
	return ""
}

// 验证用户权限结果
type CheckUserPermissonResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 验证结果； true 有权限； false 无权限
	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *CheckUserPermissonResponse) Reset() {
	*x = CheckUserPermissonResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_platform_company_user_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckUserPermissonResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckUserPermissonResponse) ProtoMessage() {}

func (x *CheckUserPermissonResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_platform_company_user_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckUserPermissonResponse.ProtoReflect.Descriptor instead.
func (*CheckUserPermissonResponse) Descriptor() ([]byte, []int) {
	return file_protos_platform_company_user_proto_rawDescGZIP(), []int{15}
}

func (x *CheckUserPermissonResponse) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

// 获取用户企业信息请求
type GetUserCompanyInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: `validate:"is_ysid,required"`
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// @inject_tag: `validate:"is_ysid"`
	ProductId string `protobuf:"bytes,2,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
}

func (x *GetUserCompanyInfoRequest) Reset() {
	*x = GetUserCompanyInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_platform_company_user_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserCompanyInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserCompanyInfoRequest) ProtoMessage() {}

func (x *GetUserCompanyInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_platform_company_user_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserCompanyInfoRequest.ProtoReflect.Descriptor instead.
func (*GetUserCompanyInfoRequest) Descriptor() ([]byte, []int) {
	return file_protos_platform_company_user_proto_rawDescGZIP(), []int{16}
}

func (x *GetUserCompanyInfoRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetUserCompanyInfoRequest) GetProductId() string {
	if x != nil {
		return x.ProductId
	}
	return ""
}

// 获取用户企业信息结果
type GetUserCompanyInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 企业ID
	CompanyId string `protobuf:"bytes,1,opt,name=company_id,json=companyId,proto3" json:"company_id,omitempty"`
	// 企业名称
	CompanyName string `protobuf:"bytes,2,opt,name=company_name,json=companyName,proto3" json:"company_name,omitempty"`
}

func (x *GetUserCompanyInfoResponse) Reset() {
	*x = GetUserCompanyInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_platform_company_user_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserCompanyInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserCompanyInfoResponse) ProtoMessage() {}

func (x *GetUserCompanyInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_platform_company_user_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserCompanyInfoResponse.ProtoReflect.Descriptor instead.
func (*GetUserCompanyInfoResponse) Descriptor() ([]byte, []int) {
	return file_protos_platform_company_user_proto_rawDescGZIP(), []int{17}
}

func (x *GetUserCompanyInfoResponse) GetCompanyId() string {
	if x != nil {
		return x.CompanyId
	}
	return ""
}

func (x *GetUserCompanyInfoResponse) GetCompanyName() string {
	if x != nil {
		return x.CompanyName
	}
	return ""
}

// 获取用户信息请求
type GetUserInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: `validate:"is_ysid,required"`
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// @inject_tag: `validate:"is_ysid"`
	ProductId string `protobuf:"bytes,2,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
}

func (x *GetUserInfoRequest) Reset() {
	*x = GetUserInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_platform_company_user_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserInfoRequest) ProtoMessage() {}

func (x *GetUserInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_platform_company_user_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserInfoRequest.ProtoReflect.Descriptor instead.
func (*GetUserInfoRequest) Descriptor() ([]byte, []int) {
	return file_protos_platform_company_user_proto_rawDescGZIP(), []int{18}
}

func (x *GetUserInfoRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetUserInfoRequest) GetProductId() string {
	if x != nil {
		return x.ProductId
	}
	return ""
}

// 获取用户信息结果
type GetUserInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 用户ID
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// 电话
	Phone string `protobuf:"bytes,2,opt,name=phone,proto3" json:"phone,omitempty"`
	// 姓名
	RealName string `protobuf:"bytes,3,opt,name=real_name,json=realName,proto3" json:"real_name,omitempty"`
	// 资金账户ID
	AccountId string `protobuf:"bytes,4,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	// 企业ID
	CompanyId string `protobuf:"bytes,5,opt,name=company_id,json=companyId,proto3" json:"company_id,omitempty"`
	// 企业名称
	CompanyName string `protobuf:"bytes,6,opt,name=company_name,json=companyName,proto3" json:"company_name,omitempty"`
	// 盒子访问域名
	CompanyBoxDomain string        `protobuf:"bytes,7,opt,name=company_box_domain,json=companyBoxDomain,proto3" json:"company_box_domain,omitempty"`
	PermissionList   []*Permission `protobuf:"bytes,8,rep,name=permission_list,json=permissionList,proto3" json:"permission_list,omitempty"`
	PublicBoxDomain  string        `protobuf:"bytes,9,opt,name=public_box_domain,json=publicBoxDomain,proto3" json:"public_box_domain,omitempty"`
	// 用户名
	UserName string `protobuf:"bytes,10,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	// 显示用户名
	DisplayUserName string `protobuf:"bytes,11,opt,name=display_user_name,json=displayUserName,proto3" json:"display_user_name,omitempty"`
	// 用户来源
	UserSource string `protobuf:"bytes,12,opt,name=user_source,json=userSource,proto3" json:"user_source,omitempty"`
	// 用户渠道
	UserChannel string `protobuf:"bytes,13,opt,name=user_channel,json=userChannel,proto3" json:"user_channel,omitempty"`
	// 推荐用户id
	UserReferer string `protobuf:"bytes,14,opt,name=user_referer,json=userReferer,proto3" json:"user_referer,omitempty"`
	// 用户头像
	HeadimgUrl string `protobuf:"bytes,15,opt,name=headimg_url,json=headimgUrl,proto3" json:"headimg_url,omitempty"`
	// 微信UnionId
	WechatUnionId string `protobuf:"bytes,16,opt,name=wechat_union_id,json=wechatUnionId,proto3" json:"wechat_union_id,omitempty"`
	// 用户创建时间
	CreateTime string `protobuf:"bytes,17,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	// 用户email
	Email string `protobuf:"bytes,18,opt,name=email,proto3" json:"email,omitempty"`
	// 用户微信昵称
	WechatNickName string `protobuf:"bytes,19,opt,name=wechat_nick_name,json=wechatNickName,proto3" json:"wechat_nick_name,omitempty"`
	// 前端自定义码(新手引导执行步骤、设置等)
	FeCode int64 `protobuf:"varint,20,opt,name=fe_code,json=feCode,proto3" json:"fe_code,omitempty"`
	// 部门ID
	DepartmentId string `protobuf:"bytes,21,opt,name=department_id,json=departmentId,proto3" json:"department_id,omitempty"`
	// 用户最大空间数量
	MaxProjects int64 `protobuf:"varint,22,opt,name=max_projects,json=maxProjects,proto3" json:"max_projects,omitempty"`
	// 增加存储配额
	StorageQuota int64 `protobuf:"varint,23,opt,name=storage_quota,json=storageQuota,proto3" json:"storage_quota,omitempty"`
}

func (x *GetUserInfoResponse) Reset() {
	*x = GetUserInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_platform_company_user_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserInfoResponse) ProtoMessage() {}

func (x *GetUserInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_platform_company_user_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserInfoResponse.ProtoReflect.Descriptor instead.
func (*GetUserInfoResponse) Descriptor() ([]byte, []int) {
	return file_protos_platform_company_user_proto_rawDescGZIP(), []int{19}
}

func (x *GetUserInfoResponse) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetUserInfoResponse) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *GetUserInfoResponse) GetRealName() string {
	if x != nil {
		return x.RealName
	}
	return ""
}

func (x *GetUserInfoResponse) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *GetUserInfoResponse) GetCompanyId() string {
	if x != nil {
		return x.CompanyId
	}
	return ""
}

func (x *GetUserInfoResponse) GetCompanyName() string {
	if x != nil {
		return x.CompanyName
	}
	return ""
}

func (x *GetUserInfoResponse) GetCompanyBoxDomain() string {
	if x != nil {
		return x.CompanyBoxDomain
	}
	return ""
}

func (x *GetUserInfoResponse) GetPermissionList() []*Permission {
	if x != nil {
		return x.PermissionList
	}
	return nil
}

func (x *GetUserInfoResponse) GetPublicBoxDomain() string {
	if x != nil {
		return x.PublicBoxDomain
	}
	return ""
}

func (x *GetUserInfoResponse) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *GetUserInfoResponse) GetDisplayUserName() string {
	if x != nil {
		return x.DisplayUserName
	}
	return ""
}

func (x *GetUserInfoResponse) GetUserSource() string {
	if x != nil {
		return x.UserSource
	}
	return ""
}

func (x *GetUserInfoResponse) GetUserChannel() string {
	if x != nil {
		return x.UserChannel
	}
	return ""
}

func (x *GetUserInfoResponse) GetUserReferer() string {
	if x != nil {
		return x.UserReferer
	}
	return ""
}

func (x *GetUserInfoResponse) GetHeadimgUrl() string {
	if x != nil {
		return x.HeadimgUrl
	}
	return ""
}

func (x *GetUserInfoResponse) GetWechatUnionId() string {
	if x != nil {
		return x.WechatUnionId
	}
	return ""
}

func (x *GetUserInfoResponse) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *GetUserInfoResponse) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *GetUserInfoResponse) GetWechatNickName() string {
	if x != nil {
		return x.WechatNickName
	}
	return ""
}

func (x *GetUserInfoResponse) GetFeCode() int64 {
	if x != nil {
		return x.FeCode
	}
	return 0
}

func (x *GetUserInfoResponse) GetDepartmentId() string {
	if x != nil {
		return x.DepartmentId
	}
	return ""
}

func (x *GetUserInfoResponse) GetMaxProjects() int64 {
	if x != nil {
		return x.MaxProjects
	}
	return 0
}

func (x *GetUserInfoResponse) GetStorageQuota() int64 {
	if x != nil {
		return x.StorageQuota
	}
	return 0
}

// 个人用户
type PUser struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// 姓名
	RealName string `protobuf:"bytes,3,opt,name=real_name,json=realName,proto3" json:"real_name,omitempty"`
	// 电话
	Phone string `protobuf:"bytes,4,opt,name=phone,proto3" json:"phone,omitempty"`
	// email
	Email string `protobuf:"bytes,5,opt,name=email,proto3" json:"email,omitempty"`
	// 用户备注
	Remark string `protobuf:"bytes,6,opt,name=remark,proto3" json:"remark,omitempty"`
	// 创建时间
	CreateTime *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	// 更新时间
	UpdateTime *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	// 最近登录时间
	LastLoginTime *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=last_login_time,json=lastLoginTime,proto3" json:"last_login_time,omitempty"`
	// 是否加入企业
	IsJoinCompany bool `protobuf:"varint,10,opt,name=is_join_company,json=isJoinCompany,proto3" json:"is_join_company,omitempty"`
	// 用户名
	UserName string `protobuf:"bytes,11,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	// 显示用户名
	DisplayUserName string `protobuf:"bytes,12,opt,name=display_user_name,json=displayUserName,proto3" json:"display_user_name,omitempty"`
	// 用户渠道
	UserChannel string `protobuf:"bytes,13,opt,name=user_channel,json=userChannel,proto3" json:"user_channel,omitempty"`
	// 用户来源
	UserSource string `protobuf:"bytes,14,opt,name=user_source,json=userSource,proto3" json:"user_source,omitempty"`
	// 用户推荐人
	UserReferer string `protobuf:"bytes,15,opt,name=user_referer,json=userReferer,proto3" json:"user_referer,omitempty"`
	// 用户头像
	HeadimgUrl string `protobuf:"bytes,16,opt,name=headimg_url,json=headimgUrl,proto3" json:"headimg_url,omitempty"`
	// 微信UnionId
	WechatUnionId string `protobuf:"bytes,17,opt,name=wechat_union_id,json=wechatUnionId,proto3" json:"wechat_union_id,omitempty"`
	// 用户微信昵称
	WechatNickName string `protobuf:"bytes,18,opt,name=wechat_nick_name,json=wechatNickName,proto3" json:"wechat_nick_name,omitempty"`
	// 已加入的企业名称
	CompanyName string `protobuf:"bytes,19,opt,name=company_name,json=companyName,proto3" json:"company_name,omitempty"`
}

func (x *PUser) Reset() {
	*x = PUser{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_platform_company_user_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PUser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PUser) ProtoMessage() {}

func (x *PUser) ProtoReflect() protoreflect.Message {
	mi := &file_protos_platform_company_user_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PUser.ProtoReflect.Descriptor instead.
func (*PUser) Descriptor() ([]byte, []int) {
	return file_protos_platform_company_user_proto_rawDescGZIP(), []int{20}
}

func (x *PUser) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *PUser) GetRealName() string {
	if x != nil {
		return x.RealName
	}
	return ""
}

func (x *PUser) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *PUser) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *PUser) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *PUser) GetCreateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CreateTime
	}
	return nil
}

func (x *PUser) GetUpdateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdateTime
	}
	return nil
}

func (x *PUser) GetLastLoginTime() *timestamppb.Timestamp {
	if x != nil {
		return x.LastLoginTime
	}
	return nil
}

func (x *PUser) GetIsJoinCompany() bool {
	if x != nil {
		return x.IsJoinCompany
	}
	return false
}

func (x *PUser) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *PUser) GetDisplayUserName() string {
	if x != nil {
		return x.DisplayUserName
	}
	return ""
}

func (x *PUser) GetUserChannel() string {
	if x != nil {
		return x.UserChannel
	}
	return ""
}

func (x *PUser) GetUserSource() string {
	if x != nil {
		return x.UserSource
	}
	return ""
}

func (x *PUser) GetUserReferer() string {
	if x != nil {
		return x.UserReferer
	}
	return ""
}

func (x *PUser) GetHeadimgUrl() string {
	if x != nil {
		return x.HeadimgUrl
	}
	return ""
}

func (x *PUser) GetWechatUnionId() string {
	if x != nil {
		return x.WechatUnionId
	}
	return ""
}

func (x *PUser) GetWechatNickName() string {
	if x != nil {
		return x.WechatNickName
	}
	return ""
}

func (x *PUser) GetCompanyName() string {
	if x != nil {
		return x.CompanyName
	}
	return ""
}

// 个人用户查询请求
type UserListQueryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 搜索关键字，全匹配用户手机号和姓名
	Key           string             `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	IsJoinCompany WhetherJoinCompany `protobuf:"varint,2,opt,name=is_join_company,json=isJoinCompany,proto3,enum=company.WhetherJoinCompany" json:"is_join_company,omitempty"`
	// 结果排序
	// @inject_tag: `validate:"required"`
	OrderBy UserQueryOrderBy `protobuf:"varint,3,opt,name=order_by,json=orderBy,proto3,enum=company.UserQueryOrderBy" json:"order_by,omitempty"`
	// @inject_tag: `validate:"required"`
	Page *ptype.Page `protobuf:"bytes,4,opt,name=page,proto3" json:"page,omitempty"`
	// 用户备注（模糊搜索）
	Remark string `protobuf:"bytes,5,opt,name=remark,proto3" json:"remark,omitempty"`
	// 来源包含（模糊搜索）
	Source string `protobuf:"bytes,6,opt,name=source,proto3" json:"source,omitempty"`
	// 来源排除 (精确排除，单一类别)
	ExcludeSource string `protobuf:"bytes,7,opt,name=exclude_source,json=excludeSource,proto3" json:"exclude_source,omitempty"`
	// 用户渠道模糊搜索）
	Channel string `protobuf:"bytes,8,opt,name=channel,proto3" json:"channel,omitempty"`
	// 用户名模糊搜索
	NameKey string `protobuf:"bytes,9,opt,name=name_key,json=nameKey,proto3" json:"name_key,omitempty"`
}

func (x *UserListQueryRequest) Reset() {
	*x = UserListQueryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_platform_company_user_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserListQueryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserListQueryRequest) ProtoMessage() {}

func (x *UserListQueryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_platform_company_user_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserListQueryRequest.ProtoReflect.Descriptor instead.
func (*UserListQueryRequest) Descriptor() ([]byte, []int) {
	return file_protos_platform_company_user_proto_rawDescGZIP(), []int{21}
}

func (x *UserListQueryRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *UserListQueryRequest) GetIsJoinCompany() WhetherJoinCompany {
	if x != nil {
		return x.IsJoinCompany
	}
	return WhetherJoinCompany_UNKNOW_JOIN_COMPANY
}

func (x *UserListQueryRequest) GetOrderBy() UserQueryOrderBy {
	if x != nil {
		return x.OrderBy
	}
	return UserQueryOrderBy_USER_ORDERBY_NULL
}

func (x *UserListQueryRequest) GetPage() *ptype.Page {
	if x != nil {
		return x.Page
	}
	return nil
}

func (x *UserListQueryRequest) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *UserListQueryRequest) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *UserListQueryRequest) GetExcludeSource() string {
	if x != nil {
		return x.ExcludeSource
	}
	return ""
}

func (x *UserListQueryRequest) GetChannel() string {
	if x != nil {
		return x.Channel
	}
	return ""
}

func (x *UserListQueryRequest) GetNameKey() string {
	if x != nil {
		return x.NameKey
	}
	return ""
}

// 个人用户查询结果
type UserListQueryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 数据列表
	List    []*PUser       `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	PageCtx *ptype.PageCtx `protobuf:"bytes,2,opt,name=page_ctx,json=pageCtx,proto3" json:"page_ctx,omitempty"`
}

func (x *UserListQueryResponse) Reset() {
	*x = UserListQueryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_platform_company_user_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserListQueryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserListQueryResponse) ProtoMessage() {}

func (x *UserListQueryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_platform_company_user_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserListQueryResponse.ProtoReflect.Descriptor instead.
func (*UserListQueryResponse) Descriptor() ([]byte, []int) {
	return file_protos_platform_company_user_proto_rawDescGZIP(), []int{22}
}

func (x *UserListQueryResponse) GetList() []*PUser {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *UserListQueryResponse) GetPageCtx() *ptype.PageCtx {
	if x != nil {
		return x.PageCtx
	}
	return nil
}

// 添加用户备注请求
type AddUserRemarkRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 用户ID
	// @inject_tag: `validate:"is_ysid,required"`
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// 用户备注
	// @inject_tag: `validate:"required"`
	Remark string `protobuf:"bytes,2,opt,name=remark,proto3" json:"remark,omitempty"`
}

func (x *AddUserRemarkRequest) Reset() {
	*x = AddUserRemarkRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_platform_company_user_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddUserRemarkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddUserRemarkRequest) ProtoMessage() {}

func (x *AddUserRemarkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_platform_company_user_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddUserRemarkRequest.ProtoReflect.Descriptor instead.
func (*AddUserRemarkRequest) Descriptor() ([]byte, []int) {
	return file_protos_platform_company_user_proto_rawDescGZIP(), []int{23}
}

func (x *AddUserRemarkRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *AddUserRemarkRequest) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

// 添加用户备注结果
type AddUserRemarkResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// success 成功 ； fail 失败
	Msg string `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *AddUserRemarkResponse) Reset() {
	*x = AddUserRemarkResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_platform_company_user_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddUserRemarkResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddUserRemarkResponse) ProtoMessage() {}

func (x *AddUserRemarkResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_platform_company_user_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddUserRemarkResponse.ProtoReflect.Descriptor instead.
func (*AddUserRemarkResponse) Descriptor() ([]byte, []int) {
	return file_protos_platform_company_user_proto_rawDescGZIP(), []int{24}
}

func (x *AddUserRemarkResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

// 邀请结果
type InviteResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Phone string `protobuf:"bytes,1,opt,name=phone,proto3" json:"phone,omitempty"`
	// 170011 : 用户已邀请（user invited）
	// 170012 : 手机号格式错误（phone invalidate）
	// 170013 ：用户已经加入其他企业（user already join other company）
	// 2 :  未知错误（unknown error）
	// 0 : 成功（success）
	Code    int64  `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	// 用户ID（手机号成功注册平台时返回）
	UserId string `protobuf:"bytes,4,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *InviteResult) Reset() {
	*x = InviteResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_platform_company_user_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InviteResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InviteResult) ProtoMessage() {}

func (x *InviteResult) ProtoReflect() protoreflect.Message {
	mi := &file_protos_platform_company_user_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InviteResult.ProtoReflect.Descriptor instead.
func (*InviteResult) Descriptor() ([]byte, []int) {
	return file_protos_platform_company_user_proto_rawDescGZIP(), []int{25}
}

func (x *InviteResult) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *InviteResult) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *InviteResult) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *InviteResult) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

// 批量邀请用户请求
type BatchInviteUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 角色ID
	// @inject_tag: `validate:"is_ysid,required"`
	CompanyId string `protobuf:"bytes,1,opt,name=company_id,json=companyId,proto3" json:"company_id,omitempty"`
	// 角色ID
	// @inject_tag: `validate:"is_ysid,required"`
	RoleId string `protobuf:"bytes,2,opt,name=role_id,json=roleId,proto3" json:"role_id,omitempty"`
	// 手机号列表
	// @inject_tag: `validate:"required"`
	PhoneList []string `protobuf:"bytes,3,rep,name=phone_list,json=phoneList,proto3" json:"phone_list,omitempty"`
	CreateUid string   `protobuf:"bytes,4,opt,name=create_uid,json=createUid,proto3" json:"create_uid,omitempty"`
	// @inject_tag: `validate:"required"`
	CreateName string `protobuf:"bytes,5,opt,name=create_name,json=createName,proto3" json:"create_name,omitempty"`
	// @inject_tag: `validate:"is_ysid"`
	DepartmentId string `protobuf:"bytes,6,opt,name=department_id,json=departmentId,proto3" json:"department_id,omitempty"`
}

func (x *BatchInviteUserRequest) Reset() {
	*x = BatchInviteUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_platform_company_user_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchInviteUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchInviteUserRequest) ProtoMessage() {}

func (x *BatchInviteUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_platform_company_user_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchInviteUserRequest.ProtoReflect.Descriptor instead.
func (*BatchInviteUserRequest) Descriptor() ([]byte, []int) {
	return file_protos_platform_company_user_proto_rawDescGZIP(), []int{26}
}

func (x *BatchInviteUserRequest) GetCompanyId() string {
	if x != nil {
		return x.CompanyId
	}
	return ""
}

func (x *BatchInviteUserRequest) GetRoleId() string {
	if x != nil {
		return x.RoleId
	}
	return ""
}

func (x *BatchInviteUserRequest) GetPhoneList() []string {
	if x != nil {
		return x.PhoneList
	}
	return nil
}

func (x *BatchInviteUserRequest) GetCreateUid() string {
	if x != nil {
		return x.CreateUid
	}
	return ""
}

func (x *BatchInviteUserRequest) GetCreateName() string {
	if x != nil {
		return x.CreateName
	}
	return ""
}

func (x *BatchInviteUserRequest) GetDepartmentId() string {
	if x != nil {
		return x.DepartmentId
	}
	return ""
}

// 批量邀请用户结果
type BatchInviteUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InviteResult []*InviteResult `protobuf:"bytes,1,rep,name=invite_result,json=inviteResult,proto3" json:"invite_result,omitempty"`
	TotalCount   int32           `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	FailCount    int32           `protobuf:"varint,3,opt,name=fail_count,json=failCount,proto3" json:"fail_count,omitempty"`
	SuccessCount int32           `protobuf:"varint,4,opt,name=success_count,json=successCount,proto3" json:"success_count,omitempty"`
}

func (x *BatchInviteUserResponse) Reset() {
	*x = BatchInviteUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_platform_company_user_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchInviteUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchInviteUserResponse) ProtoMessage() {}

func (x *BatchInviteUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_platform_company_user_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchInviteUserResponse.ProtoReflect.Descriptor instead.
func (*BatchInviteUserResponse) Descriptor() ([]byte, []int) {
	return file_protos_platform_company_user_proto_rawDescGZIP(), []int{27}
}

func (x *BatchInviteUserResponse) GetInviteResult() []*InviteResult {
	if x != nil {
		return x.InviteResult
	}
	return nil
}

func (x *BatchInviteUserResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

func (x *BatchInviteUserResponse) GetFailCount() int32 {
	if x != nil {
		return x.FailCount
	}
	return 0
}

func (x *BatchInviteUserResponse) GetSuccessCount() int32 {
	if x != nil {
		return x.SuccessCount
	}
	return 0
}

// 获取邀请用户结果
type GetReferedUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 仅需返回用户id, 头像昵称存储于sso表
	UserId []string `protobuf:"bytes,1,rep,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *GetReferedUserResponse) Reset() {
	*x = GetReferedUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_platform_company_user_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetReferedUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReferedUserResponse) ProtoMessage() {}

func (x *GetReferedUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_platform_company_user_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReferedUserResponse.ProtoReflect.Descriptor instead.
func (*GetReferedUserResponse) Descriptor() ([]byte, []int) {
	return file_protos_platform_company_user_proto_rawDescGZIP(), []int{28}
}

func (x *GetReferedUserResponse) GetUserId() []string {
	if x != nil {
		return x.UserId
	}
	return nil
}

type UpdateUserFeCodeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: `validate:"is_ysid,required"`
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// @inject_tag: `validate:"required"`
	FeCode int64 `protobuf:"varint,2,opt,name=fe_code,json=feCode,proto3" json:"fe_code,omitempty"`
}

func (x *UpdateUserFeCodeRequest) Reset() {
	*x = UpdateUserFeCodeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_platform_company_user_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserFeCodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserFeCodeRequest) ProtoMessage() {}

func (x *UpdateUserFeCodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_platform_company_user_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserFeCodeRequest.ProtoReflect.Descriptor instead.
func (*UpdateUserFeCodeRequest) Descriptor() ([]byte, []int) {
	return file_protos_platform_company_user_proto_rawDescGZIP(), []int{29}
}

func (x *UpdateUserFeCodeRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UpdateUserFeCodeRequest) GetFeCode() int64 {
	if x != nil {
		return x.FeCode
	}
	return 0
}

type UpdateUserFeCodeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// success 成功 ； fail 失败
	Msg string `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *UpdateUserFeCodeResponse) Reset() {
	*x = UpdateUserFeCodeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_platform_company_user_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserFeCodeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserFeCodeResponse) ProtoMessage() {}

func (x *UpdateUserFeCodeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_platform_company_user_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserFeCodeResponse.ProtoReflect.Descriptor instead.
func (*UpdateUserFeCodeResponse) Descriptor() ([]byte, []int) {
	return file_protos_platform_company_user_proto_rawDescGZIP(), []int{30}
}

func (x *UpdateUserFeCodeResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type GetUserProductListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *GetUserProductListRequest) Reset() {
	*x = GetUserProductListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_platform_company_user_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserProductListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserProductListRequest) ProtoMessage() {}

func (x *GetUserProductListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_platform_company_user_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserProductListRequest.ProtoReflect.Descriptor instead.
func (*GetUserProductListRequest) Descriptor() ([]byte, []int) {
	return file_protos_platform_company_user_proto_rawDescGZIP(), []int{31}
}

func (x *GetUserProductListRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type GetUserProductListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductList []string `protobuf:"bytes,1,rep,name=product_list,json=productList,proto3" json:"product_list,omitempty"`
}

func (x *GetUserProductListResponse) Reset() {
	*x = GetUserProductListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_platform_company_user_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserProductListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserProductListResponse) ProtoMessage() {}

func (x *GetUserProductListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_platform_company_user_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserProductListResponse.ProtoReflect.Descriptor instead.
func (*GetUserProductListResponse) Descriptor() ([]byte, []int) {
	return file_protos_platform_company_user_proto_rawDescGZIP(), []int{32}
}

func (x *GetUserProductListResponse) GetProductList() []string {
	if x != nil {
		return x.ProductList
	}
	return nil
}

type AddProductToUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId    string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	ProductId string `protobuf:"bytes,2,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
}

func (x *AddProductToUserRequest) Reset() {
	*x = AddProductToUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_platform_company_user_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddProductToUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddProductToUserRequest) ProtoMessage() {}

func (x *AddProductToUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_platform_company_user_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddProductToUserRequest.ProtoReflect.Descriptor instead.
func (*AddProductToUserRequest) Descriptor() ([]byte, []int) {
	return file_protos_platform_company_user_proto_rawDescGZIP(), []int{33}
}

func (x *AddProductToUserRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *AddProductToUserRequest) GetProductId() string {
	if x != nil {
		return x.ProductId
	}
	return ""
}

type AddProductToUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Msg string `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *AddProductToUserResponse) Reset() {
	*x = AddProductToUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_platform_company_user_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddProductToUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddProductToUserResponse) ProtoMessage() {}

func (x *AddProductToUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_platform_company_user_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddProductToUserResponse.ProtoReflect.Descriptor instead.
func (*AddProductToUserResponse) Descriptor() ([]byte, []int) {
	return file_protos_platform_company_user_proto_rawDescGZIP(), []int{34}
}

func (x *AddProductToUserResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type RemoveProductFromUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId    string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	ProductId string `protobuf:"bytes,2,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
}

func (x *RemoveProductFromUserRequest) Reset() {
	*x = RemoveProductFromUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_platform_company_user_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveProductFromUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveProductFromUserRequest) ProtoMessage() {}

func (x *RemoveProductFromUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_platform_company_user_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveProductFromUserRequest.ProtoReflect.Descriptor instead.
func (*RemoveProductFromUserRequest) Descriptor() ([]byte, []int) {
	return file_protos_platform_company_user_proto_rawDescGZIP(), []int{35}
}

func (x *RemoveProductFromUserRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *RemoveProductFromUserRequest) GetProductId() string {
	if x != nil {
		return x.ProductId
	}
	return ""
}

type RemoveProductFromUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Msg string `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *RemoveProductFromUserResponse) Reset() {
	*x = RemoveProductFromUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_platform_company_user_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveProductFromUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveProductFromUserResponse) ProtoMessage() {}

func (x *RemoveProductFromUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_platform_company_user_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveProductFromUserResponse.ProtoReflect.Descriptor instead.
func (*RemoveProductFromUserResponse) Descriptor() ([]byte, []int) {
	return file_protos_platform_company_user_proto_rawDescGZIP(), []int{36}
}

func (x *RemoveProductFromUserResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type CheckUserProductRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId    string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	ProductId string `protobuf:"bytes,2,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
}

func (x *CheckUserProductRequest) Reset() {
	*x = CheckUserProductRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_platform_company_user_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckUserProductRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckUserProductRequest) ProtoMessage() {}

func (x *CheckUserProductRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_platform_company_user_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckUserProductRequest.ProtoReflect.Descriptor instead.
func (*CheckUserProductRequest) Descriptor() ([]byte, []int) {
	return file_protos_platform_company_user_proto_rawDescGZIP(), []int{37}
}

func (x *CheckUserProductRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *CheckUserProductRequest) GetProductId() string {
	if x != nil {
		return x.ProductId
	}
	return ""
}

type CheckUserProductResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Has bool `protobuf:"varint,1,opt,name=has,proto3" json:"has,omitempty"`
}

func (x *CheckUserProductResponse) Reset() {
	*x = CheckUserProductResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_platform_company_user_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckUserProductResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckUserProductResponse) ProtoMessage() {}

func (x *CheckUserProductResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_platform_company_user_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckUserProductResponse.ProtoReflect.Descriptor instead.
func (*CheckUserProductResponse) Descriptor() ([]byte, []int) {
	return file_protos_platform_company_user_proto_rawDescGZIP(), []int{38}
}

func (x *CheckUserProductResponse) GetHas() bool {
	if x != nil {
		return x.Has
	}
	return false
}

var File_protos_platform_company_user_proto protoreflect.FileDescriptor

var file_protos_platform_company_user_proto_rawDesc = []byte{
	0x0a, 0x22, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72,
	0x6d, 0x2f, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x1a, 0x1f, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x28,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2f,
	0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2f, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x22, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73,
	0x2f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2f, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x79, 0x2f, 0x72, 0x6f, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2f, 0x70, 0x74,
	0x79, 0x70, 0x65, 0x2f, 0x70, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xd0,
	0x03, 0x0a, 0x04, 0x55, 0x73, 0x65, 0x72, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x64, 0x12,
	0x1b, 0x0a, 0x09, 0x72, 0x65, 0x61, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x61, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f,
	0x6e, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x3b, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x3b, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x42, 0x0a, 0x0f, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0d, 0x6c, 0x61, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x69,
	0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x64,
	0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x21,
	0x0a, 0x0c, 0x6d, 0x61, 0x78, 0x5f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x6d, 0x61, 0x78, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x73, 0x22, 0xaf, 0x04, 0x0a, 0x0a, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x64, 0x12,
	0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x65, 0x61, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x61, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x31, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61,
	0x6e, 0x79, 0x2e, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x35, 0x0a, 0x08, 0x69,
	0x73, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e,
	0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x55, 0x73,
	0x65, 0x72, 0x54, 0x6f, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x07, 0x69, 0x73, 0x41, 0x64, 0x6d,
	0x69, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x75, 0x69, 0x64,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x69,
	0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x3b, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x3b, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f,
	0x6e, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x64,
	0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64,
	0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x61, 0x78, 0x5f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x6d, 0x61, 0x78, 0x50, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x73, 0x22, 0x9a, 0x02, 0x0a, 0x11, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6d,
	0x70, 0x61, 0x6e, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63,
	0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x35, 0x0a, 0x08, 0x69, 0x73, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x49, 0x6e,
	0x76, 0x69, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x54, 0x6f, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52,
	0x07, 0x69, 0x73, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x55, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x1b,
	0x0a, 0x09, 0x72, 0x65, 0x61, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x72, 0x65, 0x61, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x64,
	0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64,
	0x22, 0x24, 0x0a, 0x12, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0xca, 0x01, 0x0a, 0x14, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x72, 0x6d, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x64, 0x12, 0x17,
	0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x31, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x79, 0x2e, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x65,
	0x61, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72,
	0x65, 0x61, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x14, 0x0a,
	0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68,
	0x6f, 0x6e, 0x65, 0x22, 0x29, 0x0a, 0x15, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x49, 0x6e,
	0x76, 0x69, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x6d, 0x73, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x50,
	0x0a, 0x18, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x6e,
	0x76, 0x69, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69,
	0x6e, 0x76, 0x69, 0x74, 0x65, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x22, 0x44, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x76, 0x69, 0x74,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a,
	0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x63, 0x6f,
	0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0xdc, 0x01, 0x0a, 0x11, 0x55, 0x73, 0x65, 0x72, 0x4d,
	0x6f, 0x64, 0x69, 0x66, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x72,
	0x65, 0x61, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x72, 0x65, 0x61, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69,
	0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x42,
	0x0a, 0x0f, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x0d, 0x6c, 0x61, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x61, 0x78, 0x5f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x6d, 0x61, 0x78, 0x50, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x73, 0x22, 0x26, 0x0a, 0x12, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x6f, 0x64,
	0x69, 0x66, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d,
	0x73, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0xaf, 0x01,
	0x0a, 0x0f, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68,
	0x6f, 0x6e, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65,
	0x12, 0x1b, 0x0a, 0x09, 0x72, 0x65, 0x61, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x61, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x22,
	0x24, 0x0a, 0x10, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x58, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x6f, 0x6c, 0x65, 0x41, 0x6e, 0x64, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x64, 0x22,
	0x8b, 0x01, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x41,
	0x6e, 0x64, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a, 0x09, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79,
	0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x08, 0x72, 0x6f, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x3c, 0x0a, 0x0f, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x6c, 0x69,
	0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61,
	0x6e, 0x79, 0x2e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x0e, 0x70,
	0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x7c, 0x0a,
	0x19, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x55, 0x73, 0x65, 0x72, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73,
	0x73, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79,
	0x49, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x65, 0x72,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x34, 0x0a, 0x1a, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x55, 0x73, 0x65, 0x72, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x22, 0x53, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x70,
	0x61, 0x6e, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17,
	0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x22, 0x5e, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x79, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x61,
	0x6e, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x4c, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x49, 0x64, 0x22, 0xba, 0x06, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x17, 0x0a, 0x07,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x72,
	0x65, 0x61, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x72, 0x65, 0x61, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x61,
	0x6e, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6d,
	0x70, 0x61, 0x6e, 0x79, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f,
	0x6d, 0x70, 0x61, 0x6e, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x12, 0x63, 0x6f, 0x6d,
	0x70, 0x61, 0x6e, 0x79, 0x5f, 0x62, 0x6f, 0x78, 0x5f, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x42, 0x6f,
	0x78, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x3c, 0x0a, 0x0f, 0x70, 0x65, 0x72, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x50, 0x65, 0x72, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x0e, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x11, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f,
	0x62, 0x6f, 0x78, 0x5f, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x42, 0x6f, 0x78, 0x44, 0x6f, 0x6d, 0x61, 0x69,
	0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2a,
	0x0a, 0x11, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x64, 0x69, 0x73, 0x70, 0x6c,
	0x61, 0x79, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x75, 0x73, 0x65, 0x72, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x21,
	0x0a, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x72, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65,
	0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x68, 0x65, 0x61, 0x64, 0x69, 0x6d, 0x67, 0x5f, 0x75, 0x72, 0x6c,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x68, 0x65, 0x61, 0x64, 0x69, 0x6d, 0x67, 0x55,
	0x72, 0x6c, 0x12, 0x26, 0x0a, 0x0f, 0x77, 0x65, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x75, 0x6e, 0x69,
	0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x77, 0x65, 0x63,
	0x68, 0x61, 0x74, 0x55, 0x6e, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69,
	0x6c, 0x12, 0x28, 0x0a, 0x10, 0x77, 0x65, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x6e, 0x69, 0x63, 0x6b,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x77, 0x65, 0x63,
	0x68, 0x61, 0x74, 0x4e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x66,
	0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x66, 0x65,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65,
	0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x65, 0x70,
	0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x61, 0x78,
	0x5f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x18, 0x16, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0b, 0x6d, 0x61, 0x78, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x12, 0x23, 0x0a, 0x0d,
	0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x18, 0x17, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0c, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x51, 0x75, 0x6f, 0x74,
	0x61, 0x22, 0xad, 0x05, 0x0a, 0x05, 0x50, 0x55, 0x73, 0x65, 0x72, 0x12, 0x17, 0x0a, 0x07, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x65, 0x61, 0x6c, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x61, 0x6c, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x16, 0x0a,
	0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72,
	0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x3b, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x3b, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x42, 0x0a, 0x0f, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x0d, 0x6c, 0x61, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x69, 0x73, 0x5f, 0x6a, 0x6f, 0x69, 0x6e, 0x5f, 0x63,
	0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x69, 0x73,
	0x4a, 0x6f, 0x69, 0x6e, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x64, 0x69, 0x73, 0x70,
	0x6c, 0x61, 0x79, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0f, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x55, 0x73, 0x65, 0x72,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x63, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x75, 0x73, 0x65, 0x72,
	0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x73,
	0x65, 0x72, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x72, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x75, 0x73, 0x65, 0x72, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x68,
	0x65, 0x61, 0x64, 0x69, 0x6d, 0x67, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x68, 0x65, 0x61, 0x64, 0x69, 0x6d, 0x67, 0x55, 0x72, 0x6c, 0x12, 0x26, 0x0a, 0x0f,
	0x77, 0x65, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x75, 0x6e, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x77, 0x65, 0x63, 0x68, 0x61, 0x74, 0x55, 0x6e, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x77, 0x65, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x6e,
	0x69, 0x63, 0x6b, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x77, 0x65, 0x63, 0x68, 0x61, 0x74, 0x4e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x21,
	0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x13,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x4e, 0x61, 0x6d,
	0x65, 0x22, 0xd0, 0x02, 0x0a, 0x14, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x43, 0x0a, 0x0f,
	0x69, 0x73, 0x5f, 0x6a, 0x6f, 0x69, 0x6e, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e,
	0x57, 0x68, 0x65, 0x74, 0x68, 0x65, 0x72, 0x4a, 0x6f, 0x69, 0x6e, 0x43, 0x6f, 0x6d, 0x70, 0x61,
	0x6e, 0x79, 0x52, 0x0d, 0x69, 0x73, 0x4a, 0x6f, 0x69, 0x6e, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x79, 0x12, 0x34, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x62, 0x79, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x52, 0x07,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x12, 0x1f, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x70, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x50, 0x61,
	0x67, 0x65, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61,
	0x72, 0x6b, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x65, 0x78, 0x63, 0x6c,
	0x75, 0x64, 0x65, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x19, 0x0a, 0x08, 0x6e, 0x61, 0x6d,
	0x65, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x61, 0x6d,
	0x65, 0x4b, 0x65, 0x79, 0x22, 0x66, 0x0a, 0x15, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x22, 0x0a,
	0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x63, 0x6f,
	0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x50, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x6c, 0x69, 0x73,
	0x74, 0x12, 0x29, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x63, 0x74, 0x78, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x50, 0x61, 0x67, 0x65,
	0x43, 0x74, 0x78, 0x52, 0x07, 0x70, 0x61, 0x67, 0x65, 0x43, 0x74, 0x78, 0x22, 0x47, 0x0a, 0x14,
	0x41, 0x64, 0x64, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72,
	0x65, 0x6d, 0x61, 0x72, 0x6b, 0x22, 0x29, 0x0a, 0x15, 0x41, 0x64, 0x64, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67,
	0x22, 0x6b, 0x0a, 0x0c, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0xd4, 0x01,
	0x0a, 0x16, 0x42, 0x61, 0x74, 0x63, 0x68, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x70,
	0x61, 0x6e, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f,
	0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6c, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64,
	0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x69, 0x64, 0x12, 0x1f,
	0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x23, 0x0a, 0x0d, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65,
	0x6e, 0x74, 0x49, 0x64, 0x22, 0xba, 0x01, 0x0a, 0x17, 0x42, 0x61, 0x74, 0x63, 0x68, 0x49, 0x6e,
	0x76, 0x69, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x3a, 0x0a, 0x0d, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x79, 0x2e, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x0c,
	0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x1f, 0x0a, 0x0b,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1d, 0x0a,
	0x0a, 0x66, 0x61, 0x69, 0x6c, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x09, 0x66, 0x61, 0x69, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x23, 0x0a, 0x0d,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0c, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x22, 0x31, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x64, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x22, 0x4b, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73,
	0x65, 0x72, 0x46, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x66, 0x65, 0x5f, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x66, 0x65, 0x43, 0x6f, 0x64,
	0x65, 0x22, 0x2c, 0x0a, 0x18, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x46,
	0x65, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x6d, 0x73, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22,
	0x34, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x3f, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x6c,
	0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x51, 0x0a, 0x17, 0x41, 0x64, 0x64, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x54, 0x6f, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x22, 0x2c, 0x0a, 0x18, 0x41, 0x64, 0x64,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x54, 0x6f, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x56, 0x0a, 0x1c, 0x52, 0x65, 0x6d, 0x6f, 0x76,
	0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x46, 0x72, 0x6f, 0x6d, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x22,
	0x31, 0x0a, 0x1d, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x46, 0x72, 0x6f, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d,
	0x73, 0x67, 0x22, 0x51, 0x0a, 0x17, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x55, 0x73, 0x65, 0x72, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a,
	0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x49, 0x64, 0x22, 0x2c, 0x0a, 0x18, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x55, 0x73,
	0x65, 0x72, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x10, 0x0a, 0x03, 0x68, 0x61, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x03,
	0x68, 0x61, 0x73, 0x2a, 0x64, 0x0a, 0x10, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x55, 0x73, 0x65,
	0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x0e, 0x49, 0x4e, 0x56, 0x49, 0x54,
	0x45, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x16, 0x0a, 0x12, 0x49,
	0x4e, 0x56, 0x49, 0x54, 0x45, 0x5f, 0x55, 0x4e, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x52, 0x4d, 0x45,
	0x44, 0x10, 0x01, 0x12, 0x11, 0x0a, 0x0d, 0x49, 0x4e, 0x56, 0x49, 0x54, 0x45, 0x5f, 0x41, 0x43,
	0x43, 0x45, 0x50, 0x54, 0x10, 0x02, 0x12, 0x11, 0x0a, 0x0d, 0x49, 0x4e, 0x56, 0x49, 0x54, 0x45,
	0x5f, 0x52, 0x45, 0x4a, 0x45, 0x43, 0x54, 0x10, 0x03, 0x2a, 0x54, 0x0a, 0x11, 0x49, 0x6e, 0x76,
	0x69, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x54, 0x6f, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x12, 0x14,
	0x0a, 0x10, 0x49, 0x4e, 0x56, 0x49, 0x54, 0x45, 0x5f, 0x54, 0x4f, 0x5f, 0x55, 0x4e, 0x4b, 0x4e,
	0x4f, 0x57, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x49, 0x4e, 0x56, 0x49, 0x54, 0x45, 0x5f, 0x4e,
	0x4f, 0x54, 0x5f, 0x41, 0x44, 0x4d, 0x49, 0x4e, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x49, 0x4e,
	0x56, 0x49, 0x54, 0x45, 0x5f, 0x49, 0x53, 0x5f, 0x41, 0x44, 0x4d, 0x49, 0x4e, 0x10, 0x02, 0x2a,
	0xaf, 0x01, 0x0a, 0x10, 0x55, 0x73, 0x65, 0x72, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x42, 0x79, 0x12, 0x15, 0x0a, 0x11, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x4f, 0x52, 0x44,
	0x45, 0x52, 0x42, 0x59, 0x5f, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x1d, 0x0a, 0x19, 0x55,
	0x53, 0x45, 0x52, 0x5f, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x42, 0x59, 0x5f, 0x52, 0x45, 0x47, 0x54,
	0x49, 0x4d, 0x45, 0x5f, 0x44, 0x45, 0x53, 0x43, 0x10, 0x01, 0x12, 0x1c, 0x0a, 0x18, 0x55, 0x53,
	0x45, 0x52, 0x5f, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x42, 0x59, 0x5f, 0x52, 0x45, 0x47, 0x54, 0x49,
	0x4d, 0x45, 0x5f, 0x41, 0x53, 0x43, 0x10, 0x02, 0x12, 0x23, 0x0a, 0x1f, 0x55, 0x53, 0x45, 0x52,
	0x5f, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x42, 0x59, 0x5f, 0x4c, 0x41, 0x53, 0x54, 0x4c, 0x4f, 0x47,
	0x49, 0x4e, 0x54, 0x49, 0x4d, 0x45, 0x5f, 0x44, 0x45, 0x53, 0x43, 0x10, 0x03, 0x12, 0x22, 0x0a,
	0x1e, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x42, 0x59, 0x5f, 0x4c, 0x41,
	0x53, 0x54, 0x4c, 0x4f, 0x47, 0x49, 0x4e, 0x54, 0x49, 0x4d, 0x45, 0x5f, 0x41, 0x53, 0x43, 0x10,
	0x04, 0x2a, 0x5d, 0x0a, 0x12, 0x57, 0x68, 0x65, 0x74, 0x68, 0x65, 0x72, 0x4a, 0x6f, 0x69, 0x6e,
	0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x12, 0x17, 0x0a, 0x13, 0x55, 0x4e, 0x4b, 0x4e, 0x4f,
	0x57, 0x5f, 0x4a, 0x4f, 0x49, 0x4e, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x41, 0x4e, 0x59, 0x10, 0x00,
	0x12, 0x14, 0x0a, 0x10, 0x4e, 0x4f, 0x54, 0x5f, 0x4a, 0x4f, 0x49, 0x4e, 0x5f, 0x43, 0x4f, 0x4d,
	0x50, 0x41, 0x4e, 0x59, 0x10, 0x01, 0x12, 0x18, 0x0a, 0x14, 0x41, 0x4c, 0x52, 0x45, 0x41, 0x44,
	0x59, 0x5f, 0x4a, 0x4f, 0x49, 0x4e, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x41, 0x4e, 0x59, 0x10, 0x02,
	0x32, 0xe8, 0x0b, 0x0a, 0x0b, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x47, 0x0a, 0x0a, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x12, 0x1a,
	0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x63, 0x6f, 0x6d,
	0x70, 0x61, 0x6e, 0x79, 0x2e, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x50, 0x0a, 0x0d, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x72, 0x6d, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x12, 0x1d, 0x2e, 0x63, 0x6f, 0x6d,
	0x70, 0x61, 0x6e, 0x79, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x49, 0x6e, 0x76, 0x69,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x63, 0x6f, 0x6d, 0x70,
	0x61, 0x6e, 0x79, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x49, 0x6e, 0x76, 0x69, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5c, 0x0a, 0x11, 0x47,
	0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x21, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x47, 0x65,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x47, 0x0a, 0x0a, 0x55, 0x73, 0x65,
	0x72, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x12, 0x1a, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x79, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x41, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x69, 0x74, 0x12, 0x18,
	0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x69,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61,
	0x6e, 0x79, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6e, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x6f, 0x6c, 0x65, 0x41, 0x6e, 0x64, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x6f, 0x6e,
	0x12, 0x27, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x41, 0x6e, 0x64, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x63, 0x6f, 0x6d, 0x70,
	0x61, 0x6e, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x41,
	0x6e, 0x64, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5f, 0x0a, 0x12, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x55, 0x73,
	0x65, 0x72, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x6f, 0x6e, 0x12, 0x22, 0x2e, 0x63, 0x6f,
	0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x55, 0x73, 0x65, 0x72, 0x50,
	0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x23, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x55,
	0x73, 0x65, 0x72, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5f, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x22, 0x2e, 0x63,
	0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f,
	0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x23, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4a, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1b, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79,
	0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x47, 0x65,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x50, 0x0a, 0x0d, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x12, 0x1d, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x50, 0x0a, 0x0d, 0x41, 0x64, 0x64, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x1d, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79,
	0x2e, 0x41, 0x64, 0x64, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e,
	0x41, 0x64, 0x64, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x56, 0x0a, 0x0f, 0x42, 0x61, 0x74, 0x63, 0x68,
	0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x12, 0x1f, 0x2e, 0x63, 0x6f, 0x6d,
	0x70, 0x61, 0x6e, 0x79, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x63, 0x6f,
	0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x49, 0x6e, 0x76, 0x69, 0x74,
	0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x59, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x46, 0x65, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x20, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x46, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x46, 0x65, 0x43, 0x6f, 0x64, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5f, 0x0a, 0x12, 0x47, 0x65,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x22, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x47,
	0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x59, 0x0a, 0x10, 0x41,
	0x64, 0x64, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x54, 0x6f, 0x55, 0x73, 0x65, 0x72, 0x12,
	0x20, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x41, 0x64, 0x64, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x54, 0x6f, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x21, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x41, 0x64, 0x64, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x54, 0x6f, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x68, 0x0a, 0x15, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x46, 0x72, 0x6f, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x12,
	0x25, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x46, 0x72, 0x6f, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79,
	0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x46, 0x72,
	0x6f, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x59, 0x0a, 0x10, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x12, 0x20, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79,
	0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x3c, 0x5a, 0x3a, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x79, 0x75, 0x61, 0x6e, 0x73, 0x75,
	0x61, 0x6e, 0x2f, 0x74, 0x69, 0x63, 0x70, 0x2f, 0x69, 0x50, 0x61, 0x61, 0x53, 0x2f, 0x73, 0x73,
	0x6f, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72,
	0x6d, 0x2f, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_protos_platform_company_user_proto_rawDescOnce sync.Once
	file_protos_platform_company_user_proto_rawDescData = file_protos_platform_company_user_proto_rawDesc
)

func file_protos_platform_company_user_proto_rawDescGZIP() []byte {
	file_protos_platform_company_user_proto_rawDescOnce.Do(func() {
		file_protos_platform_company_user_proto_rawDescData = protoimpl.X.CompressGZIP(file_protos_platform_company_user_proto_rawDescData)
	})
	return file_protos_platform_company_user_proto_rawDescData
}

var file_protos_platform_company_user_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_protos_platform_company_user_proto_msgTypes = make([]protoimpl.MessageInfo, 39)
var file_protos_platform_company_user_proto_goTypes = []interface{}{
	(InviteUserStatus)(0),                   // 0: company.InviteUserStatus
	(InviteUserToAdmin)(0),                  // 1: company.InviteUserToAdmin
	(UserQueryOrderBy)(0),                   // 2: company.UserQueryOrderBy
	(WhetherJoinCompany)(0),                 // 3: company.WhetherJoinCompany
	(*User)(nil),                            // 4: company.User
	(*InviteUser)(nil),                      // 5: company.InviteUser
	(*InviteUserRequest)(nil),               // 6: company.InviteUserRequest
	(*InviteUserResponse)(nil),              // 7: company.InviteUserResponse
	(*ConfirmInviteRequest)(nil),            // 8: company.ConfirmInviteRequest
	(*ConfirmInviteResponse)(nil),           // 9: company.ConfirmInviteResponse
	(*GetUserInviteInfoRequest)(nil),        // 10: company.GetUserInviteInfoRequest
	(*GetUserInviteInfoResponse)(nil),       // 11: company.GetUserInviteInfoResponse
	(*UserModifyRequest)(nil),               // 12: company.UserModifyRequest
	(*UserModifyResponse)(nil),              // 13: company.UserModifyResponse
	(*UserInitRequest)(nil),                 // 14: company.UserInitRequest
	(*UserInitResponse)(nil),                // 15: company.UserInitResponse
	(*GetUserRoleAndPermissonRequest)(nil),  // 16: company.GetUserRoleAndPermissonRequest
	(*GetUserRoleAndPermissonResponse)(nil), // 17: company.GetUserRoleAndPermissonResponse
	(*CheckUserPermissonRequest)(nil),       // 18: company.CheckUserPermissonRequest
	(*CheckUserPermissonResponse)(nil),      // 19: company.CheckUserPermissonResponse
	(*GetUserCompanyInfoRequest)(nil),       // 20: company.GetUserCompanyInfoRequest
	(*GetUserCompanyInfoResponse)(nil),      // 21: company.GetUserCompanyInfoResponse
	(*GetUserInfoRequest)(nil),              // 22: company.GetUserInfoRequest
	(*GetUserInfoResponse)(nil),             // 23: company.GetUserInfoResponse
	(*PUser)(nil),                           // 24: company.PUser
	(*UserListQueryRequest)(nil),            // 25: company.UserListQueryRequest
	(*UserListQueryResponse)(nil),           // 26: company.UserListQueryResponse
	(*AddUserRemarkRequest)(nil),            // 27: company.AddUserRemarkRequest
	(*AddUserRemarkResponse)(nil),           // 28: company.AddUserRemarkResponse
	(*InviteResult)(nil),                    // 29: company.InviteResult
	(*BatchInviteUserRequest)(nil),          // 30: company.BatchInviteUserRequest
	(*BatchInviteUserResponse)(nil),         // 31: company.BatchInviteUserResponse
	(*GetReferedUserResponse)(nil),          // 32: company.GetReferedUserResponse
	(*UpdateUserFeCodeRequest)(nil),         // 33: company.UpdateUserFeCodeRequest
	(*UpdateUserFeCodeResponse)(nil),        // 34: company.UpdateUserFeCodeResponse
	(*GetUserProductListRequest)(nil),       // 35: company.GetUserProductListRequest
	(*GetUserProductListResponse)(nil),      // 36: company.GetUserProductListResponse
	(*AddProductToUserRequest)(nil),         // 37: company.AddProductToUserRequest
	(*AddProductToUserResponse)(nil),        // 38: company.AddProductToUserResponse
	(*RemoveProductFromUserRequest)(nil),    // 39: company.RemoveProductFromUserRequest
	(*RemoveProductFromUserResponse)(nil),   // 40: company.RemoveProductFromUserResponse
	(*CheckUserProductRequest)(nil),         // 41: company.CheckUserProductRequest
	(*CheckUserProductResponse)(nil),        // 42: company.CheckUserProductResponse
	(*timestamppb.Timestamp)(nil),           // 43: google.protobuf.Timestamp
	(*Role)(nil),                            // 44: company.Role
	(*Permission)(nil),                      // 45: company.Permission
	(*ptype.Page)(nil),                      // 46: ptype.Page
	(*ptype.PageCtx)(nil),                   // 47: ptype.PageCtx
}
var file_protos_platform_company_user_proto_depIdxs = []int32{
	43, // 0: company.User.create_time:type_name -> google.protobuf.Timestamp
	43, // 1: company.User.update_time:type_name -> google.protobuf.Timestamp
	43, // 2: company.User.last_login_time:type_name -> google.protobuf.Timestamp
	0,  // 3: company.InviteUser.status:type_name -> company.InviteUserStatus
	1,  // 4: company.InviteUser.is_admin:type_name -> company.InviteUserToAdmin
	43, // 5: company.InviteUser.create_time:type_name -> google.protobuf.Timestamp
	43, // 6: company.InviteUser.update_time:type_name -> google.protobuf.Timestamp
	1,  // 7: company.InviteUserRequest.is_admin:type_name -> company.InviteUserToAdmin
	0,  // 8: company.ConfirmInviteRequest.status:type_name -> company.InviteUserStatus
	5,  // 9: company.GetUserInviteInfoResponse.Info:type_name -> company.InviteUser
	43, // 10: company.UserModifyRequest.last_login_time:type_name -> google.protobuf.Timestamp
	44, // 11: company.GetUserRoleAndPermissonResponse.role_list:type_name -> company.Role
	45, // 12: company.GetUserRoleAndPermissonResponse.permission_list:type_name -> company.Permission
	45, // 13: company.GetUserInfoResponse.permission_list:type_name -> company.Permission
	43, // 14: company.PUser.create_time:type_name -> google.protobuf.Timestamp
	43, // 15: company.PUser.update_time:type_name -> google.protobuf.Timestamp
	43, // 16: company.PUser.last_login_time:type_name -> google.protobuf.Timestamp
	3,  // 17: company.UserListQueryRequest.is_join_company:type_name -> company.WhetherJoinCompany
	2,  // 18: company.UserListQueryRequest.order_by:type_name -> company.UserQueryOrderBy
	46, // 19: company.UserListQueryRequest.page:type_name -> ptype.Page
	24, // 20: company.UserListQueryResponse.list:type_name -> company.PUser
	47, // 21: company.UserListQueryResponse.page_ctx:type_name -> ptype.PageCtx
	29, // 22: company.BatchInviteUserResponse.invite_result:type_name -> company.InviteResult
	6,  // 23: company.UserService.InviteUser:input_type -> company.InviteUserRequest
	8,  // 24: company.UserService.ConfirmInvite:input_type -> company.ConfirmInviteRequest
	10, // 25: company.UserService.GetUserInviteInfo:input_type -> company.GetUserInviteInfoRequest
	12, // 26: company.UserService.UserModify:input_type -> company.UserModifyRequest
	14, // 27: company.UserService.UserInit:input_type -> company.UserInitRequest
	16, // 28: company.UserService.GetUserRoleAndPermisson:input_type -> company.GetUserRoleAndPermissonRequest
	18, // 29: company.UserService.CheckUserPermisson:input_type -> company.CheckUserPermissonRequest
	20, // 30: company.UserService.GetUserCompanyInfo:input_type -> company.GetUserCompanyInfoRequest
	22, // 31: company.UserService.GetUserInfo:input_type -> company.GetUserInfoRequest
	25, // 32: company.UserService.UserListQuery:input_type -> company.UserListQueryRequest
	27, // 33: company.UserService.AddUserRemark:input_type -> company.AddUserRemarkRequest
	30, // 34: company.UserService.BatchInviteUser:input_type -> company.BatchInviteUserRequest
	33, // 35: company.UserService.UpdateUserFeCode:input_type -> company.UpdateUserFeCodeRequest
	35, // 36: company.UserService.GetUserProductList:input_type -> company.GetUserProductListRequest
	37, // 37: company.UserService.AddProductToUser:input_type -> company.AddProductToUserRequest
	39, // 38: company.UserService.RemoveProductFromUser:input_type -> company.RemoveProductFromUserRequest
	41, // 39: company.UserService.CheckUserProduct:input_type -> company.CheckUserProductRequest
	7,  // 40: company.UserService.InviteUser:output_type -> company.InviteUserResponse
	9,  // 41: company.UserService.ConfirmInvite:output_type -> company.ConfirmInviteResponse
	11, // 42: company.UserService.GetUserInviteInfo:output_type -> company.GetUserInviteInfoResponse
	13, // 43: company.UserService.UserModify:output_type -> company.UserModifyResponse
	15, // 44: company.UserService.UserInit:output_type -> company.UserInitResponse
	17, // 45: company.UserService.GetUserRoleAndPermisson:output_type -> company.GetUserRoleAndPermissonResponse
	19, // 46: company.UserService.CheckUserPermisson:output_type -> company.CheckUserPermissonResponse
	21, // 47: company.UserService.GetUserCompanyInfo:output_type -> company.GetUserCompanyInfoResponse
	23, // 48: company.UserService.GetUserInfo:output_type -> company.GetUserInfoResponse
	26, // 49: company.UserService.UserListQuery:output_type -> company.UserListQueryResponse
	28, // 50: company.UserService.AddUserRemark:output_type -> company.AddUserRemarkResponse
	31, // 51: company.UserService.BatchInviteUser:output_type -> company.BatchInviteUserResponse
	34, // 52: company.UserService.UpdateUserFeCode:output_type -> company.UpdateUserFeCodeResponse
	36, // 53: company.UserService.GetUserProductList:output_type -> company.GetUserProductListResponse
	38, // 54: company.UserService.AddProductToUser:output_type -> company.AddProductToUserResponse
	40, // 55: company.UserService.RemoveProductFromUser:output_type -> company.RemoveProductFromUserResponse
	42, // 56: company.UserService.CheckUserProduct:output_type -> company.CheckUserProductResponse
	40, // [40:57] is the sub-list for method output_type
	23, // [23:40] is the sub-list for method input_type
	23, // [23:23] is the sub-list for extension type_name
	23, // [23:23] is the sub-list for extension extendee
	0,  // [0:23] is the sub-list for field type_name
}

func init() { file_protos_platform_company_user_proto_init() }
func file_protos_platform_company_user_proto_init() {
	if File_protos_platform_company_user_proto != nil {
		return
	}
	file_protos_platform_company_permission_proto_init()
	file_protos_platform_company_role_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_protos_platform_company_user_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*User); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_platform_company_user_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InviteUser); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_platform_company_user_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InviteUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_platform_company_user_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InviteUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_platform_company_user_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfirmInviteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_platform_company_user_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfirmInviteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_platform_company_user_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserInviteInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_platform_company_user_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserInviteInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_platform_company_user_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserModifyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_platform_company_user_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserModifyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_platform_company_user_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserInitRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_platform_company_user_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserInitResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_platform_company_user_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserRoleAndPermissonRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_platform_company_user_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserRoleAndPermissonResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_platform_company_user_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckUserPermissonRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_platform_company_user_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckUserPermissonResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_platform_company_user_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserCompanyInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_platform_company_user_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserCompanyInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_platform_company_user_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_platform_company_user_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_platform_company_user_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PUser); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_platform_company_user_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserListQueryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_platform_company_user_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserListQueryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_platform_company_user_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddUserRemarkRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_platform_company_user_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddUserRemarkResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_platform_company_user_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InviteResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_platform_company_user_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchInviteUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_platform_company_user_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchInviteUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_platform_company_user_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetReferedUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_platform_company_user_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUserFeCodeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_platform_company_user_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUserFeCodeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_platform_company_user_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserProductListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_platform_company_user_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserProductListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_platform_company_user_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddProductToUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_platform_company_user_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddProductToUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_platform_company_user_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveProductFromUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_platform_company_user_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveProductFromUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_platform_company_user_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckUserProductRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_platform_company_user_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckUserProductResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_protos_platform_company_user_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   39,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_protos_platform_company_user_proto_goTypes,
		DependencyIndexes: file_protos_platform_company_user_proto_depIdxs,
		EnumInfos:         file_protos_platform_company_user_proto_enumTypes,
		MessageInfos:      file_protos_platform_company_user_proto_msgTypes,
	}.Build()
	File_protos_platform_company_user_proto = out.File
	file_protos_platform_company_user_proto_rawDesc = nil
	file_protos_platform_company_user_proto_goTypes = nil
	file_protos_platform_company_user_proto_depIdxs = nil
}
