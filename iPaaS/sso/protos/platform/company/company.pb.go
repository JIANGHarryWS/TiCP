// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.17.1
// source: protos/platform/company/company.proto

package company

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	ptype "github.com/yuansuan/ticp/iPaaS/sso/protos/platform/ptype"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 用户状态
type CompanyUserStatus int32

const (
	// 未知
	CompanyUserStatus_UNKNOWN CompanyUserStatus = 0
	// 正常
	CompanyUserStatus_NORMAL CompanyUserStatus = 1
	// 删除
	CompanyUserStatus_DELETED CompanyUserStatus = 2
)

// Enum value maps for CompanyUserStatus.
var (
	CompanyUserStatus_name = map[int32]string{
		0: "UNKNOWN",
		1: "NORMAL",
		2: "DELETED",
	}
	CompanyUserStatus_value = map[string]int32{
		"UNKNOWN": 0,
		"NORMAL":  1,
		"DELETED": 2,
	}
)

func (x CompanyUserStatus) Enum() *CompanyUserStatus {
	p := new(CompanyUserStatus)
	*p = x
	return p
}

func (x CompanyUserStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CompanyUserStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_protos_platform_company_company_proto_enumTypes[0].Descriptor()
}

func (CompanyUserStatus) Type() protoreflect.EnumType {
	return &file_protos_platform_company_company_proto_enumTypes[0]
}

func (x CompanyUserStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CompanyUserStatus.Descriptor instead.
func (CompanyUserStatus) EnumDescriptor() ([]byte, []int) {
	return file_protos_platform_company_company_proto_rawDescGZIP(), []int{0}
}

// 企业状态
type CompanyStatus int32

const (
	// 未知
	CompanyStatus_COMPANY_UNKNOWN CompanyStatus = 0
	// 正常
	CompanyStatus_COMPANY_NORMAL CompanyStatus = 1
	// 删除
	CompanyStatus_COMPANY_DELETED CompanyStatus = 2
)

// Enum value maps for CompanyStatus.
var (
	CompanyStatus_name = map[int32]string{
		0: "COMPANY_UNKNOWN",
		1: "COMPANY_NORMAL",
		2: "COMPANY_DELETED",
	}
	CompanyStatus_value = map[string]int32{
		"COMPANY_UNKNOWN": 0,
		"COMPANY_NORMAL":  1,
		"COMPANY_DELETED": 2,
	}
)

func (x CompanyStatus) Enum() *CompanyStatus {
	p := new(CompanyStatus)
	*p = x
	return p
}

func (x CompanyStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CompanyStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_protos_platform_company_company_proto_enumTypes[1].Descriptor()
}

func (CompanyStatus) Type() protoreflect.EnumType {
	return &file_protos_platform_company_company_proto_enumTypes[1]
}

func (x CompanyStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CompanyStatus.Descriptor instead.
func (CompanyStatus) EnumDescriptor() ([]byte, []int) {
	return file_protos_platform_company_company_proto_rawDescGZIP(), []int{1}
}

// 开启部门管理状态
type OpenDepartMentMangeStatus int32

const (
	// 未知
	OpenDepartMentMangeStatus_DEPARTMENT_MANAGE_STATUS_UNKNOWN OpenDepartMentMangeStatus = 0
	// 开启
	OpenDepartMentMangeStatus_DEPARTMENT_MANAGE_STATUS_OPEN OpenDepartMentMangeStatus = 1
	// 关闭
	OpenDepartMentMangeStatus_DEPARTMENT_MANAGE_STATUS_CLOSE OpenDepartMentMangeStatus = 2
)

// Enum value maps for OpenDepartMentMangeStatus.
var (
	OpenDepartMentMangeStatus_name = map[int32]string{
		0: "DEPARTMENT_MANAGE_STATUS_UNKNOWN",
		1: "DEPARTMENT_MANAGE_STATUS_OPEN",
		2: "DEPARTMENT_MANAGE_STATUS_CLOSE",
	}
	OpenDepartMentMangeStatus_value = map[string]int32{
		"DEPARTMENT_MANAGE_STATUS_UNKNOWN": 0,
		"DEPARTMENT_MANAGE_STATUS_OPEN":    1,
		"DEPARTMENT_MANAGE_STATUS_CLOSE":   2,
	}
)

func (x OpenDepartMentMangeStatus) Enum() *OpenDepartMentMangeStatus {
	p := new(OpenDepartMentMangeStatus)
	*p = x
	return p
}

func (x OpenDepartMentMangeStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OpenDepartMentMangeStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_protos_platform_company_company_proto_enumTypes[2].Descriptor()
}

func (OpenDepartMentMangeStatus) Type() protoreflect.EnumType {
	return &file_protos_platform_company_company_proto_enumTypes[2]
}

func (x OpenDepartMentMangeStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OpenDepartMentMangeStatus.Descriptor instead.
func (OpenDepartMentMangeStatus) EnumDescriptor() ([]byte, []int) {
	return file_protos_platform_company_company_proto_rawDescGZIP(), []int{2}
}

// 企业看板警告代码
type CompanyAlertCode int32

const (
	// 未知状态
	CompanyAlertCode_ALERT_UNKNOWN CompanyAlertCode = 0
	// 正常状态
	CompanyAlertCode_ALERT_NORMAL CompanyAlertCode = 1
	// 橙色警告
	CompanyAlertCode_ALERT_ORANGE CompanyAlertCode = 2
	// 红色警告
	CompanyAlertCode_ALERT_RED CompanyAlertCode = 3
)

// Enum value maps for CompanyAlertCode.
var (
	CompanyAlertCode_name = map[int32]string{
		0: "ALERT_UNKNOWN",
		1: "ALERT_NORMAL",
		2: "ALERT_ORANGE",
		3: "ALERT_RED",
	}
	CompanyAlertCode_value = map[string]int32{
		"ALERT_UNKNOWN": 0,
		"ALERT_NORMAL":  1,
		"ALERT_ORANGE":  2,
		"ALERT_RED":     3,
	}
)

func (x CompanyAlertCode) Enum() *CompanyAlertCode {
	p := new(CompanyAlertCode)
	*p = x
	return p
}

func (x CompanyAlertCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CompanyAlertCode) Descriptor() protoreflect.EnumDescriptor {
	return file_protos_platform_company_company_proto_enumTypes[3].Descriptor()
}

func (CompanyAlertCode) Type() protoreflect.EnumType {
	return &file_protos_platform_company_company_proto_enumTypes[3]
}

func (x CompanyAlertCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CompanyAlertCode.Descriptor instead.
func (CompanyAlertCode) EnumDescriptor() ([]byte, []int) {
	return file_protos_platform_company_company_proto_rawDescGZIP(), []int{3}
}

// 企业标签
type CompanyLabel int32

const (
	// 未知
	CompanyLabel_LABEL_UNKNOWN CompanyLabel = 0
	// 正式
	CompanyLabel_LABEL_FORMAL CompanyLabel = 1
	// 试用
	CompanyLabel_LABEL_TRIAL CompanyLabel = 2
	// 废弃
	CompanyLabel_LABEL_ABANDONED CompanyLabel = 3
)

// Enum value maps for CompanyLabel.
var (
	CompanyLabel_name = map[int32]string{
		0: "LABEL_UNKNOWN",
		1: "LABEL_FORMAL",
		2: "LABEL_TRIAL",
		3: "LABEL_ABANDONED",
	}
	CompanyLabel_value = map[string]int32{
		"LABEL_UNKNOWN":   0,
		"LABEL_FORMAL":    1,
		"LABEL_TRIAL":     2,
		"LABEL_ABANDONED": 3,
	}
)

func (x CompanyLabel) Enum() *CompanyLabel {
	p := new(CompanyLabel)
	*p = x
	return p
}

func (x CompanyLabel) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CompanyLabel) Descriptor() protoreflect.EnumDescriptor {
	return file_protos_platform_company_company_proto_enumTypes[4].Descriptor()
}

func (CompanyLabel) Type() protoreflect.EnumType {
	return &file_protos_platform_company_company_proto_enumTypes[4]
}

func (x CompanyLabel) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CompanyLabel.Descriptor instead.
func (CompanyLabel) EnumDescriptor() ([]byte, []int) {
	return file_protos_platform_company_company_proto_rawDescGZIP(), []int{4}
}

// 企业用户查询排序
type CompanyUserQueryOrderBy int32

const (
	CompanyUserQueryOrderBy_ORDERBY_NULL CompanyUserQueryOrderBy = 0
	// 加入时间倒序
	CompanyUserQueryOrderBy_ORDERBY_JOINTIME_DESC CompanyUserQueryOrderBy = 1
	// 加入时间正序
	CompanyUserQueryOrderBy_ORDERBY_JOINTIME_ASC CompanyUserQueryOrderBy = 2
	// 最近登录时间倒序
	CompanyUserQueryOrderBy_ORDERBY_LASTLOGINTIME_DESC CompanyUserQueryOrderBy = 3
	// 最近登录时间正序
	CompanyUserQueryOrderBy_ORDERBY_LASTLOGINTIME_ASC CompanyUserQueryOrderBy = 4
)

// Enum value maps for CompanyUserQueryOrderBy.
var (
	CompanyUserQueryOrderBy_name = map[int32]string{
		0: "ORDERBY_NULL",
		1: "ORDERBY_JOINTIME_DESC",
		2: "ORDERBY_JOINTIME_ASC",
		3: "ORDERBY_LASTLOGINTIME_DESC",
		4: "ORDERBY_LASTLOGINTIME_ASC",
	}
	CompanyUserQueryOrderBy_value = map[string]int32{
		"ORDERBY_NULL":               0,
		"ORDERBY_JOINTIME_DESC":      1,
		"ORDERBY_JOINTIME_ASC":       2,
		"ORDERBY_LASTLOGINTIME_DESC": 3,
		"ORDERBY_LASTLOGINTIME_ASC":  4,
	}
)

func (x CompanyUserQueryOrderBy) Enum() *CompanyUserQueryOrderBy {
	p := new(CompanyUserQueryOrderBy)
	*p = x
	return p
}

func (x CompanyUserQueryOrderBy) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CompanyUserQueryOrderBy) Descriptor() protoreflect.EnumDescriptor {
	return file_protos_platform_company_company_proto_enumTypes[5].Descriptor()
}

func (CompanyUserQueryOrderBy) Type() protoreflect.EnumType {
	return &file_protos_platform_company_company_proto_enumTypes[5]
}

func (x CompanyUserQueryOrderBy) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CompanyUserQueryOrderBy.Descriptor instead.
func (CompanyUserQueryOrderBy) EnumDescriptor() ([]byte, []int) {
	return file_protos_platform_company_company_proto_rawDescGZIP(), []int{5}
}

// 企业查询排序
type CompanyQueryOrderBy int32

const (
	// 默认为ID倒序
	CompanyQueryOrderBy_COMPANY_ORDERBY_NULL CompanyQueryOrderBy = 0
	// 企业ID正序
	CompanyQueryOrderBy_COMPANY_ORDERBY_IDASC CompanyQueryOrderBy = 1
	// 企业ID倒序
	CompanyQueryOrderBy_COMPANY_ORDERBY_IDDESC CompanyQueryOrderBy = 2
)

// Enum value maps for CompanyQueryOrderBy.
var (
	CompanyQueryOrderBy_name = map[int32]string{
		0: "COMPANY_ORDERBY_NULL",
		1: "COMPANY_ORDERBY_IDASC",
		2: "COMPANY_ORDERBY_IDDESC",
	}
	CompanyQueryOrderBy_value = map[string]int32{
		"COMPANY_ORDERBY_NULL":   0,
		"COMPANY_ORDERBY_IDASC":  1,
		"COMPANY_ORDERBY_IDDESC": 2,
	}
)

func (x CompanyQueryOrderBy) Enum() *CompanyQueryOrderBy {
	p := new(CompanyQueryOrderBy)
	*p = x
	return p
}

func (x CompanyQueryOrderBy) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CompanyQueryOrderBy) Descriptor() protoreflect.EnumDescriptor {
	return file_protos_platform_company_company_proto_enumTypes[6].Descriptor()
}

func (CompanyQueryOrderBy) Type() protoreflect.EnumType {
	return &file_protos_platform_company_company_proto_enumTypes[6]
}

func (x CompanyQueryOrderBy) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CompanyQueryOrderBy.Descriptor instead.
func (CompanyQueryOrderBy) EnumDescriptor() ([]byte, []int) {
	return file_protos_platform_company_company_proto_rawDescGZIP(), []int{6}
}

type FileType int32

const (
	// 未知
	FileType_FILE_UNKNOWN FileType = 0
	// 普通文件
	FileType_FILE FileType = 1
	// 文件夹
	FileType_FOLDER FileType = 2
	// 批量操作
	FileType_BATCH FileType = 3
)

// Enum value maps for FileType.
var (
	FileType_name = map[int32]string{
		0: "FILE_UNKNOWN",
		1: "FILE",
		2: "FOLDER",
		3: "BATCH",
	}
	FileType_value = map[string]int32{
		"FILE_UNKNOWN": 0,
		"FILE":         1,
		"FOLDER":       2,
		"BATCH":        3,
	}
)

func (x FileType) Enum() *FileType {
	p := new(FileType)
	*p = x
	return p
}

func (x FileType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FileType) Descriptor() protoreflect.EnumDescriptor {
	return file_protos_platform_company_company_proto_enumTypes[7].Descriptor()
}

func (FileType) Type() protoreflect.EnumType {
	return &file_protos_platform_company_company_proto_enumTypes[7]
}

func (x FileType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FileType.Descriptor instead.
func (FileType) EnumDescriptor() ([]byte, []int) {
	return file_protos_platform_company_company_proto_rawDescGZIP(), []int{7}
}

type OperateType int32

const (
	// 未知
	OperateType_OP_UNKNOWN OperateType = 0
	// 上传
	OperateType_UPLOAD OperateType = 1
	// 下载
	OperateType_DOWNLOAD OperateType = 2
	// 删除
	OperateType_DELETE OperateType = 3
	// 重命名
	OperateType_RENAME OperateType = 4
	// 添加文件夹
	OperateType_ADD_FOLDER OperateType = 5
)

// Enum value maps for OperateType.
var (
	OperateType_name = map[int32]string{
		0: "OP_UNKNOWN",
		1: "UPLOAD",
		2: "DOWNLOAD",
		3: "DELETE",
		4: "RENAME",
		5: "ADD_FOLDER",
	}
	OperateType_value = map[string]int32{
		"OP_UNKNOWN": 0,
		"UPLOAD":     1,
		"DOWNLOAD":   2,
		"DELETE":     3,
		"RENAME":     4,
		"ADD_FOLDER": 5,
	}
)

func (x OperateType) Enum() *OperateType {
	p := new(OperateType)
	*p = x
	return p
}

func (x OperateType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OperateType) Descriptor() protoreflect.EnumDescriptor {
	return file_protos_platform_company_company_proto_enumTypes[8].Descriptor()
}

func (OperateType) Type() protoreflect.EnumType {
	return &file_protos_platform_company_company_proto_enumTypes[8]
}

func (x OperateType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OperateType.Descriptor instead.
func (OperateType) EnumDescriptor() ([]byte, []int) {
	return file_protos_platform_company_company_proto_rawDescGZIP(), []int{8}
}

type Company struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 企业ID
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// 企业名称
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// 营业执照注册号
	BizCode string `protobuf:"bytes,3,opt,name=biz_code,json=bizCode,proto3" json:"biz_code,omitempty"`
	// @inject_tag: `validate:"min=1,max=2"`
	IsYsCloud int32 `protobuf:"varint,4,opt,name=is_ys_cloud,json=isYsCloud,proto3" json:"is_ys_cloud,omitempty"`
	// 联系人
	Contact string `protobuf:"bytes,5,opt,name=contact,proto3" json:"contact,omitempty"`
	// 联系人电话
	Phone string `protobuf:"bytes,6,opt,name=phone,proto3" json:"phone,omitempty"`
	// 备注
	Remark string `protobuf:"bytes,7,opt,name=remark,proto3" json:"remark,omitempty"`
	// 企业状态
	Status    CompanyStatus `protobuf:"varint,8,opt,name=status,proto3,enum=company.CompanyStatus" json:"status,omitempty"`
	AccountId string        `protobuf:"bytes,9,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	// 修改者用户uid
	ModifyUid string `protobuf:"bytes,10,opt,name=modify_uid,json=modifyUid,proto3" json:"modify_uid,omitempty"`
	// 修改者姓名
	ModifyName string `protobuf:"bytes,11,opt,name=modify_name,json=modifyName,proto3" json:"modify_name,omitempty"`
	// 更新时间
	UpdateTime *timestamppb.Timestamp `protobuf:"bytes,12,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	// 创建者用户id
	CreateUid string `protobuf:"bytes,13,opt,name=create_uid,json=createUid,proto3" json:"create_uid,omitempty"`
	// 创建者姓名
	CreateName string `protobuf:"bytes,14,opt,name=create_name,json=createName,proto3" json:"create_name,omitempty"`
	// 创建时间
	CreateTime *timestamppb.Timestamp `protobuf:"bytes,15,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	// 域名
	Domain string `protobuf:"bytes,16,opt,name=domain,proto3" json:"domain,omitempty"`
	// 是否开启部门管理功能
	IsOpenDepartmentManage OpenDepartMentMangeStatus `protobuf:"varint,17,opt,name=is_open_department_manage,json=isOpenDepartmentManage,proto3,enum=company.OpenDepartMentMangeStatus" json:"is_open_department_manage,omitempty"`
	// 最大项目数量
	MaxProjects int64 `protobuf:"varint,18,opt,name=max_projects,json=maxProjects,proto3" json:"max_projects,omitempty"`
	// 存储配额
	StorageQuota int64 `protobuf:"varint,19,opt,name=storage_quota,json=storageQuota,proto3" json:"storage_quota,omitempty"`
	// 超级管理员ID
	SuperAdminId string `protobuf:"bytes,20,opt,name=super_admin_id,json=superAdminId,proto3" json:"super_admin_id,omitempty"`
	// 平台ID
	ProductId string `protobuf:"bytes,21,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
	// 企业标签
	Label CompanyLabel `protobuf:"varint,22,opt,name=label,proto3,enum=company.CompanyLabel" json:"label,omitempty"`
}

func (x *Company) Reset() {
	*x = Company{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_platform_company_company_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Company) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Company) ProtoMessage() {}

func (x *Company) ProtoReflect() protoreflect.Message {
	mi := &file_protos_platform_company_company_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Company.ProtoReflect.Descriptor instead.
func (*Company) Descriptor() ([]byte, []int) {
	return file_protos_platform_company_company_proto_rawDescGZIP(), []int{0}
}

func (x *Company) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Company) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Company) GetBizCode() string {
	if x != nil {
		return x.BizCode
	}
	return ""
}

func (x *Company) GetIsYsCloud() int32 {
	if x != nil {
		return x.IsYsCloud
	}
	return 0
}

func (x *Company) GetContact() string {
	if x != nil {
		return x.Contact
	}
	return ""
}

func (x *Company) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *Company) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *Company) GetStatus() CompanyStatus {
	if x != nil {
		return x.Status
	}
	return CompanyStatus_COMPANY_UNKNOWN
}

func (x *Company) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *Company) GetModifyUid() string {
	if x != nil {
		return x.ModifyUid
	}
	return ""
}

func (x *Company) GetModifyName() string {
	if x != nil {
		return x.ModifyName
	}
	return ""
}

func (x *Company) GetUpdateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdateTime
	}
	return nil
}

func (x *Company) GetCreateUid() string {
	if x != nil {
		return x.CreateUid
	}
	return ""
}

func (x *Company) GetCreateName() string {
	if x != nil {
		return x.CreateName
	}
	return ""
}

func (x *Company) GetCreateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CreateTime
	}
	return nil
}

func (x *Company) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *Company) GetIsOpenDepartmentManage() OpenDepartMentMangeStatus {
	if x != nil {
		return x.IsOpenDepartmentManage
	}
	return OpenDepartMentMangeStatus_DEPARTMENT_MANAGE_STATUS_UNKNOWN
}

func (x *Company) GetMaxProjects() int64 {
	if x != nil {
		return x.MaxProjects
	}
	return 0
}

func (x *Company) GetStorageQuota() int64 {
	if x != nil {
		return x.StorageQuota
	}
	return 0
}

func (x *Company) GetSuperAdminId() string {
	if x != nil {
		return x.SuperAdminId
	}
	return ""
}

func (x *Company) GetProductId() string {
	if x != nil {
		return x.ProductId
	}
	return ""
}

func (x *Company) GetLabel() CompanyLabel {
	if x != nil {
		return x.Label
	}
	return CompanyLabel_LABEL_UNKNOWN
}

type CreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 企业名称
	// @inject_tag: `validate:"required"`
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// 营业执照注册号
	BizCode string `protobuf:"bytes,2,opt,name=biz_code,json=bizCode,proto3" json:"biz_code,omitempty"`
	// 超级管理员姓名
	// @inject_tag: `validate:"required"`
	Contact string `protobuf:"bytes,3,opt,name=contact,proto3" json:"contact,omitempty"`
	// 超级管理员电话
	// @inject_tag: `validate:"required"`
	Phone string `protobuf:"bytes,4,opt,name=phone,proto3" json:"phone,omitempty"`
	// 备注
	Remark string `protobuf:"bytes,5,opt,name=remark,proto3" json:"remark,omitempty"`
	// 创建者用户id
	// @inject_tag: `validate:"is_ysid,required"`
	CreateUid string `protobuf:"bytes,6,opt,name=create_uid,json=createUid,proto3" json:"create_uid,omitempty"`
	// 创建者姓名
	// @inject_tag: `validate:"required"`
	CreateName string `protobuf:"bytes,7,opt,name=create_name,json=createName,proto3" json:"create_name,omitempty"`
	// 企业授信额度
	CreditQuota int64 `protobuf:"varint,8,opt,name=credit_quota,json=creditQuota,proto3" json:"credit_quota,omitempty"`
	// @inject_tag: `validate:"is_ysid"`
	ProductId string `protobuf:"bytes,9,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
	// 域名
	Domain string `protobuf:"bytes,10,opt,name=domain,proto3" json:"domain,omitempty"`
	// 是否开启部门管理功能
	IsOpenDepartmentManage OpenDepartMentMangeStatus `protobuf:"varint,11,opt,name=is_open_department_manage,json=isOpenDepartmentManage,proto3,enum=company.OpenDepartMentMangeStatus" json:"is_open_department_manage,omitempty"`
	// 增加存储配额
	StorageQuota int64 `protobuf:"varint,12,opt,name=storage_quota,json=storageQuota,proto3" json:"storage_quota,omitempty"`
	// 盒子域名
	// @inject_tag: `validate:"required"`
	BoxDomain string `protobuf:"bytes,13,opt,name=box_domain,json=boxDomain,proto3" json:"box_domain,omitempty"`
	// 序列号
	// @inject_tag: `validate:"required"`
	BoxSerialNumber string `protobuf:"bytes,14,opt,name=box_serial_number,json=boxSerialNumber,proto3" json:"box_serial_number,omitempty"`
	// 备注
	BoxRemark string `protobuf:"bytes,15,opt,name=box_remark,json=boxRemark,proto3" json:"box_remark,omitempty"`
	// 标签
	Label int64 `protobuf:"varint,16,opt,name=label,proto3" json:"label,omitempty"`
}

func (x *CreateRequest) Reset() {
	*x = CreateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_platform_company_company_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRequest) ProtoMessage() {}

func (x *CreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_platform_company_company_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRequest.ProtoReflect.Descriptor instead.
func (*CreateRequest) Descriptor() ([]byte, []int) {
	return file_protos_platform_company_company_proto_rawDescGZIP(), []int{1}
}

func (x *CreateRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateRequest) GetBizCode() string {
	if x != nil {
		return x.BizCode
	}
	return ""
}

func (x *CreateRequest) GetContact() string {
	if x != nil {
		return x.Contact
	}
	return ""
}

func (x *CreateRequest) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *CreateRequest) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *CreateRequest) GetCreateUid() string {
	if x != nil {
		return x.CreateUid
	}
	return ""
}

func (x *CreateRequest) GetCreateName() string {
	if x != nil {
		return x.CreateName
	}
	return ""
}

func (x *CreateRequest) GetCreditQuota() int64 {
	if x != nil {
		return x.CreditQuota
	}
	return 0
}

func (x *CreateRequest) GetProductId() string {
	if x != nil {
		return x.ProductId
	}
	return ""
}

func (x *CreateRequest) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *CreateRequest) GetIsOpenDepartmentManage() OpenDepartMentMangeStatus {
	if x != nil {
		return x.IsOpenDepartmentManage
	}
	return OpenDepartMentMangeStatus_DEPARTMENT_MANAGE_STATUS_UNKNOWN
}

func (x *CreateRequest) GetStorageQuota() int64 {
	if x != nil {
		return x.StorageQuota
	}
	return 0
}

func (x *CreateRequest) GetBoxDomain() string {
	if x != nil {
		return x.BoxDomain
	}
	return ""
}

func (x *CreateRequest) GetBoxSerialNumber() string {
	if x != nil {
		return x.BoxSerialNumber
	}
	return ""
}

func (x *CreateRequest) GetBoxRemark() string {
	if x != nil {
		return x.BoxRemark
	}
	return ""
}

func (x *CreateRequest) GetLabel() int64 {
	if x != nil {
		return x.Label
	}
	return 0
}

type CreateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 公司ID
	CompanyId string `protobuf:"bytes,1,opt,name=company_id,json=companyId,proto3" json:"company_id,omitempty"`
	// 超级管理员ID
	SuperAdminId string `protobuf:"bytes,2,opt,name=super_admin_id,json=superAdminId,proto3" json:"super_admin_id,omitempty"`
}

func (x *CreateResponse) Reset() {
	*x = CreateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_platform_company_company_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateResponse) ProtoMessage() {}

func (x *CreateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_platform_company_company_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateResponse.ProtoReflect.Descriptor instead.
func (*CreateResponse) Descriptor() ([]byte, []int) {
	return file_protos_platform_company_company_proto_rawDescGZIP(), []int{2}
}

func (x *CreateResponse) GetCompanyId() string {
	if x != nil {
		return x.CompanyId
	}
	return ""
}

func (x *CreateResponse) GetSuperAdminId() string {
	if x != nil {
		return x.SuperAdminId
	}
	return ""
}

type ModifyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: `validate:"is_ysid,required"`
	CompanyId string `protobuf:"bytes,1,opt,name=company_id,json=companyId,proto3" json:"company_id,omitempty"`
	// 企业名称
	// @inject_tag: `validate:"required"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// 营业执照注册号
	BizCode string `protobuf:"bytes,3,opt,name=biz_code,json=bizCode,proto3" json:"biz_code,omitempty"`
	// 超级管理员姓名
	Contact string `protobuf:"bytes,4,opt,name=contact,proto3" json:"contact,omitempty"`
	// 超级管理员电话
	Phone string `protobuf:"bytes,5,opt,name=phone,proto3" json:"phone,omitempty"`
	// 备注
	Remark string `protobuf:"bytes,6,opt,name=remark,proto3" json:"remark,omitempty"`
	// 企业状态
	// @inject_tag: `validate:"required"`
	Status CompanyStatus `protobuf:"varint,7,opt,name=status,proto3,enum=company.CompanyStatus" json:"status,omitempty"`
	// 修改者用户id
	// @inject_tag: `validate:"is_ysid,required"`
	ModifyUid string `protobuf:"bytes,8,opt,name=modify_uid,json=modifyUid,proto3" json:"modify_uid,omitempty"`
	// 修改者姓名
	// @inject_tag: `validate:"required"`
	ModifyName string `protobuf:"bytes,9,opt,name=modify_name,json=modifyName,proto3" json:"modify_name,omitempty"`
	// 域名
	Domain string `protobuf:"bytes,10,opt,name=domain,proto3" json:"domain,omitempty"`
	// 是否开启部门管理功能
	IsOpenDepartmentManage OpenDepartMentMangeStatus `protobuf:"varint,11,opt,name=is_open_department_manage,json=isOpenDepartmentManage,proto3,enum=company.OpenDepartMentMangeStatus" json:"is_open_department_manage,omitempty"`
	// 最大项目数量
	MaxProjects int64 `protobuf:"varint,12,opt,name=max_projects,json=maxProjects,proto3" json:"max_projects,omitempty"`
	// 增加存储配额
	StorageQuota int64 `protobuf:"varint,13,opt,name=storage_quota,json=storageQuota,proto3" json:"storage_quota,omitempty"`
	// 超管ID
	SuperAdminId string `protobuf:"bytes,14,opt,name=super_admin_id,json=superAdminId,proto3" json:"super_admin_id,omitempty"`
	// 验证码(修改手机号必填)
	Captcha string `protobuf:"bytes,15,opt,name=captcha,proto3" json:"captcha,omitempty"`
	// @inject_tag: `validate:"is_ysid"`
	ProductId string `protobuf:"bytes,16,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
	// 标签
	Label int64 `protobuf:"varint,17,opt,name=label,proto3" json:"label,omitempty"`
}

func (x *ModifyRequest) Reset() {
	*x = ModifyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_platform_company_company_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModifyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifyRequest) ProtoMessage() {}

func (x *ModifyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_platform_company_company_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModifyRequest.ProtoReflect.Descriptor instead.
func (*ModifyRequest) Descriptor() ([]byte, []int) {
	return file_protos_platform_company_company_proto_rawDescGZIP(), []int{3}
}

func (x *ModifyRequest) GetCompanyId() string {
	if x != nil {
		return x.CompanyId
	}
	return ""
}

func (x *ModifyRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ModifyRequest) GetBizCode() string {
	if x != nil {
		return x.BizCode
	}
	return ""
}

func (x *ModifyRequest) GetContact() string {
	if x != nil {
		return x.Contact
	}
	return ""
}

func (x *ModifyRequest) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *ModifyRequest) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *ModifyRequest) GetStatus() CompanyStatus {
	if x != nil {
		return x.Status
	}
	return CompanyStatus_COMPANY_UNKNOWN
}

func (x *ModifyRequest) GetModifyUid() string {
	if x != nil {
		return x.ModifyUid
	}
	return ""
}

func (x *ModifyRequest) GetModifyName() string {
	if x != nil {
		return x.ModifyName
	}
	return ""
}

func (x *ModifyRequest) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *ModifyRequest) GetIsOpenDepartmentManage() OpenDepartMentMangeStatus {
	if x != nil {
		return x.IsOpenDepartmentManage
	}
	return OpenDepartMentMangeStatus_DEPARTMENT_MANAGE_STATUS_UNKNOWN
}

func (x *ModifyRequest) GetMaxProjects() int64 {
	if x != nil {
		return x.MaxProjects
	}
	return 0
}

func (x *ModifyRequest) GetStorageQuota() int64 {
	if x != nil {
		return x.StorageQuota
	}
	return 0
}

func (x *ModifyRequest) GetSuperAdminId() string {
	if x != nil {
		return x.SuperAdminId
	}
	return ""
}

func (x *ModifyRequest) GetCaptcha() string {
	if x != nil {
		return x.Captcha
	}
	return ""
}

func (x *ModifyRequest) GetProductId() string {
	if x != nil {
		return x.ProductId
	}
	return ""
}

func (x *ModifyRequest) GetLabel() int64 {
	if x != nil {
		return x.Label
	}
	return 0
}

type ModifyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// success 成功 ； fail 失败
	Msg string `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *ModifyResponse) Reset() {
	*x = ModifyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_platform_company_company_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModifyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifyResponse) ProtoMessage() {}

func (x *ModifyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_platform_company_company_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModifyResponse.ProtoReflect.Descriptor instead.
func (*ModifyResponse) Descriptor() ([]byte, []int) {
	return file_protos_platform_company_company_proto_rawDescGZIP(), []int{4}
}

func (x *ModifyResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

// 企业用户
type CompanyUser struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// 企业ID
	CompanyId string `protobuf:"bytes,2,opt,name=company_id,json=companyId,proto3" json:"company_id,omitempty"`
	// 姓名
	RealName string `protobuf:"bytes,3,opt,name=real_name,json=realName,proto3" json:"real_name,omitempty"`
	// 电话
	Phone string `protobuf:"bytes,4,opt,name=phone,proto3" json:"phone,omitempty"`
	// email
	Email string `protobuf:"bytes,5,opt,name=email,proto3" json:"email,omitempty"`
	// 用户状态
	Status CompanyUserStatus `protobuf:"varint,6,opt,name=status,proto3,enum=company.CompanyUserStatus" json:"status,omitempty"`
	// 角色信息
	RoleList []*Role `protobuf:"bytes,7,rep,name=role_list,json=roleList,proto3" json:"role_list,omitempty"`
	// 创建时间
	CreateTime *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	// 更新时间
	UpdateTime *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	// 最后登录时间
	LastLoginTime *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=last_login_time,json=lastLoginTime,proto3" json:"last_login_time,omitempty"`
	// 用户名
	UserName string `protobuf:"bytes,11,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	// 显示用户名
	DisplayUserName string `protobuf:"bytes,12,opt,name=display_user_name,json=displayUserName,proto3" json:"display_user_name,omitempty"`
}

func (x *CompanyUser) Reset() {
	*x = CompanyUser{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_platform_company_company_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompanyUser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompanyUser) ProtoMessage() {}

func (x *CompanyUser) ProtoReflect() protoreflect.Message {
	mi := &file_protos_platform_company_company_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompanyUser.ProtoReflect.Descriptor instead.
func (*CompanyUser) Descriptor() ([]byte, []int) {
	return file_protos_platform_company_company_proto_rawDescGZIP(), []int{5}
}

func (x *CompanyUser) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *CompanyUser) GetCompanyId() string {
	if x != nil {
		return x.CompanyId
	}
	return ""
}

func (x *CompanyUser) GetRealName() string {
	if x != nil {
		return x.RealName
	}
	return ""
}

func (x *CompanyUser) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *CompanyUser) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *CompanyUser) GetStatus() CompanyUserStatus {
	if x != nil {
		return x.Status
	}
	return CompanyUserStatus_UNKNOWN
}

func (x *CompanyUser) GetRoleList() []*Role {
	if x != nil {
		return x.RoleList
	}
	return nil
}

func (x *CompanyUser) GetCreateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CreateTime
	}
	return nil
}

func (x *CompanyUser) GetUpdateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdateTime
	}
	return nil
}

func (x *CompanyUser) GetLastLoginTime() *timestamppb.Timestamp {
	if x != nil {
		return x.LastLoginTime
	}
	return nil
}

func (x *CompanyUser) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *CompanyUser) GetDisplayUserName() string {
	if x != nil {
		return x.DisplayUserName
	}
	return ""
}

// 企业用户查询请求
type UserQueryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 搜索关键字，全匹配用户手机号和姓名
	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	// 企业ID
	// @inject_tag: `validate:"is_ysid"`
	CompanyId string `protobuf:"bytes,2,opt,name=company_id,json=companyId,proto3" json:"company_id,omitempty"`
	// 用户状态
	Status CompanyUserStatus `protobuf:"varint,3,opt,name=status,proto3,enum=company.CompanyUserStatus" json:"status,omitempty"`
	// 结果排序
	OrderBy CompanyUserQueryOrderBy `protobuf:"varint,4,opt,name=order_by,json=orderBy,proto3,enum=company.CompanyUserQueryOrderBy" json:"order_by,omitempty"`
	// @inject_tag: `validate:"required"`
	Page *ptype.Page `protobuf:"bytes,5,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *UserQueryRequest) Reset() {
	*x = UserQueryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_platform_company_company_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserQueryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserQueryRequest) ProtoMessage() {}

func (x *UserQueryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_platform_company_company_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserQueryRequest.ProtoReflect.Descriptor instead.
func (*UserQueryRequest) Descriptor() ([]byte, []int) {
	return file_protos_platform_company_company_proto_rawDescGZIP(), []int{6}
}

func (x *UserQueryRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *UserQueryRequest) GetCompanyId() string {
	if x != nil {
		return x.CompanyId
	}
	return ""
}

func (x *UserQueryRequest) GetStatus() CompanyUserStatus {
	if x != nil {
		return x.Status
	}
	return CompanyUserStatus_UNKNOWN
}

func (x *UserQueryRequest) GetOrderBy() CompanyUserQueryOrderBy {
	if x != nil {
		return x.OrderBy
	}
	return CompanyUserQueryOrderBy_ORDERBY_NULL
}

func (x *UserQueryRequest) GetPage() *ptype.Page {
	if x != nil {
		return x.Page
	}
	return nil
}

// 企业用户查询结果
type UserQueryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 数据列表
	List []*CompanyUser `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	// @inject_tag: `validate:"required"`
	PageCtx *ptype.PageCtx `protobuf:"bytes,2,opt,name=page_ctx,json=pageCtx,proto3" json:"page_ctx,omitempty"`
}

func (x *UserQueryResponse) Reset() {
	*x = UserQueryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_platform_company_company_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserQueryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserQueryResponse) ProtoMessage() {}

func (x *UserQueryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_platform_company_company_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserQueryResponse.ProtoReflect.Descriptor instead.
func (*UserQueryResponse) Descriptor() ([]byte, []int) {
	return file_protos_platform_company_company_proto_rawDescGZIP(), []int{7}
}

func (x *UserQueryResponse) GetList() []*CompanyUser {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *UserQueryResponse) GetPageCtx() *ptype.PageCtx {
	if x != nil {
		return x.PageCtx
	}
	return nil
}

// 创建企业盒子请求
type CreateCompanyBoxRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 企业ID
	// @inject_tag: `validate:"is_ysid,required"`
	CompanyId string `protobuf:"bytes,1,opt,name=company_id,json=companyId,proto3" json:"company_id,omitempty"`
	// 盒子序列号
	// @inject_tag: `validate:"required"`
	BoxSerialNumber string `protobuf:"bytes,2,opt,name=box_serial_number,json=boxSerialNumber,proto3" json:"box_serial_number,omitempty"`
	// 盒子通信域名
	// @inject_tag: `validate:"required"`
	BoxDomain string `protobuf:"bytes,3,opt,name=box_domain,json=boxDomain,proto3" json:"box_domain,omitempty"`
	// 盒子说明
	Remark string `protobuf:"bytes,4,opt,name=remark,proto3" json:"remark,omitempty"`
	// 创建者用户ID
	// @inject_tag: `validate:"required"`
	CreateUid string `protobuf:"bytes,5,opt,name=create_uid,json=createUid,proto3" json:"create_uid,omitempty"`
	// 创建者姓名
	// @inject_tag: `validate:"required"`
	CreateName string `protobuf:"bytes,6,opt,name=create_name,json=createName,proto3" json:"create_name,omitempty"`
}

func (x *CreateCompanyBoxRequest) Reset() {
	*x = CreateCompanyBoxRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_platform_company_company_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCompanyBoxRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCompanyBoxRequest) ProtoMessage() {}

func (x *CreateCompanyBoxRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_platform_company_company_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCompanyBoxRequest.ProtoReflect.Descriptor instead.
func (*CreateCompanyBoxRequest) Descriptor() ([]byte, []int) {
	return file_protos_platform_company_company_proto_rawDescGZIP(), []int{8}
}

func (x *CreateCompanyBoxRequest) GetCompanyId() string {
	if x != nil {
		return x.CompanyId
	}
	return ""
}

func (x *CreateCompanyBoxRequest) GetBoxSerialNumber() string {
	if x != nil {
		return x.BoxSerialNumber
	}
	return ""
}

func (x *CreateCompanyBoxRequest) GetBoxDomain() string {
	if x != nil {
		return x.BoxDomain
	}
	return ""
}

func (x *CreateCompanyBoxRequest) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *CreateCompanyBoxRequest) GetCreateUid() string {
	if x != nil {
		return x.CreateUid
	}
	return ""
}

func (x *CreateCompanyBoxRequest) GetCreateName() string {
	if x != nil {
		return x.CreateName
	}
	return ""
}

// 创建企业盒子结果
type CreateCompanyBoxResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 盒子ID
	CompanyBoxId string `protobuf:"bytes,1,opt,name=company_box_id,json=companyBoxId,proto3" json:"company_box_id,omitempty"`
}

func (x *CreateCompanyBoxResponse) Reset() {
	*x = CreateCompanyBoxResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_platform_company_company_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCompanyBoxResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCompanyBoxResponse) ProtoMessage() {}

func (x *CreateCompanyBoxResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_platform_company_company_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCompanyBoxResponse.ProtoReflect.Descriptor instead.
func (*CreateCompanyBoxResponse) Descriptor() ([]byte, []int) {
	return file_protos_platform_company_company_proto_rawDescGZIP(), []int{9}
}

func (x *CreateCompanyBoxResponse) GetCompanyBoxId() string {
	if x != nil {
		return x.CompanyBoxId
	}
	return ""
}

// 获取企业用户邀请列表请求
type GetCompanyInviteListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 企业ID
	// @inject_tag: `validate:"is_ysid,required"`
	CompanyId string `protobuf:"bytes,1,opt,name=company_id,json=companyId,proto3" json:"company_id,omitempty"`
	// 用户邀请状态
	Status InviteUserStatus `protobuf:"varint,2,opt,name=status,proto3,enum=company.InviteUserStatus" json:"status,omitempty"`
	// @inject_tag: `validate:"required"`
	Page *ptype.Page `protobuf:"bytes,3,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *GetCompanyInviteListRequest) Reset() {
	*x = GetCompanyInviteListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_platform_company_company_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCompanyInviteListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCompanyInviteListRequest) ProtoMessage() {}

func (x *GetCompanyInviteListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_platform_company_company_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCompanyInviteListRequest.ProtoReflect.Descriptor instead.
func (*GetCompanyInviteListRequest) Descriptor() ([]byte, []int) {
	return file_protos_platform_company_company_proto_rawDescGZIP(), []int{10}
}

func (x *GetCompanyInviteListRequest) GetCompanyId() string {
	if x != nil {
		return x.CompanyId
	}
	return ""
}

func (x *GetCompanyInviteListRequest) GetStatus() InviteUserStatus {
	if x != nil {
		return x.Status
	}
	return InviteUserStatus_INVITE_UNKNOWN
}

func (x *GetCompanyInviteListRequest) GetPage() *ptype.Page {
	if x != nil {
		return x.Page
	}
	return nil
}

// 获取企业用户邀请列表结果
type GetCompanyInviteListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List    []*InviteUser  `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	PageCtx *ptype.PageCtx `protobuf:"bytes,2,opt,name=page_ctx,json=pageCtx,proto3" json:"page_ctx,omitempty"`
}

func (x *GetCompanyInviteListResponse) Reset() {
	*x = GetCompanyInviteListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_platform_company_company_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCompanyInviteListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCompanyInviteListResponse) ProtoMessage() {}

func (x *GetCompanyInviteListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_platform_company_company_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCompanyInviteListResponse.ProtoReflect.Descriptor instead.
func (*GetCompanyInviteListResponse) Descriptor() ([]byte, []int) {
	return file_protos_platform_company_company_proto_rawDescGZIP(), []int{11}
}

func (x *GetCompanyInviteListResponse) GetList() []*InviteUser {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *GetCompanyInviteListResponse) GetPageCtx() *ptype.PageCtx {
	if x != nil {
		return x.PageCtx
	}
	return nil
}

// 用户被邀请列表请求
type GetUserInviteListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 用户ID
	// @inject_tag: `validate:"is_ysid,required"`
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// 用户邀请状态
	Status InviteUserStatus `protobuf:"varint,2,opt,name=status,proto3,enum=company.InviteUserStatus" json:"status,omitempty"`
	// @inject_tag: `validate:"required"`
	Page *ptype.Page `protobuf:"bytes,3,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *GetUserInviteListRequest) Reset() {
	*x = GetUserInviteListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_platform_company_company_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserInviteListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserInviteListRequest) ProtoMessage() {}

func (x *GetUserInviteListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_platform_company_company_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserInviteListRequest.ProtoReflect.Descriptor instead.
func (*GetUserInviteListRequest) Descriptor() ([]byte, []int) {
	return file_protos_platform_company_company_proto_rawDescGZIP(), []int{12}
}

func (x *GetUserInviteListRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetUserInviteListRequest) GetStatus() InviteUserStatus {
	if x != nil {
		return x.Status
	}
	return InviteUserStatus_INVITE_UNKNOWN
}

func (x *GetUserInviteListRequest) GetPage() *ptype.Page {
	if x != nil {
		return x.Page
	}
	return nil
}

// 用户被邀请列表结果
type GetUserInviteListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List    []*InviteUser  `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	PageCtx *ptype.PageCtx `protobuf:"bytes,2,opt,name=page_ctx,json=pageCtx,proto3" json:"page_ctx,omitempty"`
}

func (x *GetUserInviteListResponse) Reset() {
	*x = GetUserInviteListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_platform_company_company_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserInviteListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserInviteListResponse) ProtoMessage() {}

func (x *GetUserInviteListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_platform_company_company_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserInviteListResponse.ProtoReflect.Descriptor instead.
func (*GetUserInviteListResponse) Descriptor() ([]byte, []int) {
	return file_protos_platform_company_company_proto_rawDescGZIP(), []int{13}
}

func (x *GetUserInviteListResponse) GetList() []*InviteUser {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *GetUserInviteListResponse) GetPageCtx() *ptype.PageCtx {
	if x != nil {
		return x.PageCtx
	}
	return nil
}

// 单个企业请求
type GetCompanyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 企业ID
	// @inject_tag: `validate:"is_ysid"`
	CompanyId string `protobuf:"bytes,1,opt,name=company_id,json=companyId,proto3" json:"company_id,omitempty"`
}

func (x *GetCompanyRequest) Reset() {
	*x = GetCompanyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_platform_company_company_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCompanyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCompanyRequest) ProtoMessage() {}

func (x *GetCompanyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_platform_company_company_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCompanyRequest.ProtoReflect.Descriptor instead.
func (*GetCompanyRequest) Descriptor() ([]byte, []int) {
	return file_protos_platform_company_company_proto_rawDescGZIP(), []int{14}
}

func (x *GetCompanyRequest) GetCompanyId() string {
	if x != nil {
		return x.CompanyId
	}
	return ""
}

// 企业列表请求
type CompanyListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 企业ID
	// @inject_tag: `validate:"is_ysid"`
	CompanyId string `protobuf:"bytes,1,opt,name=company_id,json=companyId,proto3" json:"company_id,omitempty"`
	// 企业状态
	Status CompanyStatus `protobuf:"varint,2,opt,name=status,proto3,enum=company.CompanyStatus" json:"status,omitempty"`
	// 企业名称关键字
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	// @inject_tag: `validate:"required"`
	Page *ptype.Page `protobuf:"bytes,4,opt,name=page,proto3" json:"page,omitempty"`
	// 排序
	OrderBy CompanyQueryOrderBy `protobuf:"varint,5,opt,name=order_by,json=orderBy,proto3,enum=company.CompanyQueryOrderBy" json:"order_by,omitempty"`
	// @inject_tag: `validate:"is_ysid"`
	ProductId string `protobuf:"bytes,6,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
	// 企业标签
	Label CompanyLabel `protobuf:"varint,7,opt,name=label,proto3,enum=company.CompanyLabel" json:"label,omitempty"`
}

func (x *CompanyListRequest) Reset() {
	*x = CompanyListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_platform_company_company_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompanyListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompanyListRequest) ProtoMessage() {}

func (x *CompanyListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_platform_company_company_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompanyListRequest.ProtoReflect.Descriptor instead.
func (*CompanyListRequest) Descriptor() ([]byte, []int) {
	return file_protos_platform_company_company_proto_rawDescGZIP(), []int{15}
}

func (x *CompanyListRequest) GetCompanyId() string {
	if x != nil {
		return x.CompanyId
	}
	return ""
}

func (x *CompanyListRequest) GetStatus() CompanyStatus {
	if x != nil {
		return x.Status
	}
	return CompanyStatus_COMPANY_UNKNOWN
}

func (x *CompanyListRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CompanyListRequest) GetPage() *ptype.Page {
	if x != nil {
		return x.Page
	}
	return nil
}

func (x *CompanyListRequest) GetOrderBy() CompanyQueryOrderBy {
	if x != nil {
		return x.OrderBy
	}
	return CompanyQueryOrderBy_COMPANY_ORDERBY_NULL
}

func (x *CompanyListRequest) GetProductId() string {
	if x != nil {
		return x.ProductId
	}
	return ""
}

func (x *CompanyListRequest) GetLabel() CompanyLabel {
	if x != nil {
		return x.Label
	}
	return CompanyLabel_LABEL_UNKNOWN
}

// 企业列表结果
type CompanyListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List    []*Company     `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	PageCtx *ptype.PageCtx `protobuf:"bytes,2,opt,name=page_ctx,json=pageCtx,proto3" json:"page_ctx,omitempty"`
}

func (x *CompanyListResponse) Reset() {
	*x = CompanyListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_platform_company_company_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompanyListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompanyListResponse) ProtoMessage() {}

func (x *CompanyListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_platform_company_company_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompanyListResponse.ProtoReflect.Descriptor instead.
func (*CompanyListResponse) Descriptor() ([]byte, []int) {
	return file_protos_platform_company_company_proto_rawDescGZIP(), []int{16}
}

func (x *CompanyListResponse) GetList() []*Company {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *CompanyListResponse) GetPageCtx() *ptype.PageCtx {
	if x != nil {
		return x.PageCtx
	}
	return nil
}

// 企业用户信息修改请求
type CompanyUserModifyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: `validate:"is_ysid,required"`
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// 用户状态
	// @inject_tag: `validate:"required"`
	Status CompanyUserStatus `protobuf:"varint,2,opt,name=status,proto3,enum=company.CompanyUserStatus" json:"status,omitempty"`
	// 企业ID
	// @inject_tag: `validate:"is_ysid,required"`
	CompanyId string `protobuf:"bytes,3,opt,name=company_id,json=companyId,proto3" json:"company_id,omitempty"`
}

func (x *CompanyUserModifyRequest) Reset() {
	*x = CompanyUserModifyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_platform_company_company_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompanyUserModifyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompanyUserModifyRequest) ProtoMessage() {}

func (x *CompanyUserModifyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_platform_company_company_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompanyUserModifyRequest.ProtoReflect.Descriptor instead.
func (*CompanyUserModifyRequest) Descriptor() ([]byte, []int) {
	return file_protos_platform_company_company_proto_rawDescGZIP(), []int{17}
}

func (x *CompanyUserModifyRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *CompanyUserModifyRequest) GetStatus() CompanyUserStatus {
	if x != nil {
		return x.Status
	}
	return CompanyUserStatus_UNKNOWN
}

func (x *CompanyUserModifyRequest) GetCompanyId() string {
	if x != nil {
		return x.CompanyId
	}
	return ""
}

// 企业用户信息修改结果
type CompanyUserModifyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// success 成功 ； fail 失败
	Msg string `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *CompanyUserModifyResponse) Reset() {
	*x = CompanyUserModifyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_platform_company_company_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompanyUserModifyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompanyUserModifyResponse) ProtoMessage() {}

func (x *CompanyUserModifyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_platform_company_company_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompanyUserModifyResponse.ProtoReflect.Descriptor instead.
func (*CompanyUserModifyResponse) Descriptor() ([]byte, []int) {
	return file_protos_platform_company_company_proto_rawDescGZIP(), []int{18}
}

func (x *CompanyUserModifyResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

// 验证用户是否已加入企业请求
type CheckUserAlreadyJoinCompanyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 用户ID
	// @inject_tag: `validate:"is_ysid,required"`
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// 企业ID
	// @inject_tag: `validate:"is_ysid,required"`
	CompanyId string `protobuf:"bytes,2,opt,name=company_id,json=companyId,proto3" json:"company_id,omitempty"`
}

func (x *CheckUserAlreadyJoinCompanyRequest) Reset() {
	*x = CheckUserAlreadyJoinCompanyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_platform_company_company_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckUserAlreadyJoinCompanyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckUserAlreadyJoinCompanyRequest) ProtoMessage() {}

func (x *CheckUserAlreadyJoinCompanyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_platform_company_company_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckUserAlreadyJoinCompanyRequest.ProtoReflect.Descriptor instead.
func (*CheckUserAlreadyJoinCompanyRequest) Descriptor() ([]byte, []int) {
	return file_protos_platform_company_company_proto_rawDescGZIP(), []int{19}
}

func (x *CheckUserAlreadyJoinCompanyRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *CheckUserAlreadyJoinCompanyRequest) GetCompanyId() string {
	if x != nil {
		return x.CompanyId
	}
	return ""
}

// 验证用户是否已加入企业结果
type CheckUserAlreadyJoinCompanyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// true 已加入  false 没有加入
	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *CheckUserAlreadyJoinCompanyResponse) Reset() {
	*x = CheckUserAlreadyJoinCompanyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_platform_company_company_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckUserAlreadyJoinCompanyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckUserAlreadyJoinCompanyResponse) ProtoMessage() {}

func (x *CheckUserAlreadyJoinCompanyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_platform_company_company_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckUserAlreadyJoinCompanyResponse.ProtoReflect.Descriptor instead.
func (*CheckUserAlreadyJoinCompanyResponse) Descriptor() ([]byte, []int) {
	return file_protos_platform_company_company_proto_rawDescGZIP(), []int{20}
}

func (x *CheckUserAlreadyJoinCompanyResponse) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

// 企业用户设置角色请求
type SetRoleForCompanyUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 企业ID
	// @inject_tag: `validate:"is_ysid,required"`
	CompanyId string `protobuf:"bytes,1,opt,name=company_id,json=companyId,proto3" json:"company_id,omitempty"`
	// 用户ID
	// @inject_tag: `validate:"is_ysid,required"`
	UserId string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// @inject_tag: `validate:"required"`
	Roles []string `protobuf:"bytes,3,rep,name=roles,proto3" json:"roles,omitempty"`
	// 操作者用户ID
	// @inject_tag: `validate:"is_ysid,required"`
	OperatorUid string `protobuf:"bytes,4,opt,name=operator_uid,json=operatorUid,proto3" json:"operator_uid,omitempty"`
	// 操作者姓名
	OperatorName string `protobuf:"bytes,5,opt,name=operator_name,json=operatorName,proto3" json:"operator_name,omitempty"`
}

func (x *SetRoleForCompanyUserRequest) Reset() {
	*x = SetRoleForCompanyUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_platform_company_company_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetRoleForCompanyUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetRoleForCompanyUserRequest) ProtoMessage() {}

func (x *SetRoleForCompanyUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_platform_company_company_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetRoleForCompanyUserRequest.ProtoReflect.Descriptor instead.
func (*SetRoleForCompanyUserRequest) Descriptor() ([]byte, []int) {
	return file_protos_platform_company_company_proto_rawDescGZIP(), []int{21}
}

func (x *SetRoleForCompanyUserRequest) GetCompanyId() string {
	if x != nil {
		return x.CompanyId
	}
	return ""
}

func (x *SetRoleForCompanyUserRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *SetRoleForCompanyUserRequest) GetRoles() []string {
	if x != nil {
		return x.Roles
	}
	return nil
}

func (x *SetRoleForCompanyUserRequest) GetOperatorUid() string {
	if x != nil {
		return x.OperatorUid
	}
	return ""
}

func (x *SetRoleForCompanyUserRequest) GetOperatorName() string {
	if x != nil {
		return x.OperatorName
	}
	return ""
}

// 企业用户设置角色结果
type SetRoleForCompanyUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// success 成功 ； fail 失败
	Msg string `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *SetRoleForCompanyUserResponse) Reset() {
	*x = SetRoleForCompanyUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_platform_company_company_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetRoleForCompanyUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetRoleForCompanyUserResponse) ProtoMessage() {}

func (x *SetRoleForCompanyUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_platform_company_company_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetRoleForCompanyUserResponse.ProtoReflect.Descriptor instead.
func (*SetRoleForCompanyUserResponse) Descriptor() ([]byte, []int) {
	return file_protos_platform_company_company_proto_rawDescGZIP(), []int{22}
}

func (x *SetRoleForCompanyUserResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

// 添加用户到企业请求
type AddUserToCompanyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: `validate:"is_ysid,required"`
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// @inject_tag: `validate:"is_ysid,required"`
	CompanyId string `protobuf:"bytes,2,opt,name=company_id,json=companyId,proto3" json:"company_id,omitempty"`
	IsAdmin   bool   `protobuf:"varint,3,opt,name=is_admin,json=isAdmin,proto3" json:"is_admin,omitempty"`
}

func (x *AddUserToCompanyRequest) Reset() {
	*x = AddUserToCompanyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_platform_company_company_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddUserToCompanyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddUserToCompanyRequest) ProtoMessage() {}

func (x *AddUserToCompanyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_platform_company_company_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddUserToCompanyRequest.ProtoReflect.Descriptor instead.
func (*AddUserToCompanyRequest) Descriptor() ([]byte, []int) {
	return file_protos_platform_company_company_proto_rawDescGZIP(), []int{23}
}

func (x *AddUserToCompanyRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *AddUserToCompanyRequest) GetCompanyId() string {
	if x != nil {
		return x.CompanyId
	}
	return ""
}

func (x *AddUserToCompanyRequest) GetIsAdmin() bool {
	if x != nil {
		return x.IsAdmin
	}
	return false
}

// 添加用户到企业结果
type AddUserToCompanyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// success 成功 ； fail 失败
	Msg string `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *AddUserToCompanyResponse) Reset() {
	*x = AddUserToCompanyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_platform_company_company_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddUserToCompanyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddUserToCompanyResponse) ProtoMessage() {}

func (x *AddUserToCompanyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_platform_company_company_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddUserToCompanyResponse.ProtoReflect.Descriptor instead.
func (*AddUserToCompanyResponse) Descriptor() ([]byte, []int) {
	return file_protos_platform_company_company_proto_rawDescGZIP(), []int{24}
}

func (x *AddUserToCompanyResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

// 获取用户加入企业信息请求
type GetUserJoinCompanyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: `validate:"is_ysid,required"`
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *GetUserJoinCompanyRequest) Reset() {
	*x = GetUserJoinCompanyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_platform_company_company_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserJoinCompanyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserJoinCompanyRequest) ProtoMessage() {}

func (x *GetUserJoinCompanyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_platform_company_company_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserJoinCompanyRequest.ProtoReflect.Descriptor instead.
func (*GetUserJoinCompanyRequest) Descriptor() ([]byte, []int) {
	return file_protos_platform_company_company_proto_rawDescGZIP(), []int{25}
}

func (x *GetUserJoinCompanyRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

// 获取用户加入企业信息结果
type GetUserJoinCompanyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*Company `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *GetUserJoinCompanyResponse) Reset() {
	*x = GetUserJoinCompanyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_platform_company_company_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserJoinCompanyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserJoinCompanyResponse) ProtoMessage() {}

func (x *GetUserJoinCompanyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_platform_company_company_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserJoinCompanyResponse.ProtoReflect.Descriptor instead.
func (*GetUserJoinCompanyResponse) Descriptor() ([]byte, []int) {
	return file_protos_platform_company_company_proto_rawDescGZIP(), []int{26}
}

func (x *GetUserJoinCompanyResponse) GetList() []*Company {
	if x != nil {
		return x.List
	}
	return nil
}

// 获取企业用户操作权限列表请求
type GetCompanyUserPermissionListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 企业ID
	// @inject_tag: `validate:"is_ysid,required"`
	CompanyId string `protobuf:"bytes,1,opt,name=company_id,json=companyId,proto3" json:"company_id,omitempty"`
	// 用户ID
	// @inject_tag: `validate:"is_ysid,required"`
	UserId string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *GetCompanyUserPermissionListRequest) Reset() {
	*x = GetCompanyUserPermissionListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_platform_company_company_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCompanyUserPermissionListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCompanyUserPermissionListRequest) ProtoMessage() {}

func (x *GetCompanyUserPermissionListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_platform_company_company_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCompanyUserPermissionListRequest.ProtoReflect.Descriptor instead.
func (*GetCompanyUserPermissionListRequest) Descriptor() ([]byte, []int) {
	return file_protos_platform_company_company_proto_rawDescGZIP(), []int{27}
}

func (x *GetCompanyUserPermissionListRequest) GetCompanyId() string {
	if x != nil {
		return x.CompanyId
	}
	return ""
}

func (x *GetCompanyUserPermissionListRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

// 获取企业用户操作权限列表结果
type GetCompanyUserPermissionListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*Permission `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *GetCompanyUserPermissionListResponse) Reset() {
	*x = GetCompanyUserPermissionListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_platform_company_company_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCompanyUserPermissionListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCompanyUserPermissionListResponse) ProtoMessage() {}

func (x *GetCompanyUserPermissionListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_platform_company_company_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCompanyUserPermissionListResponse.ProtoReflect.Descriptor instead.
func (*GetCompanyUserPermissionListResponse) Descriptor() ([]byte, []int) {
	return file_protos_platform_company_company_proto_rawDescGZIP(), []int{28}
}

func (x *GetCompanyUserPermissionListResponse) GetList() []*Permission {
	if x != nil {
		return x.List
	}
	return nil
}

type GetCompanyProductListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CompanyId string `protobuf:"bytes,1,opt,name=company_id,json=companyId,proto3" json:"company_id,omitempty"`
}

func (x *GetCompanyProductListRequest) Reset() {
	*x = GetCompanyProductListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_platform_company_company_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCompanyProductListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCompanyProductListRequest) ProtoMessage() {}

func (x *GetCompanyProductListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_platform_company_company_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCompanyProductListRequest.ProtoReflect.Descriptor instead.
func (*GetCompanyProductListRequest) Descriptor() ([]byte, []int) {
	return file_protos_platform_company_company_proto_rawDescGZIP(), []int{29}
}

func (x *GetCompanyProductListRequest) GetCompanyId() string {
	if x != nil {
		return x.CompanyId
	}
	return ""
}

type GetCompanyProductListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductList []string `protobuf:"bytes,1,rep,name=product_list,json=productList,proto3" json:"product_list,omitempty"`
}

func (x *GetCompanyProductListResponse) Reset() {
	*x = GetCompanyProductListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_platform_company_company_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCompanyProductListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCompanyProductListResponse) ProtoMessage() {}

func (x *GetCompanyProductListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_platform_company_company_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCompanyProductListResponse.ProtoReflect.Descriptor instead.
func (*GetCompanyProductListResponse) Descriptor() ([]byte, []int) {
	return file_protos_platform_company_company_proto_rawDescGZIP(), []int{30}
}

func (x *GetCompanyProductListResponse) GetProductList() []string {
	if x != nil {
		return x.ProductList
	}
	return nil
}

type AddProductToCompanyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CompanyId string `protobuf:"bytes,1,opt,name=company_id,json=companyId,proto3" json:"company_id,omitempty"`
	ProductId string `protobuf:"bytes,2,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
}

func (x *AddProductToCompanyRequest) Reset() {
	*x = AddProductToCompanyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_platform_company_company_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddProductToCompanyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddProductToCompanyRequest) ProtoMessage() {}

func (x *AddProductToCompanyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_platform_company_company_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddProductToCompanyRequest.ProtoReflect.Descriptor instead.
func (*AddProductToCompanyRequest) Descriptor() ([]byte, []int) {
	return file_protos_platform_company_company_proto_rawDescGZIP(), []int{31}
}

func (x *AddProductToCompanyRequest) GetCompanyId() string {
	if x != nil {
		return x.CompanyId
	}
	return ""
}

func (x *AddProductToCompanyRequest) GetProductId() string {
	if x != nil {
		return x.ProductId
	}
	return ""
}

type AddProductToCompanyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Msg string `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *AddProductToCompanyResponse) Reset() {
	*x = AddProductToCompanyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_platform_company_company_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddProductToCompanyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddProductToCompanyResponse) ProtoMessage() {}

func (x *AddProductToCompanyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_platform_company_company_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddProductToCompanyResponse.ProtoReflect.Descriptor instead.
func (*AddProductToCompanyResponse) Descriptor() ([]byte, []int) {
	return file_protos_platform_company_company_proto_rawDescGZIP(), []int{32}
}

func (x *AddProductToCompanyResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type RemoveProductFromCompanyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CompanyId string `protobuf:"bytes,1,opt,name=company_id,json=companyId,proto3" json:"company_id,omitempty"`
	ProductId string `protobuf:"bytes,2,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
}

func (x *RemoveProductFromCompanyRequest) Reset() {
	*x = RemoveProductFromCompanyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_platform_company_company_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveProductFromCompanyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveProductFromCompanyRequest) ProtoMessage() {}

func (x *RemoveProductFromCompanyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_platform_company_company_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveProductFromCompanyRequest.ProtoReflect.Descriptor instead.
func (*RemoveProductFromCompanyRequest) Descriptor() ([]byte, []int) {
	return file_protos_platform_company_company_proto_rawDescGZIP(), []int{33}
}

func (x *RemoveProductFromCompanyRequest) GetCompanyId() string {
	if x != nil {
		return x.CompanyId
	}
	return ""
}

func (x *RemoveProductFromCompanyRequest) GetProductId() string {
	if x != nil {
		return x.ProductId
	}
	return ""
}

type RemoveProductFromCompanyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Msg string `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *RemoveProductFromCompanyResponse) Reset() {
	*x = RemoveProductFromCompanyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_platform_company_company_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveProductFromCompanyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveProductFromCompanyResponse) ProtoMessage() {}

func (x *RemoveProductFromCompanyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_platform_company_company_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveProductFromCompanyResponse.ProtoReflect.Descriptor instead.
func (*RemoveProductFromCompanyResponse) Descriptor() ([]byte, []int) {
	return file_protos_platform_company_company_proto_rawDescGZIP(), []int{34}
}

func (x *RemoveProductFromCompanyResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type CheckCompanyProductRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CompanyId string `protobuf:"bytes,1,opt,name=company_id,json=companyId,proto3" json:"company_id,omitempty"`
	ProductId string `protobuf:"bytes,2,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
}

func (x *CheckCompanyProductRequest) Reset() {
	*x = CheckCompanyProductRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_platform_company_company_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckCompanyProductRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckCompanyProductRequest) ProtoMessage() {}

func (x *CheckCompanyProductRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_platform_company_company_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckCompanyProductRequest.ProtoReflect.Descriptor instead.
func (*CheckCompanyProductRequest) Descriptor() ([]byte, []int) {
	return file_protos_platform_company_company_proto_rawDescGZIP(), []int{35}
}

func (x *CheckCompanyProductRequest) GetCompanyId() string {
	if x != nil {
		return x.CompanyId
	}
	return ""
}

func (x *CheckCompanyProductRequest) GetProductId() string {
	if x != nil {
		return x.ProductId
	}
	return ""
}

type CheckCompanyProductResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Has bool `protobuf:"varint,1,opt,name=has,proto3" json:"has,omitempty"`
}

func (x *CheckCompanyProductResponse) Reset() {
	*x = CheckCompanyProductResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_platform_company_company_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckCompanyProductResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckCompanyProductResponse) ProtoMessage() {}

func (x *CheckCompanyProductResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_platform_company_company_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckCompanyProductResponse.ProtoReflect.Descriptor instead.
func (*CheckCompanyProductResponse) Descriptor() ([]byte, []int) {
	return file_protos_platform_company_company_proto_rawDescGZIP(), []int{36}
}

func (x *CheckCompanyProductResponse) GetHas() bool {
	if x != nil {
		return x.Has
	}
	return false
}

type GetCompanyDashboradRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 企业名称 模糊匹配
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// 企业余额， 小于
	Balance int64 `protobuf:"varint,2,opt,name=balance,proto3" json:"balance,omitempty"`
	// 企业授信额度， 小于
	Credit int64 `protobuf:"varint,3,opt,name=credit,proto3" json:"credit,omitempty"`
	// 企业剩余空间， 小于
	StorageRemain int64 `protobuf:"varint,4,opt,name=storage_remain,json=storageRemain,proto3" json:"storage_remain,omitempty"`
	// 可选，警告类型， 不选则显示全部，使用本参数时需禁用分页
	AlertCode []CompanyAlertCode `protobuf:"varint,5,rep,packed,name=alert_code,json=alertCode,proto3,enum=company.CompanyAlertCode" json:"alert_code,omitempty"`
	Page      *ptype.Page        `protobuf:"bytes,6,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *GetCompanyDashboradRequest) Reset() {
	*x = GetCompanyDashboradRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_platform_company_company_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCompanyDashboradRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCompanyDashboradRequest) ProtoMessage() {}

func (x *GetCompanyDashboradRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_platform_company_company_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCompanyDashboradRequest.ProtoReflect.Descriptor instead.
func (*GetCompanyDashboradRequest) Descriptor() ([]byte, []int) {
	return file_protos_platform_company_company_proto_rawDescGZIP(), []int{37}
}

func (x *GetCompanyDashboradRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetCompanyDashboradRequest) GetBalance() int64 {
	if x != nil {
		return x.Balance
	}
	return 0
}

func (x *GetCompanyDashboradRequest) GetCredit() int64 {
	if x != nil {
		return x.Credit
	}
	return 0
}

func (x *GetCompanyDashboradRequest) GetStorageRemain() int64 {
	if x != nil {
		return x.StorageRemain
	}
	return 0
}

func (x *GetCompanyDashboradRequest) GetAlertCode() []CompanyAlertCode {
	if x != nil {
		return x.AlertCode
	}
	return nil
}

func (x *GetCompanyDashboradRequest) GetPage() *ptype.Page {
	if x != nil {
		return x.Page
	}
	return nil
}

type CompanyDashboardInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 企业ID
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// 企业名称
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// 企业状态
	Status CompanyStatus `protobuf:"varint,3,opt,name=status,proto3,enum=company.CompanyStatus" json:"status,omitempty"`
	// 余额
	Balance int64 `protobuf:"varint,4,opt,name=balance,proto3" json:"balance,omitempty"`
	// 授信额度
	Credit int64 `protobuf:"varint,5,opt,name=credit,proto3" json:"credit,omitempty"`
	// 已用存储空间
	StorageUsed int64 `protobuf:"varint,6,opt,name=storage_used,json=storageUsed,proto3" json:"storage_used,omitempty"`
	// 可用存储空间
	StorageTotal int64 `protobuf:"varint,7,opt,name=storage_total,json=storageTotal,proto3" json:"storage_total,omitempty"`
	// 存储空间过期时间
	StorageExpire *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=storage_expire,json=storageExpire,proto3" json:"storage_expire,omitempty"`
	// 警告类型
	AlertCode CompanyAlertCode `protobuf:"varint,9,opt,name=alert_code,json=alertCode,proto3,enum=company.CompanyAlertCode" json:"alert_code,omitempty"`
}

func (x *CompanyDashboardInfo) Reset() {
	*x = CompanyDashboardInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_platform_company_company_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompanyDashboardInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompanyDashboardInfo) ProtoMessage() {}

func (x *CompanyDashboardInfo) ProtoReflect() protoreflect.Message {
	mi := &file_protos_platform_company_company_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompanyDashboardInfo.ProtoReflect.Descriptor instead.
func (*CompanyDashboardInfo) Descriptor() ([]byte, []int) {
	return file_protos_platform_company_company_proto_rawDescGZIP(), []int{38}
}

func (x *CompanyDashboardInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CompanyDashboardInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CompanyDashboardInfo) GetStatus() CompanyStatus {
	if x != nil {
		return x.Status
	}
	return CompanyStatus_COMPANY_UNKNOWN
}

func (x *CompanyDashboardInfo) GetBalance() int64 {
	if x != nil {
		return x.Balance
	}
	return 0
}

func (x *CompanyDashboardInfo) GetCredit() int64 {
	if x != nil {
		return x.Credit
	}
	return 0
}

func (x *CompanyDashboardInfo) GetStorageUsed() int64 {
	if x != nil {
		return x.StorageUsed
	}
	return 0
}

func (x *CompanyDashboardInfo) GetStorageTotal() int64 {
	if x != nil {
		return x.StorageTotal
	}
	return 0
}

func (x *CompanyDashboardInfo) GetStorageExpire() *timestamppb.Timestamp {
	if x != nil {
		return x.StorageExpire
	}
	return nil
}

func (x *CompanyDashboardInfo) GetAlertCode() CompanyAlertCode {
	if x != nil {
		return x.AlertCode
	}
	return CompanyAlertCode_ALERT_UNKNOWN
}

type GetCompanyDashboardResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 数据列表
	List []*CompanyDashboardInfo `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	// @inject_tag: `validate:"required"`
	PageCtx *ptype.PageCtx `protobuf:"bytes,2,opt,name=page_ctx,json=pageCtx,proto3" json:"page_ctx,omitempty"`
}

func (x *GetCompanyDashboardResponse) Reset() {
	*x = GetCompanyDashboardResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_platform_company_company_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCompanyDashboardResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCompanyDashboardResponse) ProtoMessage() {}

func (x *GetCompanyDashboardResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_platform_company_company_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCompanyDashboardResponse.ProtoReflect.Descriptor instead.
func (*GetCompanyDashboardResponse) Descriptor() ([]byte, []int) {
	return file_protos_platform_company_company_proto_rawDescGZIP(), []int{39}
}

func (x *GetCompanyDashboardResponse) GetList() []*CompanyDashboardInfo {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *GetCompanyDashboardResponse) GetPageCtx() *ptype.PageCtx {
	if x != nil {
		return x.PageCtx
	}
	return nil
}

type GetCompanyAdminsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 企业ID
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetCompanyAdminsRequest) Reset() {
	*x = GetCompanyAdminsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_platform_company_company_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCompanyAdminsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCompanyAdminsRequest) ProtoMessage() {}

func (x *GetCompanyAdminsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_platform_company_company_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCompanyAdminsRequest.ProtoReflect.Descriptor instead.
func (*GetCompanyAdminsRequest) Descriptor() ([]byte, []int) {
	return file_protos_platform_company_company_proto_rawDescGZIP(), []int{40}
}

func (x *GetCompanyAdminsRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetCompanyAdminsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Users []*User `protobuf:"bytes,1,rep,name=users,proto3" json:"users,omitempty"`
}

func (x *GetCompanyAdminsResponse) Reset() {
	*x = GetCompanyAdminsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_platform_company_company_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCompanyAdminsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCompanyAdminsResponse) ProtoMessage() {}

func (x *GetCompanyAdminsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_platform_company_company_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCompanyAdminsResponse.ProtoReflect.Descriptor instead.
func (*GetCompanyAdminsResponse) Descriptor() ([]byte, []int) {
	return file_protos_platform_company_company_proto_rawDescGZIP(), []int{41}
}

func (x *GetCompanyAdminsResponse) GetUsers() []*User {
	if x != nil {
		return x.Users
	}
	return nil
}

type UpdateSuperAdminUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: `validate:"is_ysid,required"`
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// @inject_tag: `validate:"is_ysid,required"`
	CompanyId string `protobuf:"bytes,2,opt,name=company_id,json=companyId,proto3" json:"company_id,omitempty"`
}

func (x *UpdateSuperAdminUserRequest) Reset() {
	*x = UpdateSuperAdminUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_platform_company_company_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSuperAdminUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSuperAdminUserRequest) ProtoMessage() {}

func (x *UpdateSuperAdminUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_platform_company_company_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSuperAdminUserRequest.ProtoReflect.Descriptor instead.
func (*UpdateSuperAdminUserRequest) Descriptor() ([]byte, []int) {
	return file_protos_platform_company_company_proto_rawDescGZIP(), []int{42}
}

func (x *UpdateSuperAdminUserRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UpdateSuperAdminUserRequest) GetCompanyId() string {
	if x != nil {
		return x.CompanyId
	}
	return ""
}

type UpdateSuperAdminUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// success 成功 ； fail 失败
	Msg string `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *UpdateSuperAdminUserResponse) Reset() {
	*x = UpdateSuperAdminUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_platform_company_company_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSuperAdminUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSuperAdminUserResponse) ProtoMessage() {}

func (x *UpdateSuperAdminUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_platform_company_company_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSuperAdminUserResponse.ProtoReflect.Descriptor instead.
func (*UpdateSuperAdminUserResponse) Descriptor() ([]byte, []int) {
	return file_protos_platform_company_company_proto_rawDescGZIP(), []int{43}
}

func (x *UpdateSuperAdminUserResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type DeleteCompanyUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: `validate:"is_ysid,required"`
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// @inject_tag: `validate:"is_ysid,required"`
	CompanyId string `protobuf:"bytes,2,opt,name=company_id,json=companyId,proto3" json:"company_id,omitempty"`
}

func (x *DeleteCompanyUserRequest) Reset() {
	*x = DeleteCompanyUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_platform_company_company_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCompanyUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCompanyUserRequest) ProtoMessage() {}

func (x *DeleteCompanyUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_platform_company_company_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCompanyUserRequest.ProtoReflect.Descriptor instead.
func (*DeleteCompanyUserRequest) Descriptor() ([]byte, []int) {
	return file_protos_platform_company_company_proto_rawDescGZIP(), []int{44}
}

func (x *DeleteCompanyUserRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *DeleteCompanyUserRequest) GetCompanyId() string {
	if x != nil {
		return x.CompanyId
	}
	return ""
}

type DeleteCompanyUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// success 成功 ； fail 失败
	Msg string `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg,omitempty"`
	// @inject_tag: `validate:"required"`
	IsRunJob bool `protobuf:"varint,2,opt,name=is_run_job,json=isRunJob,proto3" json:"is_run_job,omitempty"`
	// @inject_tag: `validate:"required"`
	IsOpenApp bool `protobuf:"varint,3,opt,name=is_open_app,json=isOpenApp,proto3" json:"is_open_app,omitempty"`
}

func (x *DeleteCompanyUserResponse) Reset() {
	*x = DeleteCompanyUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_platform_company_company_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCompanyUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCompanyUserResponse) ProtoMessage() {}

func (x *DeleteCompanyUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_platform_company_company_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCompanyUserResponse.ProtoReflect.Descriptor instead.
func (*DeleteCompanyUserResponse) Descriptor() ([]byte, []int) {
	return file_protos_platform_company_company_proto_rawDescGZIP(), []int{45}
}

func (x *DeleteCompanyUserResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *DeleteCompanyUserResponse) GetIsRunJob() bool {
	if x != nil {
		return x.IsRunJob
	}
	return false
}

func (x *DeleteCompanyUserResponse) GetIsOpenApp() bool {
	if x != nil {
		return x.IsOpenApp
	}
	return false
}

type AddOperateFileLogRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OpType    OperateType    `protobuf:"varint,1,opt,name=op_type,json=opType,proto3,enum=company.OperateType" json:"op_type,omitempty"`
	OpUserId  string         `protobuf:"bytes,2,opt,name=op_user_id,json=opUserId,proto3" json:"op_user_id,omitempty"`
	CompanyId string         `protobuf:"bytes,3,opt,name=company_id,json=companyId,proto3" json:"company_id,omitempty"`
	ProjectId string         `protobuf:"bytes,4,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	OpInfo    []*OperateInfo `protobuf:"bytes,5,rep,name=op_info,json=opInfo,proto3" json:"op_info,omitempty"`
}

func (x *AddOperateFileLogRequest) Reset() {
	*x = AddOperateFileLogRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_platform_company_company_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddOperateFileLogRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddOperateFileLogRequest) ProtoMessage() {}

func (x *AddOperateFileLogRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_platform_company_company_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddOperateFileLogRequest.ProtoReflect.Descriptor instead.
func (*AddOperateFileLogRequest) Descriptor() ([]byte, []int) {
	return file_protos_platform_company_company_proto_rawDescGZIP(), []int{46}
}

func (x *AddOperateFileLogRequest) GetOpType() OperateType {
	if x != nil {
		return x.OpType
	}
	return OperateType_OP_UNKNOWN
}

func (x *AddOperateFileLogRequest) GetOpUserId() string {
	if x != nil {
		return x.OpUserId
	}
	return ""
}

func (x *AddOperateFileLogRequest) GetCompanyId() string {
	if x != nil {
		return x.CompanyId
	}
	return ""
}

func (x *AddOperateFileLogRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *AddOperateFileLogRequest) GetOpInfo() []*OperateInfo {
	if x != nil {
		return x.OpInfo
	}
	return nil
}

type OperateInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StorageSize string   `protobuf:"bytes,1,opt,name=storage_size,json=storageSize,proto3" json:"storage_size,omitempty"`
	FileName    string   `protobuf:"bytes,2,opt,name=file_name,json=fileName,proto3" json:"file_name,omitempty"`
	FileType    FileType `protobuf:"varint,3,opt,name=file_type,json=fileType,proto3,enum=company.FileType" json:"file_type,omitempty"`
}

func (x *OperateInfo) Reset() {
	*x = OperateInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_platform_company_company_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OperateInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OperateInfo) ProtoMessage() {}

func (x *OperateInfo) ProtoReflect() protoreflect.Message {
	mi := &file_protos_platform_company_company_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OperateInfo.ProtoReflect.Descriptor instead.
func (*OperateInfo) Descriptor() ([]byte, []int) {
	return file_protos_platform_company_company_proto_rawDescGZIP(), []int{47}
}

func (x *OperateInfo) GetStorageSize() string {
	if x != nil {
		return x.StorageSize
	}
	return ""
}

func (x *OperateInfo) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *OperateInfo) GetFileType() FileType {
	if x != nil {
		return x.FileType
	}
	return FileType_FILE_UNKNOWN
}

type AddOperateFileLogResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// success 成功 ； fail 失败
	Msg string `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *AddOperateFileLogResponse) Reset() {
	*x = AddOperateFileLogResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_platform_company_company_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddOperateFileLogResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddOperateFileLogResponse) ProtoMessage() {}

func (x *AddOperateFileLogResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_platform_company_company_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddOperateFileLogResponse.ProtoReflect.Descriptor instead.
func (*AddOperateFileLogResponse) Descriptor() ([]byte, []int) {
	return file_protos_platform_company_company_proto_rawDescGZIP(), []int{48}
}

func (x *AddOperateFileLogResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type QueryOperateFileLogRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileName  string                 `protobuf:"bytes,1,opt,name=file_name,json=fileName,proto3" json:"file_name,omitempty"`
	BeginTime *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=begin_time,json=beginTime,proto3" json:"begin_time,omitempty"`
	EndTime   *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	// 用户电话
	Phone     string      `protobuf:"bytes,4,opt,name=phone,proto3" json:"phone,omitempty"`
	CompanyId string      `protobuf:"bytes,5,opt,name=company_id,json=companyId,proto3" json:"company_id,omitempty"`
	ProjectId string      `protobuf:"bytes,6,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	Page      *ptype.Page `protobuf:"bytes,7,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *QueryOperateFileLogRequest) Reset() {
	*x = QueryOperateFileLogRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_platform_company_company_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryOperateFileLogRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryOperateFileLogRequest) ProtoMessage() {}

func (x *QueryOperateFileLogRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_platform_company_company_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryOperateFileLogRequest.ProtoReflect.Descriptor instead.
func (*QueryOperateFileLogRequest) Descriptor() ([]byte, []int) {
	return file_protos_platform_company_company_proto_rawDescGZIP(), []int{49}
}

func (x *QueryOperateFileLogRequest) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *QueryOperateFileLogRequest) GetBeginTime() *timestamppb.Timestamp {
	if x != nil {
		return x.BeginTime
	}
	return nil
}

func (x *QueryOperateFileLogRequest) GetEndTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EndTime
	}
	return nil
}

func (x *QueryOperateFileLogRequest) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *QueryOperateFileLogRequest) GetCompanyId() string {
	if x != nil {
		return x.CompanyId
	}
	return ""
}

func (x *QueryOperateFileLogRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *QueryOperateFileLogRequest) GetPage() *ptype.Page {
	if x != nil {
		return x.Page
	}
	return nil
}

type QueryOperateFileLogResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 数据列表
	Log []*OperateDetailLog `protobuf:"bytes,1,rep,name=log,proto3" json:"log,omitempty"`
	// @inject_tag: `validate:"required"`
	PageCtx *ptype.PageCtx `protobuf:"bytes,2,opt,name=page_ctx,json=pageCtx,proto3" json:"page_ctx,omitempty"`
}

func (x *QueryOperateFileLogResponse) Reset() {
	*x = QueryOperateFileLogResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_platform_company_company_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryOperateFileLogResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryOperateFileLogResponse) ProtoMessage() {}

func (x *QueryOperateFileLogResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_platform_company_company_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryOperateFileLogResponse.ProtoReflect.Descriptor instead.
func (*QueryOperateFileLogResponse) Descriptor() ([]byte, []int) {
	return file_protos_platform_company_company_proto_rawDescGZIP(), []int{50}
}

func (x *QueryOperateFileLogResponse) GetLog() []*OperateDetailLog {
	if x != nil {
		return x.Log
	}
	return nil
}

func (x *QueryOperateFileLogResponse) GetPageCtx() *ptype.PageCtx {
	if x != nil {
		return x.PageCtx
	}
	return nil
}

type OperateDetailLog struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 操作记录id
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// 文件名
	FileName string `protobuf:"bytes,2,opt,name=file_name,json=fileName,proto3" json:"file_name,omitempty"`
	// 操作人名字
	OpUserName string `protobuf:"bytes,3,opt,name=op_user_name,json=opUserName,proto3" json:"op_user_name,omitempty"`
	// 电话
	OpUserPhone string `protobuf:"bytes,8,opt,name=op_user_phone,json=opUserPhone,proto3" json:"op_user_phone,omitempty"`
	// 文件类型
	FileType FileType `protobuf:"varint,4,opt,name=file_type,json=fileType,proto3,enum=company.FileType" json:"file_type,omitempty"`
	// 操作类型
	OpType OperateType `protobuf:"varint,5,opt,name=op_type,json=opType,proto3,enum=company.OperateType" json:"op_type,omitempty"`
	// 存储大小
	StorageSize string `protobuf:"bytes,6,opt,name=storage_size,json=storageSize,proto3" json:"storage_size,omitempty"`
	// 操作时间
	OpTime *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=op_time,json=opTime,proto3" json:"op_time,omitempty"`
}

func (x *OperateDetailLog) Reset() {
	*x = OperateDetailLog{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_platform_company_company_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OperateDetailLog) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OperateDetailLog) ProtoMessage() {}

func (x *OperateDetailLog) ProtoReflect() protoreflect.Message {
	mi := &file_protos_platform_company_company_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OperateDetailLog.ProtoReflect.Descriptor instead.
func (*OperateDetailLog) Descriptor() ([]byte, []int) {
	return file_protos_platform_company_company_proto_rawDescGZIP(), []int{51}
}

func (x *OperateDetailLog) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *OperateDetailLog) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *OperateDetailLog) GetOpUserName() string {
	if x != nil {
		return x.OpUserName
	}
	return ""
}

func (x *OperateDetailLog) GetOpUserPhone() string {
	if x != nil {
		return x.OpUserPhone
	}
	return ""
}

func (x *OperateDetailLog) GetFileType() FileType {
	if x != nil {
		return x.FileType
	}
	return FileType_FILE_UNKNOWN
}

func (x *OperateDetailLog) GetOpType() OperateType {
	if x != nil {
		return x.OpType
	}
	return OperateType_OP_UNKNOWN
}

func (x *OperateDetailLog) GetStorageSize() string {
	if x != nil {
		return x.StorageSize
	}
	return ""
}

func (x *OperateDetailLog) GetOpTime() *timestamppb.Timestamp {
	if x != nil {
		return x.OpTime
	}
	return nil
}

var File_protos_platform_company_company_proto protoreflect.FileDescriptor

var file_protos_platform_company_company_proto_rawDesc = []byte{
	0x0a, 0x25, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72,
	0x6d, 0x2f, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2f, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79,
	0x1a, 0x22, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72,
	0x6d, 0x2f, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x70, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2f, 0x70, 0x74, 0x79, 0x70, 0x65, 0x2f, 0x70, 0x61, 0x67,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x22, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f,
	0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2f, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79,
	0x2f, 0x72, 0x6f, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x21, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x73, 0x2f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2f, 0x63, 0x6f, 0x6d,
	0x70, 0x61, 0x6e, 0x79, 0x2f, 0x62, 0x6f, 0x78, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x28,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2f,
	0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2f, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61,
	0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0xaa, 0x06, 0x0a, 0x07, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x69, 0x7a, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x69, 0x7a, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1e, 0x0a, 0x0b,
	0x69, 0x73, 0x5f, 0x79, 0x73, 0x5f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x09, 0x69, 0x73, 0x59, 0x73, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63,
	0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65,
	0x6d, 0x61, 0x72, 0x6b, 0x12, 0x2e, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x43,
	0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x5f, 0x75, 0x69,
	0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x55,
	0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x3b, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x69, 0x64, 0x12,
	0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x3b, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x5d, 0x0a, 0x19, 0x69, 0x73, 0x5f, 0x6f, 0x70, 0x65, 0x6e,
	0x5f, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61,
	0x6e, 0x79, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x4d, 0x65, 0x6e,
	0x74, 0x4d, 0x61, 0x6e, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x16, 0x69, 0x73,
	0x4f, 0x70, 0x65, 0x6e, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x61, 0x78, 0x5f, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x73, 0x18, 0x12, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x6d, 0x61, 0x78, 0x50,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x74, 0x6f, 0x72, 0x61,
	0x67, 0x65, 0x5f, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x18, 0x13, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c,
	0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x12, 0x24, 0x0a, 0x0e,
	0x73, 0x75, 0x70, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x14,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x75, 0x70, 0x65, 0x72, 0x41, 0x64, 0x6d, 0x69, 0x6e,
	0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49,
	0x64, 0x12, 0x2b, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x16, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x15, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x61,
	0x6e, 0x79, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x22, 0xa4,
	0x04, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x69, 0x7a, 0x5f, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x69, 0x7a, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f,
	0x6e, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x55, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x72, 0x65, 0x64, 0x69,
	0x74, 0x5f, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x63,
	0x72, 0x65, 0x64, 0x69, 0x74, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69,
	0x6e, 0x12, 0x5d, 0x0a, 0x19, 0x69, 0x73, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x5f, 0x64, 0x65, 0x70,
	0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x4f,
	0x70, 0x65, 0x6e, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x4d, 0x65, 0x6e, 0x74, 0x4d, 0x61, 0x6e,
	0x67, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x16, 0x69, 0x73, 0x4f, 0x70, 0x65, 0x6e,
	0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x12, 0x23, 0x0a, 0x0d, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x71, 0x75, 0x6f, 0x74,
	0x61, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65,
	0x51, 0x75, 0x6f, 0x74, 0x61, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x6f, 0x78, 0x5f, 0x64, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x6f, 0x78, 0x44, 0x6f,
	0x6d, 0x61, 0x69, 0x6e, 0x12, 0x2a, 0x0a, 0x11, 0x62, 0x6f, 0x78, 0x5f, 0x73, 0x65, 0x72, 0x69,
	0x61, 0x6c, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0f, 0x62, 0x6f, 0x78, 0x53, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x6f, 0x78, 0x5f, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x0f,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x6f, 0x78, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12,
	0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x10, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x6c, 0x61, 0x62, 0x65, 0x6c, 0x22, 0x55, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x61,
	0x6e, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6d,
	0x70, 0x61, 0x6e, 0x79, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0e, 0x73, 0x75, 0x70, 0x65, 0x72, 0x5f,
	0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x73, 0x75, 0x70, 0x65, 0x72, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x49, 0x64, 0x22, 0xc9, 0x04, 0x0a,
	0x0d, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d,
	0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x69, 0x7a, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x69, 0x7a, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63,
	0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65,
	0x6d, 0x61, 0x72, 0x6b, 0x12, 0x2e, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x43,
	0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x5f, 0x75,
	0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x79,
	0x55, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x79,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x5d, 0x0a, 0x19,
	0x69, 0x73, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x5f, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65,
	0x6e, 0x74, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x22, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x44, 0x65,
	0x70, 0x61, 0x72, 0x74, 0x4d, 0x65, 0x6e, 0x74, 0x4d, 0x61, 0x6e, 0x67, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x16, 0x69, 0x73, 0x4f, 0x70, 0x65, 0x6e, 0x44, 0x65, 0x70, 0x61, 0x72,
	0x74, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x6d,
	0x61, 0x78, 0x5f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0b, 0x6d, 0x61, 0x78, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x12, 0x23,
	0x0a, 0x0d, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x51, 0x75,
	0x6f, 0x74, 0x61, 0x12, 0x24, 0x0a, 0x0e, 0x73, 0x75, 0x70, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x6d,
	0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x75, 0x70,
	0x65, 0x72, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x61, 0x70,
	0x74, 0x63, 0x68, 0x61, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x61, 0x70, 0x74,
	0x63, 0x68, 0x61, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x11, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x22, 0x22, 0x0a, 0x0e, 0x4d, 0x6f, 0x64, 0x69,
	0x66, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73,
	0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0xf5, 0x03, 0x0a,
	0x0b, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x55, 0x73, 0x65, 0x72, 0x12, 0x17, 0x0a, 0x07,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61,
	0x6e, 0x79, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x65, 0x61, 0x6c, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x61, 0x6c, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x32, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e,
	0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x55,
	0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x2a, 0x0a, 0x09, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x07,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x52,
	0x6f, 0x6c, 0x65, 0x52, 0x08, 0x72, 0x6f, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x3b, 0x0a,
	0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x3b, 0x0a, 0x0b, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x42, 0x0a, 0x0f, 0x6c, 0x61, 0x73, 0x74, 0x5f,
	0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0d, 0x6c, 0x61,
	0x73, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x64, 0x69, 0x73, 0x70,
	0x6c, 0x61, 0x79, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0f, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x55, 0x73, 0x65, 0x72,
	0x4e, 0x61, 0x6d, 0x65, 0x22, 0xd5, 0x01, 0x0a, 0x10, 0x55, 0x73, 0x65, 0x72, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x63,
	0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x64, 0x12, 0x32, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x63, 0x6f, 0x6d,
	0x70, 0x61, 0x6e, 0x79, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x55, 0x73, 0x65, 0x72,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x3b,
	0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x62, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x20, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x61,
	0x6e, 0x79, 0x55, 0x73, 0x65, 0x72, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x42, 0x79, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x12, 0x1f, 0x0a, 0x04, 0x70,
	0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x70, 0x74, 0x79, 0x70,
	0x65, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x22, 0x68, 0x0a, 0x11,
	0x55, 0x73, 0x65, 0x72, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x28, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x79, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x08, 0x70,
	0x61, 0x67, 0x65, 0x5f, 0x63, 0x74, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e,
	0x70, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x43, 0x74, 0x78, 0x52, 0x07, 0x70,
	0x61, 0x67, 0x65, 0x43, 0x74, 0x78, 0x22, 0xdb, 0x01, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x42, 0x6f, 0x78, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49,
	0x64, 0x12, 0x2a, 0x0a, 0x11, 0x62, 0x6f, 0x78, 0x5f, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5f,
	0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x62, 0x6f,
	0x78, 0x53, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1d, 0x0a,
	0x0a, 0x62, 0x6f, 0x78, 0x5f, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x62, 0x6f, 0x78, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x16, 0x0a, 0x06,
	0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65,
	0x6d, 0x61, 0x72, 0x6b, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x75,
	0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x55, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x22, 0x40, 0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f,
	0x6d, 0x70, 0x61, 0x6e, 0x79, 0x42, 0x6f, 0x78, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x24, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f, 0x62, 0x6f, 0x78, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x79, 0x42, 0x6f, 0x78, 0x49, 0x64, 0x22, 0x90, 0x01, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x43, 0x6f,
	0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70,
	0x61, 0x6e, 0x79, 0x49, 0x64, 0x12, 0x31, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e,
	0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1f, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x70, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x50,
	0x61, 0x67, 0x65, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x22, 0x72, 0x0a, 0x1c, 0x47, 0x65, 0x74,
	0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a, 0x04, 0x6c, 0x69, 0x73,
	0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x79, 0x2e, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x6c, 0x69,
	0x73, 0x74, 0x12, 0x29, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x63, 0x74, 0x78, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x50, 0x61, 0x67,
	0x65, 0x43, 0x74, 0x78, 0x52, 0x07, 0x70, 0x61, 0x67, 0x65, 0x43, 0x74, 0x78, 0x22, 0x87, 0x01,
	0x0a, 0x18, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x31, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x49, 0x6e,
	0x76, 0x69, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1f, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x70, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x50, 0x61, 0x67,
	0x65, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x22, 0x6f, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x49, 0x6e, 0x76,
	0x69, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x29, 0x0a,
	0x08, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x63, 0x74, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0e, 0x2e, 0x70, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x43, 0x74, 0x78, 0x52,
	0x07, 0x70, 0x61, 0x67, 0x65, 0x43, 0x74, 0x78, 0x22, 0x32, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x43,
	0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a,
	0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x64, 0x22, 0x9d, 0x02, 0x0a,
	0x12, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79,
	0x49, 0x64, 0x12, 0x2e, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x16, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x43, 0x6f, 0x6d,
	0x70, 0x61, 0x6e, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x70, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x50, 0x61, 0x67,
	0x65, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x37, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x5f, 0x62, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x63, 0x6f, 0x6d, 0x70,
	0x61, 0x6e, 0x79, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79,
	0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12,
	0x2b, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15,
	0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79,
	0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x22, 0x66, 0x0a, 0x13,
	0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x24, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x10, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x43, 0x6f, 0x6d, 0x70,
	0x61, 0x6e, 0x79, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x08, 0x70, 0x61, 0x67,
	0x65, 0x5f, 0x63, 0x74, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x74,
	0x79, 0x70, 0x65, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x43, 0x74, 0x78, 0x52, 0x07, 0x70, 0x61, 0x67,
	0x65, 0x43, 0x74, 0x78, 0x22, 0x86, 0x01, 0x0a, 0x18, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79,
	0x55, 0x73, 0x65, 0x72, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x32, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x63, 0x6f, 0x6d,
	0x70, 0x61, 0x6e, 0x79, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x55, 0x73, 0x65, 0x72,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1d,
	0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x64, 0x22, 0x2d, 0x0a,
	0x19, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x6f, 0x64, 0x69,
	0x66, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73,
	0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x5c, 0x0a, 0x22,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x55, 0x73, 0x65, 0x72, 0x41, 0x6c, 0x72, 0x65, 0x61, 0x64, 0x79,
	0x4a, 0x6f, 0x69, 0x6e, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63,
	0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x64, 0x22, 0x3d, 0x0a, 0x23, 0x43, 0x68,
	0x65, 0x63, 0x6b, 0x55, 0x73, 0x65, 0x72, 0x41, 0x6c, 0x72, 0x65, 0x61, 0x64, 0x79, 0x4a, 0x6f,
	0x69, 0x6e, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xb4, 0x01, 0x0a, 0x1c, 0x53, 0x65,
	0x74, 0x52, 0x6f, 0x6c, 0x65, 0x46, 0x6f, 0x72, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f,
	0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x6f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x6f, 0x72, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x55, 0x69, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x6f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x4e, 0x61, 0x6d, 0x65,
	0x22, 0x31, 0x0a, 0x1d, 0x53, 0x65, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x46, 0x6f, 0x72, 0x43, 0x6f,
	0x6d, 0x70, 0x61, 0x6e, 0x79, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6d, 0x73, 0x67, 0x22, 0x6c, 0x0a, 0x17, 0x41, 0x64, 0x64, 0x55, 0x73, 0x65, 0x72, 0x54, 0x6f,
	0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17,
	0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x61,
	0x6e, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6d,
	0x70, 0x61, 0x6e, 0x79, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x73, 0x5f, 0x61, 0x64, 0x6d,
	0x69, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x41, 0x64, 0x6d, 0x69,
	0x6e, 0x22, 0x2c, 0x0a, 0x18, 0x41, 0x64, 0x64, 0x55, 0x73, 0x65, 0x72, 0x54, 0x6f, 0x43, 0x6f,
	0x6d, 0x70, 0x61, 0x6e, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x6d, 0x73, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22,
	0x34, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4a, 0x6f, 0x69, 0x6e, 0x43, 0x6f,
	0x6d, 0x70, 0x61, 0x6e, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x42, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x4a, 0x6f, 0x69, 0x6e, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x24, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x10, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x43, 0x6f, 0x6d, 0x70,
	0x61, 0x6e, 0x79, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x5d, 0x0a, 0x23, 0x47, 0x65, 0x74,
	0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x55, 0x73, 0x65, 0x72, 0x50, 0x65, 0x72, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x64, 0x12,
	0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x4f, 0x0a, 0x24, 0x47, 0x65, 0x74, 0x43,
	0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x55, 0x73, 0x65, 0x72, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x27, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13,
	0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x3d, 0x0a, 0x1c, 0x47, 0x65, 0x74,
	0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6d,
	0x70, 0x61, 0x6e, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63,
	0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x64, 0x22, 0x42, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x43,
	0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x5a, 0x0a, 0x1a,
	0x41, 0x64, 0x64, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x54, 0x6f, 0x43, 0x6f, 0x6d, 0x70,
	0x61, 0x6e, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f,
	0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x22, 0x2f, 0x0a, 0x1b, 0x41, 0x64, 0x64, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x54, 0x6f, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x5f, 0x0a, 0x1f, 0x52, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x46, 0x72, 0x6f, 0x6d, 0x43, 0x6f,
	0x6d, 0x70, 0x61, 0x6e, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a,
	0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x22, 0x34, 0x0a, 0x20, 0x52, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x46, 0x72, 0x6f, 0x6d, 0x43,
	0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67,
	0x22, 0x5a, 0x0a, 0x1a, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d,
	0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x64, 0x12, 0x1d, 0x0a,
	0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x22, 0x2f, 0x0a, 0x1b,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x68,
	0x61, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x03, 0x68, 0x61, 0x73, 0x22, 0xe4, 0x01,
	0x0a, 0x1a, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x44, 0x61, 0x73, 0x68,
	0x62, 0x6f, 0x72, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x72,
	0x65, 0x64, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x63, 0x72, 0x65, 0x64,
	0x69, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x72, 0x65,
	0x6d, 0x61, 0x69, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x73, 0x74, 0x6f, 0x72,
	0x61, 0x67, 0x65, 0x52, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x38, 0x0a, 0x0a, 0x61, 0x6c, 0x65,
	0x72, 0x74, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x19, 0x2e,
	0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x41,
	0x6c, 0x65, 0x72, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x09, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x1f, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0b, 0x2e, 0x70, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x52, 0x04,
	0x70, 0x61, 0x67, 0x65, 0x22, 0xe1, 0x02, 0x0a, 0x14, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79,
	0x44, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x2e, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x16, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x43, 0x6f, 0x6d, 0x70,
	0x61, 0x6e, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x63,
	0x72, 0x65, 0x64, 0x69, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x63, 0x72, 0x65,
	0x64, 0x69, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x75,
	0x73, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x73, 0x74, 0x6f, 0x72, 0x61,
	0x67, 0x65, 0x55, 0x73, 0x65, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67,
	0x65, 0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x73,
	0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x41, 0x0a, 0x0e, 0x73,
	0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x0d, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x12, 0x38,
	0x0a, 0x0a, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x19, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x43, 0x6f, 0x6d,
	0x70, 0x61, 0x6e, 0x79, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x09, 0x61,
	0x6c, 0x65, 0x72, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x7b, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x43,
	0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x44, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e,
	0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x44, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x08, 0x70, 0x61,
	0x67, 0x65, 0x5f, 0x63, 0x74, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70,
	0x74, 0x79, 0x70, 0x65, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x43, 0x74, 0x78, 0x52, 0x07, 0x70, 0x61,
	0x67, 0x65, 0x43, 0x74, 0x78, 0x22, 0x29, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70,
	0x61, 0x6e, 0x79, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x22, 0x3f, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x41, 0x64,
	0x6d, 0x69, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x23, 0x0a, 0x05,
	0x75, 0x73, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x6f,
	0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x05, 0x75, 0x73, 0x65, 0x72,
	0x73, 0x22, 0x55, 0x0a, 0x1b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x75, 0x70, 0x65, 0x72,
	0x41, 0x64, 0x6d, 0x69, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6d,
	0x70, 0x61, 0x6e, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63,
	0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x64, 0x22, 0x30, 0x0a, 0x1c, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x53, 0x75, 0x70, 0x65, 0x72, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x52, 0x0a, 0x18, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x64, 0x22, 0x6b,
	0x0a, 0x19, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d,
	0x73, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x1c, 0x0a,
	0x0a, 0x69, 0x73, 0x5f, 0x72, 0x75, 0x6e, 0x5f, 0x6a, 0x6f, 0x62, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x08, 0x69, 0x73, 0x52, 0x75, 0x6e, 0x4a, 0x6f, 0x62, 0x12, 0x1e, 0x0a, 0x0b, 0x69,
	0x73, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x5f, 0x61, 0x70, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x09, 0x69, 0x73, 0x4f, 0x70, 0x65, 0x6e, 0x41, 0x70, 0x70, 0x22, 0xef, 0x01, 0x0a, 0x18,
	0x41, 0x64, 0x64, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x4c, 0x6f,
	0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2d, 0x0a, 0x07, 0x6f, 0x70, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x63, 0x6f, 0x6d, 0x70,
	0x61, 0x6e, 0x79, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x06, 0x6f, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x25, 0x0a, 0x0a, 0x6f, 0x70, 0x5f, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04,
	0x72, 0x02, 0x10, 0x01, 0x52, 0x08, 0x6f, 0x70, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x26,
	0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x09, 0x63, 0x6f, 0x6d,
	0x70, 0x61, 0x6e, 0x79, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72,
	0x02, 0x10, 0x01, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x2d,
	0x0a, 0x07, 0x6f, 0x70, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x06, 0x6f, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x8f, 0x01,
	0x0a, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2a, 0x0a,
	0x0c, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0b, 0x73, 0x74,
	0x6f, 0x72, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x24, 0x0a, 0x09, 0x66, 0x69, 0x6c,
	0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42,
	0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x2e, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x46, 0x69, 0x6c,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x22,
	0x2d, 0x0a, 0x19, 0x41, 0x64, 0x64, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x46, 0x69, 0x6c,
	0x65, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x6d, 0x73, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0xd0,
	0x02, 0x0a, 0x1a, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x46,
	0x69, 0x6c, 0x65, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a,
	0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x43, 0x0a, 0x0a, 0x62, 0x65,
	0x67, 0x69, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x08, 0xfa, 0x42, 0x05, 0xb2,
	0x01, 0x02, 0x08, 0x01, 0x52, 0x09, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x3f, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x08, 0xfa,
	0x42, 0x05, 0xb2, 0x01, 0x02, 0x08, 0x01, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x26, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x79, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72,
	0x02, 0x10, 0x01, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x64, 0x12, 0x26,
	0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x09, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x70, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x50, 0x61, 0x67,
	0x65, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x8a, 0x01, 0x02, 0x10, 0x01, 0x52, 0x04, 0x70, 0x61, 0x67,
	0x65, 0x22, 0x75, 0x0a, 0x1b, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x65, 0x46, 0x69, 0x6c, 0x65, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x2b, 0x0a, 0x03, 0x6c, 0x6f, 0x67, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x4c, 0x6f, 0x67, 0x52, 0x03, 0x6c, 0x6f, 0x67, 0x12, 0x29, 0x0a,
	0x08, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x63, 0x74, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0e, 0x2e, 0x70, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x43, 0x74, 0x78, 0x52,
	0x07, 0x70, 0x61, 0x67, 0x65, 0x43, 0x74, 0x78, 0x22, 0xbc, 0x02, 0x0a, 0x10, 0x4f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x4c, 0x6f, 0x67, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a,
	0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0c, 0x6f, 0x70,
	0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x6f, 0x70, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0d,
	0x6f, 0x70, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x70, 0x55, 0x73, 0x65, 0x72, 0x50, 0x68, 0x6f, 0x6e, 0x65,
	0x12, 0x2e, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x46, 0x69,
	0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x2d, 0x0a, 0x07, 0x6f, 0x70, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x14, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x4f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x06, 0x6f, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x21, 0x0a, 0x0c, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x53, 0x69,
	0x7a, 0x65, 0x12, 0x33, 0x0a, 0x07, 0x6f, 0x70, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x06, 0x6f, 0x70, 0x54, 0x69, 0x6d, 0x65, 0x2a, 0x39, 0x0a, 0x11, 0x43, 0x6f, 0x6d, 0x70, 0x61,
	0x6e, 0x79, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0b, 0x0a, 0x07,
	0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x4e, 0x4f, 0x52,
	0x4d, 0x41, 0x4c, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x44,
	0x10, 0x02, 0x2a, 0x4d, 0x0a, 0x0d, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x13, 0x0a, 0x0f, 0x43, 0x4f, 0x4d, 0x50, 0x41, 0x4e, 0x59, 0x5f, 0x55,
	0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x43, 0x4f, 0x4d, 0x50,
	0x41, 0x4e, 0x59, 0x5f, 0x4e, 0x4f, 0x52, 0x4d, 0x41, 0x4c, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f,
	0x43, 0x4f, 0x4d, 0x50, 0x41, 0x4e, 0x59, 0x5f, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x44, 0x10,
	0x02, 0x2a, 0x88, 0x01, 0x0a, 0x19, 0x4f, 0x70, 0x65, 0x6e, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74,
	0x4d, 0x65, 0x6e, 0x74, 0x4d, 0x61, 0x6e, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x24, 0x0a, 0x20, 0x44, 0x45, 0x50, 0x41, 0x52, 0x54, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x4d, 0x41,
	0x4e, 0x41, 0x47, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x4b, 0x4e,
	0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x21, 0x0a, 0x1d, 0x44, 0x45, 0x50, 0x41, 0x52, 0x54, 0x4d,
	0x45, 0x4e, 0x54, 0x5f, 0x4d, 0x41, 0x4e, 0x41, 0x47, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55,
	0x53, 0x5f, 0x4f, 0x50, 0x45, 0x4e, 0x10, 0x01, 0x12, 0x22, 0x0a, 0x1e, 0x44, 0x45, 0x50, 0x41,
	0x52, 0x54, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x4d, 0x41, 0x4e, 0x41, 0x47, 0x45, 0x5f, 0x53, 0x54,
	0x41, 0x54, 0x55, 0x53, 0x5f, 0x43, 0x4c, 0x4f, 0x53, 0x45, 0x10, 0x02, 0x2a, 0x58, 0x0a, 0x10,
	0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x11, 0x0a, 0x0d, 0x41, 0x4c, 0x45, 0x52, 0x54, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57,
	0x4e, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x41, 0x4c, 0x45, 0x52, 0x54, 0x5f, 0x4e, 0x4f, 0x52,
	0x4d, 0x41, 0x4c, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x41, 0x4c, 0x45, 0x52, 0x54, 0x5f, 0x4f,
	0x52, 0x41, 0x4e, 0x47, 0x45, 0x10, 0x02, 0x12, 0x0d, 0x0a, 0x09, 0x41, 0x4c, 0x45, 0x52, 0x54,
	0x5f, 0x52, 0x45, 0x44, 0x10, 0x03, 0x2a, 0x59, 0x0a, 0x0c, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x79, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x11, 0x0a, 0x0d, 0x4c, 0x41, 0x42, 0x45, 0x4c, 0x5f,
	0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x4c, 0x41, 0x42,
	0x45, 0x4c, 0x5f, 0x46, 0x4f, 0x52, 0x4d, 0x41, 0x4c, 0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x4c,
	0x41, 0x42, 0x45, 0x4c, 0x5f, 0x54, 0x52, 0x49, 0x41, 0x4c, 0x10, 0x02, 0x12, 0x13, 0x0a, 0x0f,
	0x4c, 0x41, 0x42, 0x45, 0x4c, 0x5f, 0x41, 0x42, 0x41, 0x4e, 0x44, 0x4f, 0x4e, 0x45, 0x44, 0x10,
	0x03, 0x2a, 0x9f, 0x01, 0x0a, 0x17, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x55, 0x73, 0x65,
	0x72, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x12, 0x10, 0x0a,
	0x0c, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x42, 0x59, 0x5f, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12,
	0x19, 0x0a, 0x15, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x42, 0x59, 0x5f, 0x4a, 0x4f, 0x49, 0x4e, 0x54,
	0x49, 0x4d, 0x45, 0x5f, 0x44, 0x45, 0x53, 0x43, 0x10, 0x01, 0x12, 0x18, 0x0a, 0x14, 0x4f, 0x52,
	0x44, 0x45, 0x52, 0x42, 0x59, 0x5f, 0x4a, 0x4f, 0x49, 0x4e, 0x54, 0x49, 0x4d, 0x45, 0x5f, 0x41,
	0x53, 0x43, 0x10, 0x02, 0x12, 0x1e, 0x0a, 0x1a, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x42, 0x59, 0x5f,
	0x4c, 0x41, 0x53, 0x54, 0x4c, 0x4f, 0x47, 0x49, 0x4e, 0x54, 0x49, 0x4d, 0x45, 0x5f, 0x44, 0x45,
	0x53, 0x43, 0x10, 0x03, 0x12, 0x1d, 0x0a, 0x19, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x42, 0x59, 0x5f,
	0x4c, 0x41, 0x53, 0x54, 0x4c, 0x4f, 0x47, 0x49, 0x4e, 0x54, 0x49, 0x4d, 0x45, 0x5f, 0x41, 0x53,
	0x43, 0x10, 0x04, 0x2a, 0x66, 0x0a, 0x13, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x12, 0x18, 0x0a, 0x14, 0x43, 0x4f,
	0x4d, 0x50, 0x41, 0x4e, 0x59, 0x5f, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x42, 0x59, 0x5f, 0x4e, 0x55,
	0x4c, 0x4c, 0x10, 0x00, 0x12, 0x19, 0x0a, 0x15, 0x43, 0x4f, 0x4d, 0x50, 0x41, 0x4e, 0x59, 0x5f,
	0x4f, 0x52, 0x44, 0x45, 0x52, 0x42, 0x59, 0x5f, 0x49, 0x44, 0x41, 0x53, 0x43, 0x10, 0x01, 0x12,
	0x1a, 0x0a, 0x16, 0x43, 0x4f, 0x4d, 0x50, 0x41, 0x4e, 0x59, 0x5f, 0x4f, 0x52, 0x44, 0x45, 0x52,
	0x42, 0x59, 0x5f, 0x49, 0x44, 0x44, 0x45, 0x53, 0x43, 0x10, 0x02, 0x2a, 0x3d, 0x0a, 0x08, 0x46,
	0x69, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x0c, 0x46, 0x49, 0x4c, 0x45, 0x5f,
	0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x46, 0x49, 0x4c,
	0x45, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x46, 0x4f, 0x4c, 0x44, 0x45, 0x52, 0x10, 0x02, 0x12,
	0x09, 0x0a, 0x05, 0x42, 0x41, 0x54, 0x43, 0x48, 0x10, 0x03, 0x2a, 0x5f, 0x0a, 0x0b, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x0a, 0x4f, 0x50, 0x5f,
	0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x55, 0x50, 0x4c,
	0x4f, 0x41, 0x44, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x44, 0x4f, 0x57, 0x4e, 0x4c, 0x4f, 0x41,
	0x44, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x10, 0x03, 0x12,
	0x0a, 0x0a, 0x06, 0x52, 0x45, 0x4e, 0x41, 0x4d, 0x45, 0x10, 0x04, 0x12, 0x0e, 0x0a, 0x0a, 0x41,
	0x44, 0x44, 0x5f, 0x46, 0x4f, 0x4c, 0x44, 0x45, 0x52, 0x10, 0x05, 0x32, 0x87, 0x14, 0x0a, 0x0e,
	0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x3b,
	0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x16, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61,
	0x6e, 0x79, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x17, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3b, 0x0a, 0x06, 0x4d,
	0x6f, 0x64, 0x69, 0x66, 0x79, 0x12, 0x16, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e,
	0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e,
	0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3c, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x43,
	0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x12, 0x1a, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79,
	0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x10, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x43, 0x6f, 0x6d,
	0x70, 0x61, 0x6e, 0x79, 0x22, 0x00, 0x12, 0x4a, 0x0a, 0x0b, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x79, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1b, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e,
	0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x43, 0x6f, 0x6d,
	0x70, 0x61, 0x6e, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x44, 0x0a, 0x09, 0x55, 0x73, 0x65, 0x72, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12,
	0x19, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x63, 0x6f, 0x6d,
	0x70, 0x61, 0x6e, 0x79, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x59, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x42, 0x6f, 0x78, 0x12, 0x20, 0x2e, 0x63,
	0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d,
	0x70, 0x61, 0x6e, 0x79, 0x42, 0x6f, 0x78, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21,
	0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43,
	0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x42, 0x6f, 0x78, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x65, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x79, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x24, 0x2e, 0x63, 0x6f,
	0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79,
	0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x25, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x43,
	0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5c, 0x0a, 0x11, 0x47, 0x65,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x21, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x22, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x47, 0x65, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5c, 0x0a, 0x11, 0x43, 0x6f, 0x6d, 0x70,
	0x61, 0x6e, 0x79, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x12, 0x21, 0x2e,
	0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x55,
	0x73, 0x65, 0x72, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x22, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x61,
	0x6e, 0x79, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5c, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d,
	0x70, 0x61, 0x6e, 0x79, 0x42, 0x6f, 0x78, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x21, 0x2e, 0x63, 0x6f,
	0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79,
	0x42, 0x6f, 0x78, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22,
	0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70,
	0x61, 0x6e, 0x79, 0x42, 0x6f, 0x78, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x59, 0x0a, 0x10, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x42,
	0x6f, 0x78, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x12, 0x20, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61,
	0x6e, 0x79, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x42, 0x6f, 0x78, 0x4d, 0x6f, 0x64,
	0x69, 0x66, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x63, 0x6f, 0x6d,
	0x70, 0x61, 0x6e, 0x79, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x42, 0x6f, 0x78, 0x4d,
	0x6f, 0x64, 0x69, 0x66, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x7a, 0x0a, 0x1b, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x55, 0x73, 0x65, 0x72, 0x41, 0x6c, 0x72, 0x65,
	0x61, 0x64, 0x79, 0x4a, 0x6f, 0x69, 0x6e, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x12, 0x2b,
	0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x55, 0x73,
	0x65, 0x72, 0x41, 0x6c, 0x72, 0x65, 0x61, 0x64, 0x79, 0x4a, 0x6f, 0x69, 0x6e, 0x43, 0x6f, 0x6d,
	0x70, 0x61, 0x6e, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x63, 0x6f,
	0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x55, 0x73, 0x65, 0x72, 0x41,
	0x6c, 0x72, 0x65, 0x61, 0x64, 0x79, 0x4a, 0x6f, 0x69, 0x6e, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x68, 0x0a, 0x15, 0x53,
	0x65, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x46, 0x6f, 0x72, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79,
	0x55, 0x73, 0x65, 0x72, 0x12, 0x25, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x53,
	0x65, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x46, 0x6f, 0x72, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x63, 0x6f,
	0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x53, 0x65, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x46, 0x6f, 0x72,
	0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x65, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53,
	0x75, 0x70, 0x65, 0x72, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x12, 0x24, 0x2e,
	0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x75,
	0x70, 0x65, 0x72, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x53, 0x75, 0x70, 0x65, 0x72, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x59, 0x0a, 0x10,
	0x41, 0x64, 0x64, 0x55, 0x73, 0x65, 0x72, 0x54, 0x6f, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79,
	0x12, 0x20, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x41, 0x64, 0x64, 0x55, 0x73,
	0x65, 0x72, 0x54, 0x6f, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x21, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x41, 0x64, 0x64,
	0x55, 0x73, 0x65, 0x72, 0x54, 0x6f, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x68, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x43, 0x6f,
	0x6d, 0x70, 0x61, 0x6e, 0x79, 0x42, 0x6f, 0x78, 0x42, 0x79, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x12, 0x25, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f,
	0x6d, 0x70, 0x61, 0x6e, 0x79, 0x42, 0x6f, 0x78, 0x42, 0x79, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x79, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x42, 0x6f, 0x78, 0x42,
	0x79, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x5f, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4a, 0x6f, 0x69, 0x6e,
	0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x12, 0x22, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x79, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4a, 0x6f, 0x69, 0x6e, 0x43, 0x6f, 0x6d,
	0x70, 0x61, 0x6e, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x63, 0x6f,
	0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4a, 0x6f, 0x69,
	0x6e, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x7d, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79,
	0x55, 0x73, 0x65, 0x72, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x2c, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x47, 0x65, 0x74,
	0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x55, 0x73, 0x65, 0x72, 0x50, 0x65, 0x72, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x2d, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f,
	0x6d, 0x70, 0x61, 0x6e, 0x79, 0x55, 0x73, 0x65, 0x72, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x68, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x25, 0x2e, 0x63, 0x6f, 0x6d,
	0x70, 0x61, 0x6e, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x26, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x43,
	0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x62, 0x0a, 0x13, 0x41,
	0x64, 0x64, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x54, 0x6f, 0x43, 0x6f, 0x6d, 0x70, 0x61,
	0x6e, 0x79, 0x12, 0x23, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x41, 0x64, 0x64,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x54, 0x6f, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x79, 0x2e, 0x41, 0x64, 0x64, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x54, 0x6f, 0x43, 0x6f,
	0x6d, 0x70, 0x61, 0x6e, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x71, 0x0a, 0x18, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x46, 0x72, 0x6f, 0x6d, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x12, 0x28, 0x2e, 0x63, 0x6f,
	0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x46, 0x72, 0x6f, 0x6d, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e,
	0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x46, 0x72, 0x6f,
	0x6d, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x62, 0x0a, 0x13, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x43, 0x6f, 0x6d, 0x70, 0x61,
	0x6e, 0x79, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x23, 0x2e, 0x63, 0x6f, 0x6d, 0x70,
	0x61, 0x6e, 0x79, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24,
	0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x43, 0x6f,
	0x6d, 0x70, 0x61, 0x6e, 0x79, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x62, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d,
	0x70, 0x61, 0x6e, 0x79, 0x44, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x72, 0x61, 0x64, 0x12, 0x23, 0x2e,
	0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x61,
	0x6e, 0x79, 0x44, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x72, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x24, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x47, 0x65, 0x74,
	0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x44, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x59, 0x0a, 0x10, 0x47, 0x65,
	0x74, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x73, 0x12, 0x20,
	0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70,
	0x61, 0x6e, 0x79, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x21, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f,
	0x6d, 0x70, 0x61, 0x6e, 0x79, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5c, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43,
	0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x55, 0x73, 0x65, 0x72, 0x12, 0x21, 0x2e, 0x63, 0x6f, 0x6d,
	0x70, 0x61, 0x6e, 0x79, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x61,
	0x6e, 0x79, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e,
	0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f,
	0x6d, 0x70, 0x61, 0x6e, 0x79, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x5c, 0x0a, 0x11, 0x41, 0x64, 0x64, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x65, 0x46, 0x69, 0x6c, 0x65, 0x4c, 0x6f, 0x67, 0x12, 0x21, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61,
	0x6e, 0x79, 0x2e, 0x41, 0x64, 0x64, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x46, 0x69, 0x6c,
	0x65, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x63, 0x6f,
	0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x41, 0x64, 0x64, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65,
	0x46, 0x69, 0x6c, 0x65, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x62, 0x0a, 0x13, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x65, 0x46, 0x69, 0x6c, 0x65, 0x4c, 0x6f, 0x67, 0x12, 0x23, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61,
	0x6e, 0x79, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x46,
	0x69, 0x6c, 0x65, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e,
	0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x3c, 0x5a, 0x3a, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x79, 0x75, 0x61, 0x6e, 0x73, 0x75, 0x61, 0x6e, 0x2f, 0x74, 0x69, 0x63,
	0x70, 0x2f, 0x69, 0x50, 0x61, 0x61, 0x53, 0x2f, 0x73, 0x73, 0x6f, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x73, 0x2f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2f, 0x63, 0x6f, 0x6d, 0x70,
	0x61, 0x6e, 0x79, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_protos_platform_company_company_proto_rawDescOnce sync.Once
	file_protos_platform_company_company_proto_rawDescData = file_protos_platform_company_company_proto_rawDesc
)

func file_protos_platform_company_company_proto_rawDescGZIP() []byte {
	file_protos_platform_company_company_proto_rawDescOnce.Do(func() {
		file_protos_platform_company_company_proto_rawDescData = protoimpl.X.CompressGZIP(file_protos_platform_company_company_proto_rawDescData)
	})
	return file_protos_platform_company_company_proto_rawDescData
}

var file_protos_platform_company_company_proto_enumTypes = make([]protoimpl.EnumInfo, 9)
var file_protos_platform_company_company_proto_msgTypes = make([]protoimpl.MessageInfo, 52)
var file_protos_platform_company_company_proto_goTypes = []interface{}{
	(CompanyUserStatus)(0),                       // 0: company.CompanyUserStatus
	(CompanyStatus)(0),                           // 1: company.CompanyStatus
	(OpenDepartMentMangeStatus)(0),               // 2: company.OpenDepartMentMangeStatus
	(CompanyAlertCode)(0),                        // 3: company.CompanyAlertCode
	(CompanyLabel)(0),                            // 4: company.CompanyLabel
	(CompanyUserQueryOrderBy)(0),                 // 5: company.CompanyUserQueryOrderBy
	(CompanyQueryOrderBy)(0),                     // 6: company.CompanyQueryOrderBy
	(FileType)(0),                                // 7: company.FileType
	(OperateType)(0),                             // 8: company.OperateType
	(*Company)(nil),                              // 9: company.Company
	(*CreateRequest)(nil),                        // 10: company.CreateRequest
	(*CreateResponse)(nil),                       // 11: company.CreateResponse
	(*ModifyRequest)(nil),                        // 12: company.ModifyRequest
	(*ModifyResponse)(nil),                       // 13: company.ModifyResponse
	(*CompanyUser)(nil),                          // 14: company.CompanyUser
	(*UserQueryRequest)(nil),                     // 15: company.UserQueryRequest
	(*UserQueryResponse)(nil),                    // 16: company.UserQueryResponse
	(*CreateCompanyBoxRequest)(nil),              // 17: company.CreateCompanyBoxRequest
	(*CreateCompanyBoxResponse)(nil),             // 18: company.CreateCompanyBoxResponse
	(*GetCompanyInviteListRequest)(nil),          // 19: company.GetCompanyInviteListRequest
	(*GetCompanyInviteListResponse)(nil),         // 20: company.GetCompanyInviteListResponse
	(*GetUserInviteListRequest)(nil),             // 21: company.GetUserInviteListRequest
	(*GetUserInviteListResponse)(nil),            // 22: company.GetUserInviteListResponse
	(*GetCompanyRequest)(nil),                    // 23: company.GetCompanyRequest
	(*CompanyListRequest)(nil),                   // 24: company.CompanyListRequest
	(*CompanyListResponse)(nil),                  // 25: company.CompanyListResponse
	(*CompanyUserModifyRequest)(nil),             // 26: company.CompanyUserModifyRequest
	(*CompanyUserModifyResponse)(nil),            // 27: company.CompanyUserModifyResponse
	(*CheckUserAlreadyJoinCompanyRequest)(nil),   // 28: company.CheckUserAlreadyJoinCompanyRequest
	(*CheckUserAlreadyJoinCompanyResponse)(nil),  // 29: company.CheckUserAlreadyJoinCompanyResponse
	(*SetRoleForCompanyUserRequest)(nil),         // 30: company.SetRoleForCompanyUserRequest
	(*SetRoleForCompanyUserResponse)(nil),        // 31: company.SetRoleForCompanyUserResponse
	(*AddUserToCompanyRequest)(nil),              // 32: company.AddUserToCompanyRequest
	(*AddUserToCompanyResponse)(nil),             // 33: company.AddUserToCompanyResponse
	(*GetUserJoinCompanyRequest)(nil),            // 34: company.GetUserJoinCompanyRequest
	(*GetUserJoinCompanyResponse)(nil),           // 35: company.GetUserJoinCompanyResponse
	(*GetCompanyUserPermissionListRequest)(nil),  // 36: company.GetCompanyUserPermissionListRequest
	(*GetCompanyUserPermissionListResponse)(nil), // 37: company.GetCompanyUserPermissionListResponse
	(*GetCompanyProductListRequest)(nil),         // 38: company.GetCompanyProductListRequest
	(*GetCompanyProductListResponse)(nil),        // 39: company.GetCompanyProductListResponse
	(*AddProductToCompanyRequest)(nil),           // 40: company.AddProductToCompanyRequest
	(*AddProductToCompanyResponse)(nil),          // 41: company.AddProductToCompanyResponse
	(*RemoveProductFromCompanyRequest)(nil),      // 42: company.RemoveProductFromCompanyRequest
	(*RemoveProductFromCompanyResponse)(nil),     // 43: company.RemoveProductFromCompanyResponse
	(*CheckCompanyProductRequest)(nil),           // 44: company.CheckCompanyProductRequest
	(*CheckCompanyProductResponse)(nil),          // 45: company.CheckCompanyProductResponse
	(*GetCompanyDashboradRequest)(nil),           // 46: company.GetCompanyDashboradRequest
	(*CompanyDashboardInfo)(nil),                 // 47: company.CompanyDashboardInfo
	(*GetCompanyDashboardResponse)(nil),          // 48: company.GetCompanyDashboardResponse
	(*GetCompanyAdminsRequest)(nil),              // 49: company.GetCompanyAdminsRequest
	(*GetCompanyAdminsResponse)(nil),             // 50: company.GetCompanyAdminsResponse
	(*UpdateSuperAdminUserRequest)(nil),          // 51: company.UpdateSuperAdminUserRequest
	(*UpdateSuperAdminUserResponse)(nil),         // 52: company.UpdateSuperAdminUserResponse
	(*DeleteCompanyUserRequest)(nil),             // 53: company.DeleteCompanyUserRequest
	(*DeleteCompanyUserResponse)(nil),            // 54: company.DeleteCompanyUserResponse
	(*AddOperateFileLogRequest)(nil),             // 55: company.AddOperateFileLogRequest
	(*OperateInfo)(nil),                          // 56: company.OperateInfo
	(*AddOperateFileLogResponse)(nil),            // 57: company.AddOperateFileLogResponse
	(*QueryOperateFileLogRequest)(nil),           // 58: company.QueryOperateFileLogRequest
	(*QueryOperateFileLogResponse)(nil),          // 59: company.QueryOperateFileLogResponse
	(*OperateDetailLog)(nil),                     // 60: company.OperateDetailLog
	(*timestamppb.Timestamp)(nil),                // 61: google.protobuf.Timestamp
	(*Role)(nil),                                 // 62: company.Role
	(*ptype.Page)(nil),                           // 63: ptype.Page
	(*ptype.PageCtx)(nil),                        // 64: ptype.PageCtx
	(InviteUserStatus)(0),                        // 65: company.InviteUserStatus
	(*InviteUser)(nil),                           // 66: company.InviteUser
	(*Permission)(nil),                           // 67: company.Permission
	(*User)(nil),                                 // 68: company.User
	(*GetCompanyBoxListRequest)(nil),             // 69: company.GetCompanyBoxListRequest
	(*CompanyBoxModifyRequest)(nil),              // 70: company.CompanyBoxModifyRequest
	(*GetCompanyBoxByDomainRequest)(nil),         // 71: company.GetCompanyBoxByDomainRequest
	(*GetCompanyBoxListResponse)(nil),            // 72: company.GetCompanyBoxListResponse
	(*CompanyBoxModifyResponse)(nil),             // 73: company.CompanyBoxModifyResponse
	(*GetCompanyBoxByDomainResponse)(nil),        // 74: company.GetCompanyBoxByDomainResponse
}
var file_protos_platform_company_company_proto_depIdxs = []int32{
	1,  // 0: company.Company.status:type_name -> company.CompanyStatus
	61, // 1: company.Company.update_time:type_name -> google.protobuf.Timestamp
	61, // 2: company.Company.create_time:type_name -> google.protobuf.Timestamp
	2,  // 3: company.Company.is_open_department_manage:type_name -> company.OpenDepartMentMangeStatus
	4,  // 4: company.Company.label:type_name -> company.CompanyLabel
	2,  // 5: company.CreateRequest.is_open_department_manage:type_name -> company.OpenDepartMentMangeStatus
	1,  // 6: company.ModifyRequest.status:type_name -> company.CompanyStatus
	2,  // 7: company.ModifyRequest.is_open_department_manage:type_name -> company.OpenDepartMentMangeStatus
	0,  // 8: company.CompanyUser.status:type_name -> company.CompanyUserStatus
	62, // 9: company.CompanyUser.role_list:type_name -> company.Role
	61, // 10: company.CompanyUser.create_time:type_name -> google.protobuf.Timestamp
	61, // 11: company.CompanyUser.update_time:type_name -> google.protobuf.Timestamp
	61, // 12: company.CompanyUser.last_login_time:type_name -> google.protobuf.Timestamp
	0,  // 13: company.UserQueryRequest.status:type_name -> company.CompanyUserStatus
	5,  // 14: company.UserQueryRequest.order_by:type_name -> company.CompanyUserQueryOrderBy
	63, // 15: company.UserQueryRequest.page:type_name -> ptype.Page
	14, // 16: company.UserQueryResponse.list:type_name -> company.CompanyUser
	64, // 17: company.UserQueryResponse.page_ctx:type_name -> ptype.PageCtx
	65, // 18: company.GetCompanyInviteListRequest.status:type_name -> company.InviteUserStatus
	63, // 19: company.GetCompanyInviteListRequest.page:type_name -> ptype.Page
	66, // 20: company.GetCompanyInviteListResponse.list:type_name -> company.InviteUser
	64, // 21: company.GetCompanyInviteListResponse.page_ctx:type_name -> ptype.PageCtx
	65, // 22: company.GetUserInviteListRequest.status:type_name -> company.InviteUserStatus
	63, // 23: company.GetUserInviteListRequest.page:type_name -> ptype.Page
	66, // 24: company.GetUserInviteListResponse.list:type_name -> company.InviteUser
	64, // 25: company.GetUserInviteListResponse.page_ctx:type_name -> ptype.PageCtx
	1,  // 26: company.CompanyListRequest.status:type_name -> company.CompanyStatus
	63, // 27: company.CompanyListRequest.page:type_name -> ptype.Page
	6,  // 28: company.CompanyListRequest.order_by:type_name -> company.CompanyQueryOrderBy
	4,  // 29: company.CompanyListRequest.label:type_name -> company.CompanyLabel
	9,  // 30: company.CompanyListResponse.list:type_name -> company.Company
	64, // 31: company.CompanyListResponse.page_ctx:type_name -> ptype.PageCtx
	0,  // 32: company.CompanyUserModifyRequest.status:type_name -> company.CompanyUserStatus
	9,  // 33: company.GetUserJoinCompanyResponse.list:type_name -> company.Company
	67, // 34: company.GetCompanyUserPermissionListResponse.list:type_name -> company.Permission
	3,  // 35: company.GetCompanyDashboradRequest.alert_code:type_name -> company.CompanyAlertCode
	63, // 36: company.GetCompanyDashboradRequest.page:type_name -> ptype.Page
	1,  // 37: company.CompanyDashboardInfo.status:type_name -> company.CompanyStatus
	61, // 38: company.CompanyDashboardInfo.storage_expire:type_name -> google.protobuf.Timestamp
	3,  // 39: company.CompanyDashboardInfo.alert_code:type_name -> company.CompanyAlertCode
	47, // 40: company.GetCompanyDashboardResponse.list:type_name -> company.CompanyDashboardInfo
	64, // 41: company.GetCompanyDashboardResponse.page_ctx:type_name -> ptype.PageCtx
	68, // 42: company.GetCompanyAdminsResponse.users:type_name -> company.User
	8,  // 43: company.AddOperateFileLogRequest.op_type:type_name -> company.OperateType
	56, // 44: company.AddOperateFileLogRequest.op_info:type_name -> company.OperateInfo
	7,  // 45: company.OperateInfo.file_type:type_name -> company.FileType
	61, // 46: company.QueryOperateFileLogRequest.begin_time:type_name -> google.protobuf.Timestamp
	61, // 47: company.QueryOperateFileLogRequest.end_time:type_name -> google.protobuf.Timestamp
	63, // 48: company.QueryOperateFileLogRequest.page:type_name -> ptype.Page
	60, // 49: company.QueryOperateFileLogResponse.log:type_name -> company.OperateDetailLog
	64, // 50: company.QueryOperateFileLogResponse.page_ctx:type_name -> ptype.PageCtx
	7,  // 51: company.OperateDetailLog.file_type:type_name -> company.FileType
	8,  // 52: company.OperateDetailLog.op_type:type_name -> company.OperateType
	61, // 53: company.OperateDetailLog.op_time:type_name -> google.protobuf.Timestamp
	10, // 54: company.CompanyService.Create:input_type -> company.CreateRequest
	12, // 55: company.CompanyService.Modify:input_type -> company.ModifyRequest
	23, // 56: company.CompanyService.GetCompany:input_type -> company.GetCompanyRequest
	24, // 57: company.CompanyService.CompanyList:input_type -> company.CompanyListRequest
	15, // 58: company.CompanyService.UserQuery:input_type -> company.UserQueryRequest
	17, // 59: company.CompanyService.CreateCompanyBox:input_type -> company.CreateCompanyBoxRequest
	19, // 60: company.CompanyService.GetCompanyInviteList:input_type -> company.GetCompanyInviteListRequest
	21, // 61: company.CompanyService.GetUserInviteList:input_type -> company.GetUserInviteListRequest
	26, // 62: company.CompanyService.CompanyUserModify:input_type -> company.CompanyUserModifyRequest
	69, // 63: company.CompanyService.GetCompanyBoxList:input_type -> company.GetCompanyBoxListRequest
	70, // 64: company.CompanyService.CompanyBoxModify:input_type -> company.CompanyBoxModifyRequest
	28, // 65: company.CompanyService.CheckUserAlreadyJoinCompany:input_type -> company.CheckUserAlreadyJoinCompanyRequest
	30, // 66: company.CompanyService.SetRoleForCompanyUser:input_type -> company.SetRoleForCompanyUserRequest
	51, // 67: company.CompanyService.UpdateSuperAdminUser:input_type -> company.UpdateSuperAdminUserRequest
	32, // 68: company.CompanyService.AddUserToCompany:input_type -> company.AddUserToCompanyRequest
	71, // 69: company.CompanyService.GetCompanyBoxByDomain:input_type -> company.GetCompanyBoxByDomainRequest
	34, // 70: company.CompanyService.GetUserJoinCompany:input_type -> company.GetUserJoinCompanyRequest
	36, // 71: company.CompanyService.GetCompanyUserPermissionList:input_type -> company.GetCompanyUserPermissionListRequest
	38, // 72: company.CompanyService.GetCompanyProductList:input_type -> company.GetCompanyProductListRequest
	40, // 73: company.CompanyService.AddProductToCompany:input_type -> company.AddProductToCompanyRequest
	42, // 74: company.CompanyService.RemoveProductFromCompany:input_type -> company.RemoveProductFromCompanyRequest
	44, // 75: company.CompanyService.CheckCompanyProduct:input_type -> company.CheckCompanyProductRequest
	46, // 76: company.CompanyService.GetCompanyDashborad:input_type -> company.GetCompanyDashboradRequest
	49, // 77: company.CompanyService.GetCompanyAdmins:input_type -> company.GetCompanyAdminsRequest
	53, // 78: company.CompanyService.DeleteCompanyUser:input_type -> company.DeleteCompanyUserRequest
	55, // 79: company.CompanyService.AddOperateFileLog:input_type -> company.AddOperateFileLogRequest
	58, // 80: company.CompanyService.QueryOperateFileLog:input_type -> company.QueryOperateFileLogRequest
	11, // 81: company.CompanyService.Create:output_type -> company.CreateResponse
	13, // 82: company.CompanyService.Modify:output_type -> company.ModifyResponse
	9,  // 83: company.CompanyService.GetCompany:output_type -> company.Company
	25, // 84: company.CompanyService.CompanyList:output_type -> company.CompanyListResponse
	16, // 85: company.CompanyService.UserQuery:output_type -> company.UserQueryResponse
	18, // 86: company.CompanyService.CreateCompanyBox:output_type -> company.CreateCompanyBoxResponse
	20, // 87: company.CompanyService.GetCompanyInviteList:output_type -> company.GetCompanyInviteListResponse
	22, // 88: company.CompanyService.GetUserInviteList:output_type -> company.GetUserInviteListResponse
	27, // 89: company.CompanyService.CompanyUserModify:output_type -> company.CompanyUserModifyResponse
	72, // 90: company.CompanyService.GetCompanyBoxList:output_type -> company.GetCompanyBoxListResponse
	73, // 91: company.CompanyService.CompanyBoxModify:output_type -> company.CompanyBoxModifyResponse
	29, // 92: company.CompanyService.CheckUserAlreadyJoinCompany:output_type -> company.CheckUserAlreadyJoinCompanyResponse
	31, // 93: company.CompanyService.SetRoleForCompanyUser:output_type -> company.SetRoleForCompanyUserResponse
	52, // 94: company.CompanyService.UpdateSuperAdminUser:output_type -> company.UpdateSuperAdminUserResponse
	33, // 95: company.CompanyService.AddUserToCompany:output_type -> company.AddUserToCompanyResponse
	74, // 96: company.CompanyService.GetCompanyBoxByDomain:output_type -> company.GetCompanyBoxByDomainResponse
	35, // 97: company.CompanyService.GetUserJoinCompany:output_type -> company.GetUserJoinCompanyResponse
	37, // 98: company.CompanyService.GetCompanyUserPermissionList:output_type -> company.GetCompanyUserPermissionListResponse
	39, // 99: company.CompanyService.GetCompanyProductList:output_type -> company.GetCompanyProductListResponse
	41, // 100: company.CompanyService.AddProductToCompany:output_type -> company.AddProductToCompanyResponse
	43, // 101: company.CompanyService.RemoveProductFromCompany:output_type -> company.RemoveProductFromCompanyResponse
	45, // 102: company.CompanyService.CheckCompanyProduct:output_type -> company.CheckCompanyProductResponse
	48, // 103: company.CompanyService.GetCompanyDashborad:output_type -> company.GetCompanyDashboardResponse
	50, // 104: company.CompanyService.GetCompanyAdmins:output_type -> company.GetCompanyAdminsResponse
	54, // 105: company.CompanyService.DeleteCompanyUser:output_type -> company.DeleteCompanyUserResponse
	57, // 106: company.CompanyService.AddOperateFileLog:output_type -> company.AddOperateFileLogResponse
	59, // 107: company.CompanyService.QueryOperateFileLog:output_type -> company.QueryOperateFileLogResponse
	81, // [81:108] is the sub-list for method output_type
	54, // [54:81] is the sub-list for method input_type
	54, // [54:54] is the sub-list for extension type_name
	54, // [54:54] is the sub-list for extension extendee
	0,  // [0:54] is the sub-list for field type_name
}

func init() { file_protos_platform_company_company_proto_init() }
func file_protos_platform_company_company_proto_init() {
	if File_protos_platform_company_company_proto != nil {
		return
	}
	file_protos_platform_company_user_proto_init()
	file_protos_platform_company_role_proto_init()
	file_protos_platform_company_box_proto_init()
	file_protos_platform_company_permission_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_protos_platform_company_company_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Company); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_platform_company_company_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_platform_company_company_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_platform_company_company_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModifyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_platform_company_company_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModifyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_platform_company_company_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CompanyUser); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_platform_company_company_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserQueryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_platform_company_company_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserQueryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_platform_company_company_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCompanyBoxRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_platform_company_company_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCompanyBoxResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_platform_company_company_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCompanyInviteListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_platform_company_company_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCompanyInviteListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_platform_company_company_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserInviteListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_platform_company_company_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserInviteListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_platform_company_company_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCompanyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_platform_company_company_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CompanyListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_platform_company_company_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CompanyListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_platform_company_company_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CompanyUserModifyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_platform_company_company_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CompanyUserModifyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_platform_company_company_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckUserAlreadyJoinCompanyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_platform_company_company_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckUserAlreadyJoinCompanyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_platform_company_company_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetRoleForCompanyUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_platform_company_company_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetRoleForCompanyUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_platform_company_company_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddUserToCompanyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_platform_company_company_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddUserToCompanyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_platform_company_company_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserJoinCompanyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_platform_company_company_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserJoinCompanyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_platform_company_company_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCompanyUserPermissionListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_platform_company_company_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCompanyUserPermissionListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_platform_company_company_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCompanyProductListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_platform_company_company_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCompanyProductListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_platform_company_company_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddProductToCompanyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_platform_company_company_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddProductToCompanyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_platform_company_company_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveProductFromCompanyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_platform_company_company_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveProductFromCompanyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_platform_company_company_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckCompanyProductRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_platform_company_company_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckCompanyProductResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_platform_company_company_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCompanyDashboradRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_platform_company_company_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CompanyDashboardInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_platform_company_company_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCompanyDashboardResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_platform_company_company_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCompanyAdminsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_platform_company_company_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCompanyAdminsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_platform_company_company_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateSuperAdminUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_platform_company_company_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateSuperAdminUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_platform_company_company_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteCompanyUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_platform_company_company_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteCompanyUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_platform_company_company_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddOperateFileLogRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_platform_company_company_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OperateInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_platform_company_company_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddOperateFileLogResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_platform_company_company_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryOperateFileLogRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_platform_company_company_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryOperateFileLogResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_platform_company_company_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OperateDetailLog); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_protos_platform_company_company_proto_rawDesc,
			NumEnums:      9,
			NumMessages:   52,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_protos_platform_company_company_proto_goTypes,
		DependencyIndexes: file_protos_platform_company_company_proto_depIdxs,
		EnumInfos:         file_protos_platform_company_company_proto_enumTypes,
		MessageInfos:      file_protos_platform_company_company_proto_msgTypes,
	}.Build()
	File_protos_platform_company_company_proto = out.File
	file_protos_platform_company_company_proto_rawDesc = nil
	file_protos_platform_company_company_proto_goTypes = nil
	file_protos_platform_company_company_proto_depIdxs = nil
}
