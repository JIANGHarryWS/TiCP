// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.17.1
// source: protos/platform/company/companymerchandise.proto

package company

import (
	protoconsts "github.com/yuansuan/ticp/iPaaS/sso/protos/platform/protoconsts"
	ptype "github.com/yuansuan/ticp/iPaaS/sso/protos/platform/ptype"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 企业商品状态
type CompanyMerchandiseState int32

const (
	// 未知
	CompanyMerchandiseState_STATE_UNKNOWN CompanyMerchandiseState = 0
	// 启用
	CompanyMerchandiseState_STATE_ONLINE CompanyMerchandiseState = 1
	// 停用
	CompanyMerchandiseState_STATE_OFFLINE CompanyMerchandiseState = 2
)

// Enum value maps for CompanyMerchandiseState.
var (
	CompanyMerchandiseState_name = map[int32]string{
		0: "STATE_UNKNOWN",
		1: "STATE_ONLINE",
		2: "STATE_OFFLINE",
	}
	CompanyMerchandiseState_value = map[string]int32{
		"STATE_UNKNOWN": 0,
		"STATE_ONLINE":  1,
		"STATE_OFFLINE": 2,
	}
)

func (x CompanyMerchandiseState) Enum() *CompanyMerchandiseState {
	p := new(CompanyMerchandiseState)
	*p = x
	return p
}

func (x CompanyMerchandiseState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CompanyMerchandiseState) Descriptor() protoreflect.EnumDescriptor {
	return file_protos_platform_company_companymerchandise_proto_enumTypes[0].Descriptor()
}

func (CompanyMerchandiseState) Type() protoreflect.EnumType {
	return &file_protos_platform_company_companymerchandise_proto_enumTypes[0]
}

func (x CompanyMerchandiseState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CompanyMerchandiseState.Descriptor instead.
func (CompanyMerchandiseState) EnumDescriptor() ([]byte, []int) {
	return file_protos_platform_company_companymerchandise_proto_rawDescGZIP(), []int{0}
}

// 企业商品查询排序
type CompanyMerchandiseQueryOrderBy int32

const (
	CompanyMerchandiseQueryOrderBy_ORDERBY_UPDATETIME_UNKNOWN CompanyMerchandiseQueryOrderBy = 0
	// 更新时间降序
	CompanyMerchandiseQueryOrderBy_ORDERBY_UPDATETIME_DESC CompanyMerchandiseQueryOrderBy = 1
	// 更新时间升序
	CompanyMerchandiseQueryOrderBy_ORDERBY_UPDATETIME_ASC CompanyMerchandiseQueryOrderBy = 2
)

// Enum value maps for CompanyMerchandiseQueryOrderBy.
var (
	CompanyMerchandiseQueryOrderBy_name = map[int32]string{
		0: "ORDERBY_UPDATETIME_UNKNOWN",
		1: "ORDERBY_UPDATETIME_DESC",
		2: "ORDERBY_UPDATETIME_ASC",
	}
	CompanyMerchandiseQueryOrderBy_value = map[string]int32{
		"ORDERBY_UPDATETIME_UNKNOWN": 0,
		"ORDERBY_UPDATETIME_DESC":    1,
		"ORDERBY_UPDATETIME_ASC":     2,
	}
)

func (x CompanyMerchandiseQueryOrderBy) Enum() *CompanyMerchandiseQueryOrderBy {
	p := new(CompanyMerchandiseQueryOrderBy)
	*p = x
	return p
}

func (x CompanyMerchandiseQueryOrderBy) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CompanyMerchandiseQueryOrderBy) Descriptor() protoreflect.EnumDescriptor {
	return file_protos_platform_company_companymerchandise_proto_enumTypes[1].Descriptor()
}

func (CompanyMerchandiseQueryOrderBy) Type() protoreflect.EnumType {
	return &file_protos_platform_company_companymerchandise_proto_enumTypes[1]
}

func (x CompanyMerchandiseQueryOrderBy) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CompanyMerchandiseQueryOrderBy.Descriptor instead.
func (CompanyMerchandiseQueryOrderBy) EnumDescriptor() ([]byte, []int) {
	return file_protos_platform_company_companymerchandise_proto_rawDescGZIP(), []int{1}
}

// 企业商品查询请求
type CompanyMerchandiseQueryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 搜索关键字，全匹配企业名和商品名
	Keyword string `protobuf:"bytes,1,opt,name=keyword,proto3" json:"keyword,omitempty"`
	// 企业ID，传 "1" 查个人用户的商品
	// @inject_tag: `validate:"is_ysid"`
	CompanyId string `protobuf:"bytes,2,opt,name=company_id,json=companyId,proto3" json:"company_id,omitempty"`
	// 商品ID
	// @inject_tag: `validate:"is_ysid"`
	MerchandiseId string `protobuf:"bytes,3,opt,name=merchandise_id,json=merchandiseId,proto3" json:"merchandise_id,omitempty"`
	// 企业商品状态
	State CompanyMerchandiseState `protobuf:"varint,4,opt,name=state,proto3,enum=company.CompanyMerchandiseState" json:"state,omitempty"`
	// 结果排序
	OrderBy CompanyMerchandiseQueryOrderBy `protobuf:"varint,5,opt,name=order_by,json=orderBy,proto3,enum=company.CompanyMerchandiseQueryOrderBy" json:"order_by,omitempty"`
	// @inject_tag: `validate:"required"`
	Page *ptype.Page `protobuf:"bytes,6,opt,name=page,proto3" json:"page,omitempty"`
	// @inject_tag: `validate:"is_ysid"`
	ProductId string `protobuf:"bytes,7,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
	// 企业商品资源类型
	OutResourceType protoconsts.ResourceType `protobuf:"varint,8,opt,name=out_resource_type,json=outResourceType,proto3,enum=protoconsts.ResourceType" json:"out_resource_type,omitempty"`
	LicenseType     string                   `protobuf:"bytes,9,opt,name=license_type,json=licenseType,proto3" json:"license_type,omitempty"`
	// 多资源类型查询
	OutResourceTypes []protoconsts.ResourceType `protobuf:"varint,10,rep,packed,name=out_resource_types,json=outResourceTypes,proto3,enum=protoconsts.ResourceType" json:"out_resource_types,omitempty"`
	// 超算id
	ScId string `protobuf:"bytes,11,opt,name=sc_id,json=scId,proto3" json:"sc_id,omitempty"`
}

func (x *CompanyMerchandiseQueryRequest) Reset() {
	*x = CompanyMerchandiseQueryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_platform_company_companymerchandise_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompanyMerchandiseQueryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompanyMerchandiseQueryRequest) ProtoMessage() {}

func (x *CompanyMerchandiseQueryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_platform_company_companymerchandise_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompanyMerchandiseQueryRequest.ProtoReflect.Descriptor instead.
func (*CompanyMerchandiseQueryRequest) Descriptor() ([]byte, []int) {
	return file_protos_platform_company_companymerchandise_proto_rawDescGZIP(), []int{0}
}

func (x *CompanyMerchandiseQueryRequest) GetKeyword() string {
	if x != nil {
		return x.Keyword
	}
	return ""
}

func (x *CompanyMerchandiseQueryRequest) GetCompanyId() string {
	if x != nil {
		return x.CompanyId
	}
	return ""
}

func (x *CompanyMerchandiseQueryRequest) GetMerchandiseId() string {
	if x != nil {
		return x.MerchandiseId
	}
	return ""
}

func (x *CompanyMerchandiseQueryRequest) GetState() CompanyMerchandiseState {
	if x != nil {
		return x.State
	}
	return CompanyMerchandiseState_STATE_UNKNOWN
}

func (x *CompanyMerchandiseQueryRequest) GetOrderBy() CompanyMerchandiseQueryOrderBy {
	if x != nil {
		return x.OrderBy
	}
	return CompanyMerchandiseQueryOrderBy_ORDERBY_UPDATETIME_UNKNOWN
}

func (x *CompanyMerchandiseQueryRequest) GetPage() *ptype.Page {
	if x != nil {
		return x.Page
	}
	return nil
}

func (x *CompanyMerchandiseQueryRequest) GetProductId() string {
	if x != nil {
		return x.ProductId
	}
	return ""
}

func (x *CompanyMerchandiseQueryRequest) GetOutResourceType() protoconsts.ResourceType {
	if x != nil {
		return x.OutResourceType
	}
	return protoconsts.ResourceType_UNKNOWN
}

func (x *CompanyMerchandiseQueryRequest) GetLicenseType() string {
	if x != nil {
		return x.LicenseType
	}
	return ""
}

func (x *CompanyMerchandiseQueryRequest) GetOutResourceTypes() []protoconsts.ResourceType {
	if x != nil {
		return x.OutResourceTypes
	}
	return nil
}

func (x *CompanyMerchandiseQueryRequest) GetScId() string {
	if x != nil {
		return x.ScId
	}
	return ""
}

// 企业商品查询结果
type CompanyMerchandiseQueryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 数据列表
	CompanyMerchandises []*CompanyMerchandise `protobuf:"bytes,1,rep,name=companyMerchandises,proto3" json:"companyMerchandises,omitempty"`
	// @inject_tag: `validate:"required"`
	PageCtx *ptype.PageCtx `protobuf:"bytes,2,opt,name=page_ctx,json=pageCtx,proto3" json:"page_ctx,omitempty"`
}

func (x *CompanyMerchandiseQueryResponse) Reset() {
	*x = CompanyMerchandiseQueryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_platform_company_companymerchandise_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompanyMerchandiseQueryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompanyMerchandiseQueryResponse) ProtoMessage() {}

func (x *CompanyMerchandiseQueryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_platform_company_companymerchandise_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompanyMerchandiseQueryResponse.ProtoReflect.Descriptor instead.
func (*CompanyMerchandiseQueryResponse) Descriptor() ([]byte, []int) {
	return file_protos_platform_company_companymerchandise_proto_rawDescGZIP(), []int{1}
}

func (x *CompanyMerchandiseQueryResponse) GetCompanyMerchandises() []*CompanyMerchandise {
	if x != nil {
		return x.CompanyMerchandises
	}
	return nil
}

func (x *CompanyMerchandiseQueryResponse) GetPageCtx() *ptype.PageCtx {
	if x != nil {
		return x.PageCtx
	}
	return nil
}

// 企业商品查询请求
type CompanyBundleMerchandiseQueryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 搜索关键字，全匹配企业名和商品名、套餐名
	Keyword string `protobuf:"bytes,1,opt,name=keyword,proto3" json:"keyword,omitempty"`
	// 企业ID，传 "1" 查个人用户的商品
	// @inject_tag: `validate:"is_ysid"`
	CompanyId string `protobuf:"bytes,2,opt,name=company_id,json=companyId,proto3" json:"company_id,omitempty"`
	// 商品ID
	// @inject_tag: `validate:"is_ysid"`
	MerchandiseId string `protobuf:"bytes,3,opt,name=merchandise_id,json=merchandiseId,proto3" json:"merchandise_id,omitempty"`
	// 企业商品状态
	State CompanyMerchandiseState `protobuf:"varint,4,opt,name=state,proto3,enum=company.CompanyMerchandiseState" json:"state,omitempty"`
	// 结果排序
	OrderBy CompanyMerchandiseQueryOrderBy `protobuf:"varint,5,opt,name=order_by,json=orderBy,proto3,enum=company.CompanyMerchandiseQueryOrderBy" json:"order_by,omitempty"`
	// @inject_tag: `validate:"required"`
	Page *ptype.Page `protobuf:"bytes,6,opt,name=page,proto3" json:"page,omitempty"`
	// @inject_tag: `validate:"is_ysid"`
	ProductId string `protobuf:"bytes,7,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
	// 企业商品资源类型
	OutResourceType protoconsts.ResourceType `protobuf:"varint,8,opt,name=out_resource_type,json=outResourceType,proto3,enum=protoconsts.ResourceType" json:"out_resource_type,omitempty"`
	LicenseType     string                   `protobuf:"bytes,9,opt,name=license_type,json=licenseType,proto3" json:"license_type,omitempty"`
	// 套餐内包含商品名，仅针对套餐内商品名称进行搜做
	MerchandiseName string `protobuf:"bytes,10,opt,name=merchandise_name,json=merchandiseName,proto3" json:"merchandise_name,omitempty"`
}

func (x *CompanyBundleMerchandiseQueryRequest) Reset() {
	*x = CompanyBundleMerchandiseQueryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_platform_company_companymerchandise_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompanyBundleMerchandiseQueryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompanyBundleMerchandiseQueryRequest) ProtoMessage() {}

func (x *CompanyBundleMerchandiseQueryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_platform_company_companymerchandise_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompanyBundleMerchandiseQueryRequest.ProtoReflect.Descriptor instead.
func (*CompanyBundleMerchandiseQueryRequest) Descriptor() ([]byte, []int) {
	return file_protos_platform_company_companymerchandise_proto_rawDescGZIP(), []int{2}
}

func (x *CompanyBundleMerchandiseQueryRequest) GetKeyword() string {
	if x != nil {
		return x.Keyword
	}
	return ""
}

func (x *CompanyBundleMerchandiseQueryRequest) GetCompanyId() string {
	if x != nil {
		return x.CompanyId
	}
	return ""
}

func (x *CompanyBundleMerchandiseQueryRequest) GetMerchandiseId() string {
	if x != nil {
		return x.MerchandiseId
	}
	return ""
}

func (x *CompanyBundleMerchandiseQueryRequest) GetState() CompanyMerchandiseState {
	if x != nil {
		return x.State
	}
	return CompanyMerchandiseState_STATE_UNKNOWN
}

func (x *CompanyBundleMerchandiseQueryRequest) GetOrderBy() CompanyMerchandiseQueryOrderBy {
	if x != nil {
		return x.OrderBy
	}
	return CompanyMerchandiseQueryOrderBy_ORDERBY_UPDATETIME_UNKNOWN
}

func (x *CompanyBundleMerchandiseQueryRequest) GetPage() *ptype.Page {
	if x != nil {
		return x.Page
	}
	return nil
}

func (x *CompanyBundleMerchandiseQueryRequest) GetProductId() string {
	if x != nil {
		return x.ProductId
	}
	return ""
}

func (x *CompanyBundleMerchandiseQueryRequest) GetOutResourceType() protoconsts.ResourceType {
	if x != nil {
		return x.OutResourceType
	}
	return protoconsts.ResourceType_UNKNOWN
}

func (x *CompanyBundleMerchandiseQueryRequest) GetLicenseType() string {
	if x != nil {
		return x.LicenseType
	}
	return ""
}

func (x *CompanyBundleMerchandiseQueryRequest) GetMerchandiseName() string {
	if x != nil {
		return x.MerchandiseName
	}
	return ""
}

// 企业商品查询结果
type CompanyBundleMerchandiseQueryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 数据列表
	CompanyMerchandises []*CompanyMerchandise `protobuf:"bytes,1,rep,name=companyMerchandises,proto3" json:"companyMerchandises,omitempty"`
	// @inject_tag: `validate:"required"`
	PageCtx *ptype.PageCtx `protobuf:"bytes,2,opt,name=page_ctx,json=pageCtx,proto3" json:"page_ctx,omitempty"`
}

func (x *CompanyBundleMerchandiseQueryResponse) Reset() {
	*x = CompanyBundleMerchandiseQueryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_platform_company_companymerchandise_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompanyBundleMerchandiseQueryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompanyBundleMerchandiseQueryResponse) ProtoMessage() {}

func (x *CompanyBundleMerchandiseQueryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_platform_company_companymerchandise_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompanyBundleMerchandiseQueryResponse.ProtoReflect.Descriptor instead.
func (*CompanyBundleMerchandiseQueryResponse) Descriptor() ([]byte, []int) {
	return file_protos_platform_company_companymerchandise_proto_rawDescGZIP(), []int{3}
}

func (x *CompanyBundleMerchandiseQueryResponse) GetCompanyMerchandises() []*CompanyMerchandise {
	if x != nil {
		return x.CompanyMerchandises
	}
	return nil
}

func (x *CompanyBundleMerchandiseQueryResponse) GetPageCtx() *ptype.PageCtx {
	if x != nil {
		return x.PageCtx
	}
	return nil
}

type CheckIsCompanyMerchandiseAcitveRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 企业ID，传 "1" 查个人用户的商品
	// @inject_tag: `validate:"is_ysid,required"`
	CompanyId string `protobuf:"bytes,1,opt,name=company_id,json=companyId,proto3" json:"company_id,omitempty"`
	// 商品ID
	// @inject_tag: `validate:"is_ysid,required"`
	MerchandiseId string `protobuf:"bytes,2,opt,name=merchandise_id,json=merchandiseId,proto3" json:"merchandise_id,omitempty"`
}

func (x *CheckIsCompanyMerchandiseAcitveRequest) Reset() {
	*x = CheckIsCompanyMerchandiseAcitveRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_platform_company_companymerchandise_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckIsCompanyMerchandiseAcitveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckIsCompanyMerchandiseAcitveRequest) ProtoMessage() {}

func (x *CheckIsCompanyMerchandiseAcitveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_platform_company_companymerchandise_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckIsCompanyMerchandiseAcitveRequest.ProtoReflect.Descriptor instead.
func (*CheckIsCompanyMerchandiseAcitveRequest) Descriptor() ([]byte, []int) {
	return file_protos_platform_company_companymerchandise_proto_rawDescGZIP(), []int{4}
}

func (x *CheckIsCompanyMerchandiseAcitveRequest) GetCompanyId() string {
	if x != nil {
		return x.CompanyId
	}
	return ""
}

func (x *CheckIsCompanyMerchandiseAcitveRequest) GetMerchandiseId() string {
	if x != nil {
		return x.MerchandiseId
	}
	return ""
}

type CheckIsCompanyMerchandiseAcitveResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsActive bool `protobuf:"varint,1,opt,name=is_active,json=isActive,proto3" json:"is_active,omitempty"`
	IsPriced bool `protobuf:"varint,2,opt,name=is_priced,json=isPriced,proto3" json:"is_priced,omitempty"`
}

func (x *CheckIsCompanyMerchandiseAcitveResponse) Reset() {
	*x = CheckIsCompanyMerchandiseAcitveResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_platform_company_companymerchandise_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckIsCompanyMerchandiseAcitveResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckIsCompanyMerchandiseAcitveResponse) ProtoMessage() {}

func (x *CheckIsCompanyMerchandiseAcitveResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_platform_company_companymerchandise_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckIsCompanyMerchandiseAcitveResponse.ProtoReflect.Descriptor instead.
func (*CheckIsCompanyMerchandiseAcitveResponse) Descriptor() ([]byte, []int) {
	return file_protos_platform_company_companymerchandise_proto_rawDescGZIP(), []int{5}
}

func (x *CheckIsCompanyMerchandiseAcitveResponse) GetIsActive() bool {
	if x != nil {
		return x.IsActive
	}
	return false
}

func (x *CheckIsCompanyMerchandiseAcitveResponse) GetIsPriced() bool {
	if x != nil {
		return x.IsPriced
	}
	return false
}

// 获取企业/个人已生效价格商品请求
type GetCompanyPriceMerchandiseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 企业ID，传 "1" 查个人用户的商品
	// @inject_tag: `validate:"is_ysid,required"`
	CompanyId string `protobuf:"bytes,1,opt,name=company_id,json=companyId,proto3" json:"company_id,omitempty"`
	// @inject_tag: `validate:"is_ysid"`
	ProductId string `protobuf:"bytes,2,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
	// 企业商品资源类型
	OutResourceType protoconsts.ResourceType `protobuf:"varint,3,opt,name=out_resource_type,json=outResourceType,proto3,enum=protoconsts.ResourceType" json:"out_resource_type,omitempty"`
	LicenseType     string                   `protobuf:"bytes,4,opt,name=license_type,json=licenseType,proto3" json:"license_type,omitempty"`
}

func (x *GetCompanyPriceMerchandiseRequest) Reset() {
	*x = GetCompanyPriceMerchandiseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_platform_company_companymerchandise_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCompanyPriceMerchandiseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCompanyPriceMerchandiseRequest) ProtoMessage() {}

func (x *GetCompanyPriceMerchandiseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_platform_company_companymerchandise_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCompanyPriceMerchandiseRequest.ProtoReflect.Descriptor instead.
func (*GetCompanyPriceMerchandiseRequest) Descriptor() ([]byte, []int) {
	return file_protos_platform_company_companymerchandise_proto_rawDescGZIP(), []int{6}
}

func (x *GetCompanyPriceMerchandiseRequest) GetCompanyId() string {
	if x != nil {
		return x.CompanyId
	}
	return ""
}

func (x *GetCompanyPriceMerchandiseRequest) GetProductId() string {
	if x != nil {
		return x.ProductId
	}
	return ""
}

func (x *GetCompanyPriceMerchandiseRequest) GetOutResourceType() protoconsts.ResourceType {
	if x != nil {
		return x.OutResourceType
	}
	return protoconsts.ResourceType_UNKNOWN
}

func (x *GetCompanyPriceMerchandiseRequest) GetLicenseType() string {
	if x != nil {
		return x.LicenseType
	}
	return ""
}

// 获取企业/个人已生效价格商品结果
type GetCompanyPriceMerchandiseResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CompanyMerchandises []*CompanyMerchandise `protobuf:"bytes,1,rep,name=companyMerchandises,proto3" json:"companyMerchandises,omitempty"`
}

func (x *GetCompanyPriceMerchandiseResponse) Reset() {
	*x = GetCompanyPriceMerchandiseResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_platform_company_companymerchandise_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCompanyPriceMerchandiseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCompanyPriceMerchandiseResponse) ProtoMessage() {}

func (x *GetCompanyPriceMerchandiseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_platform_company_companymerchandise_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCompanyPriceMerchandiseResponse.ProtoReflect.Descriptor instead.
func (*GetCompanyPriceMerchandiseResponse) Descriptor() ([]byte, []int) {
	return file_protos_platform_company_companymerchandise_proto_rawDescGZIP(), []int{7}
}

func (x *GetCompanyPriceMerchandiseResponse) GetCompanyMerchandises() []*CompanyMerchandise {
	if x != nil {
		return x.CompanyMerchandises
	}
	return nil
}

type GetCompanyMerchandiseLicenseReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MerchandiseId string `protobuf:"bytes,1,opt,name=merchandise_id,json=merchandiseId,proto3" json:"merchandise_id,omitempty"`
	CompanyId     string `protobuf:"bytes,2,opt,name=company_id,json=companyId,proto3" json:"company_id,omitempty"`
}

func (x *GetCompanyMerchandiseLicenseReq) Reset() {
	*x = GetCompanyMerchandiseLicenseReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_platform_company_companymerchandise_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCompanyMerchandiseLicenseReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCompanyMerchandiseLicenseReq) ProtoMessage() {}

func (x *GetCompanyMerchandiseLicenseReq) ProtoReflect() protoreflect.Message {
	mi := &file_protos_platform_company_companymerchandise_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCompanyMerchandiseLicenseReq.ProtoReflect.Descriptor instead.
func (*GetCompanyMerchandiseLicenseReq) Descriptor() ([]byte, []int) {
	return file_protos_platform_company_companymerchandise_proto_rawDescGZIP(), []int{8}
}

func (x *GetCompanyMerchandiseLicenseReq) GetMerchandiseId() string {
	if x != nil {
		return x.MerchandiseId
	}
	return ""
}

func (x *GetCompanyMerchandiseLicenseReq) GetCompanyId() string {
	if x != nil {
		return x.CompanyId
	}
	return ""
}

type SaveCompanyMerchandiseLicenseReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: `validate:"is_ysid"`
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// @inject_tag: `validate:"is_ysid"`
	CompanyId string `protobuf:"bytes,2,opt,name=company_id,json=companyId,proto3" json:"company_id,omitempty"`
	// @inject_tag: `validate:"is_ysid"`
	MerchandiseId string `protobuf:"bytes,3,opt,name=merchandise_id,json=merchandiseId,proto3" json:"merchandise_id,omitempty"`
	// @inject_tag: `validate:"is_ysid"`
	AppRuntimeId string `protobuf:"bytes,4,opt,name=app_runtime_id,json=appRuntimeId,proto3" json:"app_runtime_id,omitempty"`
	// @inject_tag: `validate:"required"`
	License string `protobuf:"bytes,5,opt,name=license,proto3" json:"license,omitempty"`
	// @inject_tag: `validate:"is_ysid"`
	CreatorId string `protobuf:"bytes,6,opt,name=creator_id,json=creatorId,proto3" json:"creator_id,omitempty"`
}

func (x *SaveCompanyMerchandiseLicenseReq) Reset() {
	*x = SaveCompanyMerchandiseLicenseReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_platform_company_companymerchandise_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaveCompanyMerchandiseLicenseReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveCompanyMerchandiseLicenseReq) ProtoMessage() {}

func (x *SaveCompanyMerchandiseLicenseReq) ProtoReflect() protoreflect.Message {
	mi := &file_protos_platform_company_companymerchandise_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveCompanyMerchandiseLicenseReq.ProtoReflect.Descriptor instead.
func (*SaveCompanyMerchandiseLicenseReq) Descriptor() ([]byte, []int) {
	return file_protos_platform_company_companymerchandise_proto_rawDescGZIP(), []int{9}
}

func (x *SaveCompanyMerchandiseLicenseReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *SaveCompanyMerchandiseLicenseReq) GetCompanyId() string {
	if x != nil {
		return x.CompanyId
	}
	return ""
}

func (x *SaveCompanyMerchandiseLicenseReq) GetMerchandiseId() string {
	if x != nil {
		return x.MerchandiseId
	}
	return ""
}

func (x *SaveCompanyMerchandiseLicenseReq) GetAppRuntimeId() string {
	if x != nil {
		return x.AppRuntimeId
	}
	return ""
}

func (x *SaveCompanyMerchandiseLicenseReq) GetLicense() string {
	if x != nil {
		return x.License
	}
	return ""
}

func (x *SaveCompanyMerchandiseLicenseReq) GetCreatorId() string {
	if x != nil {
		return x.CreatorId
	}
	return ""
}

type CompanyMerchandiseLicense struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: `validate:"is_ysid"`
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// @inject_tag: `validate:"is_ysid"`
	CompanyId string `protobuf:"bytes,2,opt,name=company_id,json=companyId,proto3" json:"company_id,omitempty"`
	// @inject_tag: `validate:"is_ysid"`
	MerchandiseId string `protobuf:"bytes,3,opt,name=merchandise_id,json=merchandiseId,proto3" json:"merchandise_id,omitempty"`
	// @inject_tag: `validate:"is_ysid"`
	AppRuntimeId string `protobuf:"bytes,4,opt,name=app_runtime_id,json=appRuntimeId,proto3" json:"app_runtime_id,omitempty"`
	License      string `protobuf:"bytes,5,opt,name=license,proto3" json:"license,omitempty"`
	IsActive     string `protobuf:"bytes,6,opt,name=is_active,json=isActive,proto3" json:"is_active,omitempty"`
	// @inject_tag: `validate:"is_ysid"`
	CreatorId  string                 `protobuf:"bytes,7,opt,name=creator_id,json=creatorId,proto3" json:"creator_id,omitempty"`
	CreateTime *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	UpdateTime *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
}

func (x *CompanyMerchandiseLicense) Reset() {
	*x = CompanyMerchandiseLicense{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_platform_company_companymerchandise_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompanyMerchandiseLicense) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompanyMerchandiseLicense) ProtoMessage() {}

func (x *CompanyMerchandiseLicense) ProtoReflect() protoreflect.Message {
	mi := &file_protos_platform_company_companymerchandise_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompanyMerchandiseLicense.ProtoReflect.Descriptor instead.
func (*CompanyMerchandiseLicense) Descriptor() ([]byte, []int) {
	return file_protos_platform_company_companymerchandise_proto_rawDescGZIP(), []int{10}
}

func (x *CompanyMerchandiseLicense) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CompanyMerchandiseLicense) GetCompanyId() string {
	if x != nil {
		return x.CompanyId
	}
	return ""
}

func (x *CompanyMerchandiseLicense) GetMerchandiseId() string {
	if x != nil {
		return x.MerchandiseId
	}
	return ""
}

func (x *CompanyMerchandiseLicense) GetAppRuntimeId() string {
	if x != nil {
		return x.AppRuntimeId
	}
	return ""
}

func (x *CompanyMerchandiseLicense) GetLicense() string {
	if x != nil {
		return x.License
	}
	return ""
}

func (x *CompanyMerchandiseLicense) GetIsActive() string {
	if x != nil {
		return x.IsActive
	}
	return ""
}

func (x *CompanyMerchandiseLicense) GetCreatorId() string {
	if x != nil {
		return x.CreatorId
	}
	return ""
}

func (x *CompanyMerchandiseLicense) GetCreateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CreateTime
	}
	return nil
}

func (x *CompanyMerchandiseLicense) GetUpdateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdateTime
	}
	return nil
}

type AddCompanyMerchandiseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 企业ID，传 "1" 为个人用户添加商品
	// @inject_tag: `validate:"is_ysid,required"`
	CompanyId string `protobuf:"bytes,1,opt,name=company_id,json=companyId,proto3" json:"company_id,omitempty"`
	// @inject_tag: `validate:"is_ysid,required"`
	MerchandiseId string `protobuf:"bytes,2,opt,name=merchandise_id,json=merchandiseId,proto3" json:"merchandise_id,omitempty"`
	// @inject_tag: `validate:"is_ysid,required"`
	CreateUid string `protobuf:"bytes,3,opt,name=create_uid,json=createUid,proto3" json:"create_uid,omitempty"`
}

func (x *AddCompanyMerchandiseRequest) Reset() {
	*x = AddCompanyMerchandiseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_platform_company_companymerchandise_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddCompanyMerchandiseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddCompanyMerchandiseRequest) ProtoMessage() {}

func (x *AddCompanyMerchandiseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_platform_company_companymerchandise_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddCompanyMerchandiseRequest.ProtoReflect.Descriptor instead.
func (*AddCompanyMerchandiseRequest) Descriptor() ([]byte, []int) {
	return file_protos_platform_company_companymerchandise_proto_rawDescGZIP(), []int{11}
}

func (x *AddCompanyMerchandiseRequest) GetCompanyId() string {
	if x != nil {
		return x.CompanyId
	}
	return ""
}

func (x *AddCompanyMerchandiseRequest) GetMerchandiseId() string {
	if x != nil {
		return x.MerchandiseId
	}
	return ""
}

func (x *AddCompanyMerchandiseRequest) GetCreateUid() string {
	if x != nil {
		return x.CreateUid
	}
	return ""
}

type AddCompanyMerchandiseResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddCompanyMerchandiseResponse) Reset() {
	*x = AddCompanyMerchandiseResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_platform_company_companymerchandise_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddCompanyMerchandiseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddCompanyMerchandiseResponse) ProtoMessage() {}

func (x *AddCompanyMerchandiseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_platform_company_companymerchandise_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddCompanyMerchandiseResponse.ProtoReflect.Descriptor instead.
func (*AddCompanyMerchandiseResponse) Descriptor() ([]byte, []int) {
	return file_protos_platform_company_companymerchandise_proto_rawDescGZIP(), []int{12}
}

type BatchAddCompanyMerchandiseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 企业ID，传 "1" 为个人用户添加商品
	// @inject_tag: `validate:"is_ysid,required"`
	CompanyId string `protobuf:"bytes,1,opt,name=company_id,json=companyId,proto3" json:"company_id,omitempty"`
	// @inject_tag: `validate:"required"`
	MerchandiseId []string `protobuf:"bytes,2,rep,name=merchandise_id,json=merchandiseId,proto3" json:"merchandise_id,omitempty"`
	// @inject_tag: `validate:"is_ysid,required"`
	CreateUid string `protobuf:"bytes,3,opt,name=create_uid,json=createUid,proto3" json:"create_uid,omitempty"`
}

func (x *BatchAddCompanyMerchandiseRequest) Reset() {
	*x = BatchAddCompanyMerchandiseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_platform_company_companymerchandise_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchAddCompanyMerchandiseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchAddCompanyMerchandiseRequest) ProtoMessage() {}

func (x *BatchAddCompanyMerchandiseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_platform_company_companymerchandise_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchAddCompanyMerchandiseRequest.ProtoReflect.Descriptor instead.
func (*BatchAddCompanyMerchandiseRequest) Descriptor() ([]byte, []int) {
	return file_protos_platform_company_companymerchandise_proto_rawDescGZIP(), []int{13}
}

func (x *BatchAddCompanyMerchandiseRequest) GetCompanyId() string {
	if x != nil {
		return x.CompanyId
	}
	return ""
}

func (x *BatchAddCompanyMerchandiseRequest) GetMerchandiseId() []string {
	if x != nil {
		return x.MerchandiseId
	}
	return nil
}

func (x *BatchAddCompanyMerchandiseRequest) GetCreateUid() string {
	if x != nil {
		return x.CreateUid
	}
	return ""
}

type BatchAddCompanyMerchandiseResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *BatchAddCompanyMerchandiseResponse) Reset() {
	*x = BatchAddCompanyMerchandiseResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_platform_company_companymerchandise_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchAddCompanyMerchandiseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchAddCompanyMerchandiseResponse) ProtoMessage() {}

func (x *BatchAddCompanyMerchandiseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_platform_company_companymerchandise_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchAddCompanyMerchandiseResponse.ProtoReflect.Descriptor instead.
func (*BatchAddCompanyMerchandiseResponse) Descriptor() ([]byte, []int) {
	return file_protos_platform_company_companymerchandise_proto_rawDescGZIP(), []int{14}
}

type UpdateCompanyMerchandiseStateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: `validate:"required"`
	Ids []string `protobuf:"bytes,1,rep,name=ids,proto3" json:"ids,omitempty"`
	// @inject_tag: `validate:"min=1,max=2"`
	State int64 `protobuf:"varint,2,opt,name=state,proto3" json:"state,omitempty"`
}

func (x *UpdateCompanyMerchandiseStateRequest) Reset() {
	*x = UpdateCompanyMerchandiseStateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_platform_company_companymerchandise_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCompanyMerchandiseStateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCompanyMerchandiseStateRequest) ProtoMessage() {}

func (x *UpdateCompanyMerchandiseStateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_platform_company_companymerchandise_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCompanyMerchandiseStateRequest.ProtoReflect.Descriptor instead.
func (*UpdateCompanyMerchandiseStateRequest) Descriptor() ([]byte, []int) {
	return file_protos_platform_company_companymerchandise_proto_rawDescGZIP(), []int{15}
}

func (x *UpdateCompanyMerchandiseStateRequest) GetIds() []string {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *UpdateCompanyMerchandiseStateRequest) GetState() int64 {
	if x != nil {
		return x.State
	}
	return 0
}

type UpdateCompanyMerchandiseStateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateCompanyMerchandiseStateResponse) Reset() {
	*x = UpdateCompanyMerchandiseStateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_platform_company_companymerchandise_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCompanyMerchandiseStateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCompanyMerchandiseStateResponse) ProtoMessage() {}

func (x *UpdateCompanyMerchandiseStateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_platform_company_companymerchandise_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCompanyMerchandiseStateResponse.ProtoReflect.Descriptor instead.
func (*UpdateCompanyMerchandiseStateResponse) Descriptor() ([]byte, []int) {
	return file_protos_platform_company_companymerchandise_proto_rawDescGZIP(), []int{16}
}

// 企业商品
type CompanyMerchandise struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// 企业ID，"1" 表示个人用户商品
	CompanyId       string `protobuf:"bytes,2,opt,name=company_id,json=companyId,proto3" json:"company_id,omitempty"`
	CompanyName     string `protobuf:"bytes,3,opt,name=company_name,json=companyName,proto3" json:"company_name,omitempty"`
	MerchandiseId   string `protobuf:"bytes,4,opt,name=merchandise_id,json=merchandiseId,proto3" json:"merchandise_id,omitempty"`
	MerchandiseName string `protobuf:"bytes,5,opt,name=merchandise_name,json=merchandiseName,proto3" json:"merchandise_name,omitempty"`
	OutResourceType int64  `protobuf:"varint,6,opt,name=out_resource_type,json=outResourceType,proto3" json:"out_resource_type,omitempty"`
	OutResourceId   string `protobuf:"bytes,7,opt,name=out_resource_id,json=outResourceId,proto3" json:"out_resource_id,omitempty"`
	LicenseType     string `protobuf:"bytes,8,opt,name=license_type,json=licenseType,proto3" json:"license_type,omitempty"`
	LicenseActive   string `protobuf:"bytes,9,opt,name=license_active,json=licenseActive,proto3" json:"license_active,omitempty"`
	State           int64  `protobuf:"varint,10,opt,name=state,proto3" json:"state,omitempty"`
	// 创建者用户id
	CreateUid string `protobuf:"bytes,11,opt,name=create_uid,json=createUid,proto3" json:"create_uid,omitempty"`
	// 创建时间
	CreateTime *timestamppb.Timestamp `protobuf:"bytes,12,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	// 更新时间
	UpdateTime *timestamppb.Timestamp `protobuf:"bytes,13,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	// 所属产品
	ProductId string `protobuf:"bytes,14,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
}

func (x *CompanyMerchandise) Reset() {
	*x = CompanyMerchandise{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_platform_company_companymerchandise_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompanyMerchandise) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompanyMerchandise) ProtoMessage() {}

func (x *CompanyMerchandise) ProtoReflect() protoreflect.Message {
	mi := &file_protos_platform_company_companymerchandise_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompanyMerchandise.ProtoReflect.Descriptor instead.
func (*CompanyMerchandise) Descriptor() ([]byte, []int) {
	return file_protos_platform_company_companymerchandise_proto_rawDescGZIP(), []int{17}
}

func (x *CompanyMerchandise) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CompanyMerchandise) GetCompanyId() string {
	if x != nil {
		return x.CompanyId
	}
	return ""
}

func (x *CompanyMerchandise) GetCompanyName() string {
	if x != nil {
		return x.CompanyName
	}
	return ""
}

func (x *CompanyMerchandise) GetMerchandiseId() string {
	if x != nil {
		return x.MerchandiseId
	}
	return ""
}

func (x *CompanyMerchandise) GetMerchandiseName() string {
	if x != nil {
		return x.MerchandiseName
	}
	return ""
}

func (x *CompanyMerchandise) GetOutResourceType() int64 {
	if x != nil {
		return x.OutResourceType
	}
	return 0
}

func (x *CompanyMerchandise) GetOutResourceId() string {
	if x != nil {
		return x.OutResourceId
	}
	return ""
}

func (x *CompanyMerchandise) GetLicenseType() string {
	if x != nil {
		return x.LicenseType
	}
	return ""
}

func (x *CompanyMerchandise) GetLicenseActive() string {
	if x != nil {
		return x.LicenseActive
	}
	return ""
}

func (x *CompanyMerchandise) GetState() int64 {
	if x != nil {
		return x.State
	}
	return 0
}

func (x *CompanyMerchandise) GetCreateUid() string {
	if x != nil {
		return x.CreateUid
	}
	return ""
}

func (x *CompanyMerchandise) GetCreateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CreateTime
	}
	return nil
}

func (x *CompanyMerchandise) GetUpdateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdateTime
	}
	return nil
}

func (x *CompanyMerchandise) GetProductId() string {
	if x != nil {
		return x.ProductId
	}
	return ""
}

// 获取企业/个人已生效价格商品请求
type GetCompanyPriceApplicationMerchandiseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 企业ID，传 "1" 查个人用户的商品
	// @inject_tag: `validate:"is_ysid,required"`
	CompanyId string `protobuf:"bytes,1,opt,name=company_id,json=companyId,proto3" json:"company_id,omitempty"`
	// @inject_tag: `validate:"is_ysid"`
	ProductId string `protobuf:"bytes,2,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
	// @inject_tag: `validate:"is_ysid,required"`
	AppId string `protobuf:"bytes,3,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
}

func (x *GetCompanyPriceApplicationMerchandiseRequest) Reset() {
	*x = GetCompanyPriceApplicationMerchandiseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_platform_company_companymerchandise_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCompanyPriceApplicationMerchandiseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCompanyPriceApplicationMerchandiseRequest) ProtoMessage() {}

func (x *GetCompanyPriceApplicationMerchandiseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_platform_company_companymerchandise_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCompanyPriceApplicationMerchandiseRequest.ProtoReflect.Descriptor instead.
func (*GetCompanyPriceApplicationMerchandiseRequest) Descriptor() ([]byte, []int) {
	return file_protos_platform_company_companymerchandise_proto_rawDescGZIP(), []int{18}
}

func (x *GetCompanyPriceApplicationMerchandiseRequest) GetCompanyId() string {
	if x != nil {
		return x.CompanyId
	}
	return ""
}

func (x *GetCompanyPriceApplicationMerchandiseRequest) GetProductId() string {
	if x != nil {
		return x.ProductId
	}
	return ""
}

func (x *GetCompanyPriceApplicationMerchandiseRequest) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

// 获取企业/个人已生效价格商品结果
type GetCompanyPriceApplicationMerchandiseResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsAvaliable         bool                `protobuf:"varint,1,opt,name=is_avaliable,json=isAvaliable,proto3" json:"is_avaliable,omitempty"`
	CompanyMerchandises *CompanyMerchandise `protobuf:"bytes,2,opt,name=companyMerchandises,proto3" json:"companyMerchandises,omitempty"`
}

func (x *GetCompanyPriceApplicationMerchandiseResponse) Reset() {
	*x = GetCompanyPriceApplicationMerchandiseResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_platform_company_companymerchandise_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCompanyPriceApplicationMerchandiseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCompanyPriceApplicationMerchandiseResponse) ProtoMessage() {}

func (x *GetCompanyPriceApplicationMerchandiseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_platform_company_companymerchandise_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCompanyPriceApplicationMerchandiseResponse.ProtoReflect.Descriptor instead.
func (*GetCompanyPriceApplicationMerchandiseResponse) Descriptor() ([]byte, []int) {
	return file_protos_platform_company_companymerchandise_proto_rawDescGZIP(), []int{19}
}

func (x *GetCompanyPriceApplicationMerchandiseResponse) GetIsAvaliable() bool {
	if x != nil {
		return x.IsAvaliable
	}
	return false
}

func (x *GetCompanyPriceApplicationMerchandiseResponse) GetCompanyMerchandises() *CompanyMerchandise {
	if x != nil {
		return x.CompanyMerchandises
	}
	return nil
}

var File_protos_platform_company_companymerchandise_proto protoreflect.FileDescriptor

var file_protos_platform_company_companymerchandise_proto_rawDesc = []byte{
	0x0a, 0x30, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72,
	0x6d, 0x2f, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2f, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x79, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x64, 0x69, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x07, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x1a, 0x1b, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70,
	0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x73, 0x2f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2f, 0x70, 0x74, 0x79, 0x70, 0x65,
	0x2f, 0x70, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2d, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x73, 0x2f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6e, 0x73, 0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x84, 0x04, 0x0a, 0x1e, 0x43,
	0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x64, 0x69, 0x73,
	0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a,
	0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x61,
	0x6e, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6d,
	0x70, 0x61, 0x6e, 0x79, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61,
	0x6e, 0x64, 0x69, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x64, 0x69, 0x73, 0x65, 0x49, 0x64, 0x12, 0x36, 0x0a,
	0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x63,
	0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x4d, 0x65,
	0x72, 0x63, 0x68, 0x61, 0x6e, 0x64, 0x69, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x42, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x62,
	0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x27, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x79, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e,
	0x64, 0x69, 0x73, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79,
	0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x12, 0x1f, 0x0a, 0x04, 0x70, 0x61, 0x67,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x70, 0x74, 0x79, 0x70, 0x65, 0x2e,
	0x50, 0x61, 0x67, 0x65, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x45, 0x0a, 0x11, 0x6f, 0x75, 0x74,
	0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6e, 0x73,
	0x74, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x0f, 0x6f, 0x75, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x21, 0x0a, 0x0c, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x47, 0x0a, 0x12, 0x6f, 0x75, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0e, 0x32,
	0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x73, 0x2e, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x10, 0x6f, 0x75, 0x74, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x73, 0x12, 0x13, 0x0a, 0x05,
	0x73, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x63, 0x49,
	0x64, 0x22, 0x9b, 0x01, 0x0a, 0x1f, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x4d, 0x65, 0x72,
	0x63, 0x68, 0x61, 0x6e, 0x64, 0x69, 0x73, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4d, 0x0a, 0x13, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79,
	0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x64, 0x69, 0x73, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x43, 0x6f, 0x6d,
	0x70, 0x61, 0x6e, 0x79, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x64, 0x69, 0x73, 0x65, 0x52,
	0x13, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x64,
	0x69, 0x73, 0x65, 0x73, 0x12, 0x29, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x63, 0x74, 0x78,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x50,
	0x61, 0x67, 0x65, 0x43, 0x74, 0x78, 0x52, 0x07, 0x70, 0x61, 0x67, 0x65, 0x43, 0x74, 0x78, 0x22,
	0xd7, 0x03, 0x0a, 0x24, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x42, 0x75, 0x6e, 0x64, 0x6c,
	0x65, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x64, 0x69, 0x73, 0x65, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x6b, 0x65, 0x79, 0x77,
	0x6f, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f,
	0x72, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49,
	0x64, 0x12, 0x25, 0x0a, 0x0e, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x64, 0x69, 0x73, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6d, 0x65, 0x72, 0x63, 0x68,
	0x61, 0x6e, 0x64, 0x69, 0x73, 0x65, 0x49, 0x64, 0x12, 0x36, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x79, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e,
	0x64, 0x69, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x12, 0x42, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x62, 0x79, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x27, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x43, 0x6f, 0x6d,
	0x70, 0x61, 0x6e, 0x79, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x64, 0x69, 0x73, 0x65, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x52, 0x07, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x42, 0x79, 0x12, 0x1f, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x70, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x52,
	0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x49, 0x64, 0x12, 0x45, 0x0a, 0x11, 0x6f, 0x75, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x73, 0x2e, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0f, 0x6f, 0x75, 0x74, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x6c,
	0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x29,
	0x0a, 0x10, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x64, 0x69, 0x73, 0x65, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61,
	0x6e, 0x64, 0x69, 0x73, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xa1, 0x01, 0x0a, 0x25, 0x43, 0x6f,
	0x6d, 0x70, 0x61, 0x6e, 0x79, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x4d, 0x65, 0x72, 0x63, 0x68,
	0x61, 0x6e, 0x64, 0x69, 0x73, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x4d, 0x0a, 0x13, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x4d, 0x65,
	0x72, 0x63, 0x68, 0x61, 0x6e, 0x64, 0x69, 0x73, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1b, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x61,
	0x6e, 0x79, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x64, 0x69, 0x73, 0x65, 0x52, 0x13, 0x63,
	0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x64, 0x69, 0x73,
	0x65, 0x73, 0x12, 0x29, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x63, 0x74, 0x78, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x50, 0x61, 0x67,
	0x65, 0x43, 0x74, 0x78, 0x52, 0x07, 0x70, 0x61, 0x67, 0x65, 0x43, 0x74, 0x78, 0x22, 0x6e, 0x0a,
	0x26, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x49, 0x73, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x4d,
	0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x64, 0x69, 0x73, 0x65, 0x41, 0x63, 0x69, 0x74, 0x76, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x61,
	0x6e, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6d,
	0x70, 0x61, 0x6e, 0x79, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61,
	0x6e, 0x64, 0x69, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x64, 0x69, 0x73, 0x65, 0x49, 0x64, 0x22, 0x63, 0x0a,
	0x27, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x49, 0x73, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x4d,
	0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x64, 0x69, 0x73, 0x65, 0x41, 0x63, 0x69, 0x74, 0x76, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x41,
	0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x70, 0x72, 0x69, 0x63,
	0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x50, 0x72, 0x69, 0x63,
	0x65, 0x64, 0x22, 0xcb, 0x01, 0x0a, 0x21, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x79, 0x50, 0x72, 0x69, 0x63, 0x65, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x64, 0x69, 0x73,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x70,
	0x61, 0x6e, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f,
	0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x45, 0x0a, 0x11, 0x6f, 0x75, 0x74, 0x5f, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x73, 0x2e,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0f, 0x6f, 0x75,
	0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x21, 0x0a,
	0x0c, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x22, 0x73, 0x0a, 0x22, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x50, 0x72,
	0x69, 0x63, 0x65, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x64, 0x69, 0x73, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4d, 0x0a, 0x13, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x79, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x64, 0x69, 0x73, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x43, 0x6f,
	0x6d, 0x70, 0x61, 0x6e, 0x79, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x64, 0x69, 0x73, 0x65,
	0x52, 0x13, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e,
	0x64, 0x69, 0x73, 0x65, 0x73, 0x22, 0x67, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70,
	0x61, 0x6e, 0x79, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x64, 0x69, 0x73, 0x65, 0x4c, 0x69,
	0x63, 0x65, 0x6e, 0x73, 0x65, 0x52, 0x65, 0x71, 0x12, 0x25, 0x0a, 0x0e, 0x6d, 0x65, 0x72, 0x63,
	0x68, 0x61, 0x6e, 0x64, 0x69, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x64, 0x69, 0x73, 0x65, 0x49, 0x64, 0x12,
	0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x64, 0x22, 0xd7,
	0x01, 0x0a, 0x20, 0x53, 0x61, 0x76, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x4d, 0x65,
	0x72, 0x63, 0x68, 0x61, 0x6e, 0x64, 0x69, 0x73, 0x65, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65,
	0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79,
	0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x64, 0x69, 0x73,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6d, 0x65, 0x72, 0x63,
	0x68, 0x61, 0x6e, 0x64, 0x69, 0x73, 0x65, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0e, 0x61, 0x70, 0x70,
	0x5f, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x61, 0x70, 0x70, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x49, 0x64, 0x12,
	0x18, 0x0a, 0x07, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x22, 0xe7, 0x02, 0x0a, 0x19, 0x43, 0x6f, 0x6d,
	0x70, 0x61, 0x6e, 0x79, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x64, 0x69, 0x73, 0x65, 0x4c,
	0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70,
	0x61, 0x6e, 0x79, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e,
	0x64, 0x69, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6d,
	0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x64, 0x69, 0x73, 0x65, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0e,
	0x61, 0x70, 0x70, 0x5f, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x70, 0x70, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65,
	0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x12, 0x1b, 0x0a, 0x09,
	0x69, 0x73, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x69, 0x73, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x3b, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x3b, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x22, 0x83, 0x01, 0x0a, 0x1c, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x79, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x64, 0x69, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79,
	0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x64, 0x69, 0x73,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6d, 0x65, 0x72, 0x63,
	0x68, 0x61, 0x6e, 0x64, 0x69, 0x73, 0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x69, 0x64, 0x22, 0x1f, 0x0a, 0x1d, 0x41, 0x64, 0x64, 0x43,
	0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x64, 0x69, 0x73,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x88, 0x01, 0x0a, 0x21, 0x42, 0x61,
	0x74, 0x63, 0x68, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x4d, 0x65, 0x72,
	0x63, 0x68, 0x61, 0x6e, 0x64, 0x69, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x64, 0x12, 0x25,
	0x0a, 0x0e, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x64, 0x69, 0x73, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0d, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x64,
	0x69, 0x73, 0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f,
	0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x55, 0x69, 0x64, 0x22, 0x24, 0x0a, 0x22, 0x42, 0x61, 0x74, 0x63, 0x68, 0x41, 0x64, 0x64,
	0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x64, 0x69,
	0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x4e, 0x0a, 0x24, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x4d, 0x65, 0x72, 0x63, 0x68,
	0x61, 0x6e, 0x64, 0x69, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x03, 0x69, 0x64, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x22, 0x27, 0x0a, 0x25, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x4d, 0x65, 0x72, 0x63, 0x68,
	0x61, 0x6e, 0x64, 0x69, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0xa4, 0x04, 0x0a, 0x12, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x4d,
	0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x64, 0x69, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f,
	0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6d,
	0x70, 0x61, 0x6e, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0e,
	0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x64, 0x69, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x64, 0x69, 0x73,
	0x65, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x10, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x64, 0x69,
	0x73, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x6d,
	0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x64, 0x69, 0x73, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2a,
	0x0a, 0x11, 0x6f, 0x75, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x6f, 0x75, 0x74, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x6f, 0x75,
	0x74, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x6f, 0x75, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65,
	0x5f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6c,
	0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x75, 0x69, 0x64,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x69,
	0x64, 0x12, 0x3b, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x3b,
	0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x22, 0x83, 0x01, 0x0a, 0x2c, 0x47,
	0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x50, 0x72, 0x69, 0x63, 0x65, 0x41, 0x70,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e,
	0x64, 0x69, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63,
	0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x61, 0x70, 0x70,
	0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64,
	0x22, 0xa1, 0x01, 0x0a, 0x2d, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x50,
	0x72, 0x69, 0x63, 0x65, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d,
	0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x64, 0x69, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x73, 0x5f, 0x61, 0x76, 0x61, 0x6c, 0x69, 0x61, 0x62,
	0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x73, 0x41, 0x76, 0x61, 0x6c,
	0x69, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x4d, 0x0a, 0x13, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79,
	0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x64, 0x69, 0x73, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x43, 0x6f, 0x6d,
	0x70, 0x61, 0x6e, 0x79, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x64, 0x69, 0x73, 0x65, 0x52,
	0x13, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x64,
	0x69, 0x73, 0x65, 0x73, 0x2a, 0x51, 0x0a, 0x17, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x4d,
	0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x64, 0x69, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12,
	0x11, 0x0a, 0x0d, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e,
	0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x4f, 0x4e, 0x4c, 0x49,
	0x4e, 0x45, 0x10, 0x01, 0x12, 0x11, 0x0a, 0x0d, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x4f, 0x46,
	0x46, 0x4c, 0x49, 0x4e, 0x45, 0x10, 0x02, 0x2a, 0x79, 0x0a, 0x1e, 0x43, 0x6f, 0x6d, 0x70, 0x61,
	0x6e, 0x79, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x64, 0x69, 0x73, 0x65, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x12, 0x1e, 0x0a, 0x1a, 0x4f, 0x52, 0x44,
	0x45, 0x52, 0x42, 0x59, 0x5f, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x54, 0x49, 0x4d, 0x45, 0x5f,
	0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x1b, 0x0a, 0x17, 0x4f, 0x52, 0x44,
	0x45, 0x52, 0x42, 0x59, 0x5f, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x54, 0x49, 0x4d, 0x45, 0x5f,
	0x44, 0x45, 0x53, 0x43, 0x10, 0x01, 0x12, 0x1a, 0x0a, 0x16, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x42,
	0x59, 0x5f, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x54, 0x49, 0x4d, 0x45, 0x5f, 0x41, 0x53, 0x43,
	0x10, 0x02, 0x32, 0xde, 0x08, 0x0a, 0x19, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x4d, 0x65,
	0x72, 0x63, 0x68, 0x61, 0x6e, 0x64, 0x69, 0x73, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x6e, 0x0a, 0x17, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x4d, 0x65, 0x72, 0x63, 0x68,
	0x61, 0x6e, 0x64, 0x69, 0x73, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x27, 0x2e, 0x63, 0x6f,
	0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x4d, 0x65, 0x72,
	0x63, 0x68, 0x61, 0x6e, 0x64, 0x69, 0x73, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x43,
	0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x64, 0x69, 0x73,
	0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x80, 0x01, 0x0a, 0x1d, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x42, 0x75, 0x6e, 0x64,
	0x6c, 0x65, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x64, 0x69, 0x73, 0x65, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x12, 0x2d, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x43, 0x6f, 0x6d,
	0x70, 0x61, 0x6e, 0x79, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61,
	0x6e, 0x64, 0x69, 0x73, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2e, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x43, 0x6f, 0x6d, 0x70,
	0x61, 0x6e, 0x79, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e,
	0x64, 0x69, 0x73, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x68, 0x0a, 0x15, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x79, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x64, 0x69, 0x73, 0x65, 0x12, 0x25, 0x2e, 0x63,
	0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x79, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x64, 0x69, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x41, 0x64,
	0x64, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x64,
	0x69, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x77, 0x0a,
	0x1a, 0x42, 0x61, 0x74, 0x63, 0x68, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79,
	0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x64, 0x69, 0x73, 0x65, 0x12, 0x2a, 0x2e, 0x63, 0x6f,
	0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x41, 0x64, 0x64, 0x43, 0x6f,
	0x6d, 0x70, 0x61, 0x6e, 0x79, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x64, 0x69, 0x73, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x79, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x79, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x64, 0x69, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x80, 0x01, 0x0a, 0x1d, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x64,
	0x69, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x2d, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61,
	0x6e, 0x79, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79,
	0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x64, 0x69, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x79, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x4d,
	0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x64, 0x69, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x77, 0x0a, 0x1a, 0x47, 0x65, 0x74,
	0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x50, 0x72, 0x69, 0x63, 0x65, 0x4d, 0x65, 0x72, 0x63,
	0x68, 0x61, 0x6e, 0x64, 0x69, 0x73, 0x65, 0x12, 0x2a, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x79, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x50, 0x72, 0x69, 0x63,
	0x65, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x64, 0x69, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x47, 0x65,
	0x74, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x50, 0x72, 0x69, 0x63, 0x65, 0x4d, 0x65, 0x72,
	0x63, 0x68, 0x61, 0x6e, 0x64, 0x69, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x6e, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79,
	0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x64, 0x69, 0x73, 0x65, 0x4c, 0x69, 0x63, 0x65, 0x6e,
	0x73, 0x65, 0x12, 0x28, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x47, 0x65, 0x74,
	0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x64, 0x69,
	0x73, 0x65, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x22, 0x2e, 0x63,
	0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x4d, 0x65,
	0x72, 0x63, 0x68, 0x61, 0x6e, 0x64, 0x69, 0x73, 0x65, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x64, 0x0a, 0x1d, 0x53, 0x61, 0x76, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x79, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x64, 0x69, 0x73, 0x65, 0x4c, 0x69, 0x63, 0x65,
	0x6e, 0x73, 0x65, 0x12, 0x29, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x53, 0x61,
	0x76, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e,
	0x64, 0x69, 0x73, 0x65, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x98, 0x01, 0x0a, 0x25, 0x47, 0x65, 0x74,
	0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x50, 0x72, 0x69, 0x63, 0x65, 0x41, 0x70, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x64, 0x69,
	0x73, 0x65, 0x12, 0x35, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x47, 0x65, 0x74,
	0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x50, 0x72, 0x69, 0x63, 0x65, 0x41, 0x70, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x64, 0x69,
	0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x36, 0x2e, 0x63, 0x6f, 0x6d, 0x70,
	0x61, 0x6e, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x50, 0x72,
	0x69, 0x63, 0x65, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65,
	0x72, 0x63, 0x68, 0x61, 0x6e, 0x64, 0x69, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x42, 0x2d, 0x5a, 0x2b, 0x67, 0x69, 0x74, 0x2e, 0x79, 0x75, 0x61, 0x6e, 0x73,
	0x75, 0x61, 0x6e, 0x2e, 0x63, 0x6e, 0x2f, 0x73, 0x73, 0x6f, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x73, 0x2f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2f, 0x63, 0x6f, 0x6d, 0x70, 0x61,
	0x6e, 0x79, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_protos_platform_company_companymerchandise_proto_rawDescOnce sync.Once
	file_protos_platform_company_companymerchandise_proto_rawDescData = file_protos_platform_company_companymerchandise_proto_rawDesc
)

func file_protos_platform_company_companymerchandise_proto_rawDescGZIP() []byte {
	file_protos_platform_company_companymerchandise_proto_rawDescOnce.Do(func() {
		file_protos_platform_company_companymerchandise_proto_rawDescData = protoimpl.X.CompressGZIP(file_protos_platform_company_companymerchandise_proto_rawDescData)
	})
	return file_protos_platform_company_companymerchandise_proto_rawDescData
}

var file_protos_platform_company_companymerchandise_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_protos_platform_company_companymerchandise_proto_msgTypes = make([]protoimpl.MessageInfo, 20)
var file_protos_platform_company_companymerchandise_proto_goTypes = []interface{}{
	(CompanyMerchandiseState)(0),                          // 0: company.CompanyMerchandiseState
	(CompanyMerchandiseQueryOrderBy)(0),                   // 1: company.CompanyMerchandiseQueryOrderBy
	(*CompanyMerchandiseQueryRequest)(nil),                // 2: company.CompanyMerchandiseQueryRequest
	(*CompanyMerchandiseQueryResponse)(nil),               // 3: company.CompanyMerchandiseQueryResponse
	(*CompanyBundleMerchandiseQueryRequest)(nil),          // 4: company.CompanyBundleMerchandiseQueryRequest
	(*CompanyBundleMerchandiseQueryResponse)(nil),         // 5: company.CompanyBundleMerchandiseQueryResponse
	(*CheckIsCompanyMerchandiseAcitveRequest)(nil),        // 6: company.CheckIsCompanyMerchandiseAcitveRequest
	(*CheckIsCompanyMerchandiseAcitveResponse)(nil),       // 7: company.CheckIsCompanyMerchandiseAcitveResponse
	(*GetCompanyPriceMerchandiseRequest)(nil),             // 8: company.GetCompanyPriceMerchandiseRequest
	(*GetCompanyPriceMerchandiseResponse)(nil),            // 9: company.GetCompanyPriceMerchandiseResponse
	(*GetCompanyMerchandiseLicenseReq)(nil),               // 10: company.GetCompanyMerchandiseLicenseReq
	(*SaveCompanyMerchandiseLicenseReq)(nil),              // 11: company.SaveCompanyMerchandiseLicenseReq
	(*CompanyMerchandiseLicense)(nil),                     // 12: company.CompanyMerchandiseLicense
	(*AddCompanyMerchandiseRequest)(nil),                  // 13: company.AddCompanyMerchandiseRequest
	(*AddCompanyMerchandiseResponse)(nil),                 // 14: company.AddCompanyMerchandiseResponse
	(*BatchAddCompanyMerchandiseRequest)(nil),             // 15: company.BatchAddCompanyMerchandiseRequest
	(*BatchAddCompanyMerchandiseResponse)(nil),            // 16: company.BatchAddCompanyMerchandiseResponse
	(*UpdateCompanyMerchandiseStateRequest)(nil),          // 17: company.UpdateCompanyMerchandiseStateRequest
	(*UpdateCompanyMerchandiseStateResponse)(nil),         // 18: company.UpdateCompanyMerchandiseStateResponse
	(*CompanyMerchandise)(nil),                            // 19: company.CompanyMerchandise
	(*GetCompanyPriceApplicationMerchandiseRequest)(nil),  // 20: company.GetCompanyPriceApplicationMerchandiseRequest
	(*GetCompanyPriceApplicationMerchandiseResponse)(nil), // 21: company.GetCompanyPriceApplicationMerchandiseResponse
	(*ptype.Page)(nil),                                    // 22: ptype.Page
	(protoconsts.ResourceType)(0),                         // 23: protoconsts.ResourceType
	(*ptype.PageCtx)(nil),                                 // 24: ptype.PageCtx
	(*timestamppb.Timestamp)(nil),                         // 25: google.protobuf.Timestamp
	(*emptypb.Empty)(nil),                                 // 26: google.protobuf.Empty
}
var file_protos_platform_company_companymerchandise_proto_depIdxs = []int32{
	0,  // 0: company.CompanyMerchandiseQueryRequest.state:type_name -> company.CompanyMerchandiseState
	1,  // 1: company.CompanyMerchandiseQueryRequest.order_by:type_name -> company.CompanyMerchandiseQueryOrderBy
	22, // 2: company.CompanyMerchandiseQueryRequest.page:type_name -> ptype.Page
	23, // 3: company.CompanyMerchandiseQueryRequest.out_resource_type:type_name -> protoconsts.ResourceType
	23, // 4: company.CompanyMerchandiseQueryRequest.out_resource_types:type_name -> protoconsts.ResourceType
	19, // 5: company.CompanyMerchandiseQueryResponse.companyMerchandises:type_name -> company.CompanyMerchandise
	24, // 6: company.CompanyMerchandiseQueryResponse.page_ctx:type_name -> ptype.PageCtx
	0,  // 7: company.CompanyBundleMerchandiseQueryRequest.state:type_name -> company.CompanyMerchandiseState
	1,  // 8: company.CompanyBundleMerchandiseQueryRequest.order_by:type_name -> company.CompanyMerchandiseQueryOrderBy
	22, // 9: company.CompanyBundleMerchandiseQueryRequest.page:type_name -> ptype.Page
	23, // 10: company.CompanyBundleMerchandiseQueryRequest.out_resource_type:type_name -> protoconsts.ResourceType
	19, // 11: company.CompanyBundleMerchandiseQueryResponse.companyMerchandises:type_name -> company.CompanyMerchandise
	24, // 12: company.CompanyBundleMerchandiseQueryResponse.page_ctx:type_name -> ptype.PageCtx
	23, // 13: company.GetCompanyPriceMerchandiseRequest.out_resource_type:type_name -> protoconsts.ResourceType
	19, // 14: company.GetCompanyPriceMerchandiseResponse.companyMerchandises:type_name -> company.CompanyMerchandise
	25, // 15: company.CompanyMerchandiseLicense.create_time:type_name -> google.protobuf.Timestamp
	25, // 16: company.CompanyMerchandiseLicense.update_time:type_name -> google.protobuf.Timestamp
	25, // 17: company.CompanyMerchandise.create_time:type_name -> google.protobuf.Timestamp
	25, // 18: company.CompanyMerchandise.update_time:type_name -> google.protobuf.Timestamp
	19, // 19: company.GetCompanyPriceApplicationMerchandiseResponse.companyMerchandises:type_name -> company.CompanyMerchandise
	2,  // 20: company.CompanyMerchandiseService.CompanyMerchandiseQuery:input_type -> company.CompanyMerchandiseQueryRequest
	4,  // 21: company.CompanyMerchandiseService.CompanyBundleMerchandiseQuery:input_type -> company.CompanyBundleMerchandiseQueryRequest
	13, // 22: company.CompanyMerchandiseService.AddCompanyMerchandise:input_type -> company.AddCompanyMerchandiseRequest
	15, // 23: company.CompanyMerchandiseService.BatchAddCompanyMerchandise:input_type -> company.BatchAddCompanyMerchandiseRequest
	17, // 24: company.CompanyMerchandiseService.UpdateCompanyMerchandiseState:input_type -> company.UpdateCompanyMerchandiseStateRequest
	8,  // 25: company.CompanyMerchandiseService.GetCompanyPriceMerchandise:input_type -> company.GetCompanyPriceMerchandiseRequest
	10, // 26: company.CompanyMerchandiseService.GetCompanyMerchandiseLicense:input_type -> company.GetCompanyMerchandiseLicenseReq
	11, // 27: company.CompanyMerchandiseService.SaveCompanyMerchandiseLicense:input_type -> company.SaveCompanyMerchandiseLicenseReq
	20, // 28: company.CompanyMerchandiseService.GetCompanyPriceApplicationMerchandise:input_type -> company.GetCompanyPriceApplicationMerchandiseRequest
	3,  // 29: company.CompanyMerchandiseService.CompanyMerchandiseQuery:output_type -> company.CompanyMerchandiseQueryResponse
	5,  // 30: company.CompanyMerchandiseService.CompanyBundleMerchandiseQuery:output_type -> company.CompanyBundleMerchandiseQueryResponse
	14, // 31: company.CompanyMerchandiseService.AddCompanyMerchandise:output_type -> company.AddCompanyMerchandiseResponse
	16, // 32: company.CompanyMerchandiseService.BatchAddCompanyMerchandise:output_type -> company.BatchAddCompanyMerchandiseResponse
	18, // 33: company.CompanyMerchandiseService.UpdateCompanyMerchandiseState:output_type -> company.UpdateCompanyMerchandiseStateResponse
	9,  // 34: company.CompanyMerchandiseService.GetCompanyPriceMerchandise:output_type -> company.GetCompanyPriceMerchandiseResponse
	12, // 35: company.CompanyMerchandiseService.GetCompanyMerchandiseLicense:output_type -> company.CompanyMerchandiseLicense
	26, // 36: company.CompanyMerchandiseService.SaveCompanyMerchandiseLicense:output_type -> google.protobuf.Empty
	21, // 37: company.CompanyMerchandiseService.GetCompanyPriceApplicationMerchandise:output_type -> company.GetCompanyPriceApplicationMerchandiseResponse
	29, // [29:38] is the sub-list for method output_type
	20, // [20:29] is the sub-list for method input_type
	20, // [20:20] is the sub-list for extension type_name
	20, // [20:20] is the sub-list for extension extendee
	0,  // [0:20] is the sub-list for field type_name
}

func init() { file_protos_platform_company_companymerchandise_proto_init() }
func file_protos_platform_company_companymerchandise_proto_init() {
	if File_protos_platform_company_companymerchandise_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_protos_platform_company_companymerchandise_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CompanyMerchandiseQueryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_platform_company_companymerchandise_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CompanyMerchandiseQueryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_platform_company_companymerchandise_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CompanyBundleMerchandiseQueryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_platform_company_companymerchandise_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CompanyBundleMerchandiseQueryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_platform_company_companymerchandise_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckIsCompanyMerchandiseAcitveRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_platform_company_companymerchandise_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckIsCompanyMerchandiseAcitveResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_platform_company_companymerchandise_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCompanyPriceMerchandiseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_platform_company_companymerchandise_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCompanyPriceMerchandiseResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_platform_company_companymerchandise_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCompanyMerchandiseLicenseReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_platform_company_companymerchandise_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SaveCompanyMerchandiseLicenseReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_platform_company_companymerchandise_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CompanyMerchandiseLicense); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_platform_company_companymerchandise_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddCompanyMerchandiseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_platform_company_companymerchandise_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddCompanyMerchandiseResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_platform_company_companymerchandise_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchAddCompanyMerchandiseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_platform_company_companymerchandise_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchAddCompanyMerchandiseResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_platform_company_companymerchandise_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCompanyMerchandiseStateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_platform_company_companymerchandise_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCompanyMerchandiseStateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_platform_company_companymerchandise_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CompanyMerchandise); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_platform_company_companymerchandise_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCompanyPriceApplicationMerchandiseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_platform_company_companymerchandise_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCompanyPriceApplicationMerchandiseResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_protos_platform_company_companymerchandise_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   20,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_protos_platform_company_companymerchandise_proto_goTypes,
		DependencyIndexes: file_protos_platform_company_companymerchandise_proto_depIdxs,
		EnumInfos:         file_protos_platform_company_companymerchandise_proto_enumTypes,
		MessageInfos:      file_protos_platform_company_companymerchandise_proto_msgTypes,
	}.Build()
	File_protos_platform_company_companymerchandise_proto = out.File
	file_protos_platform_company_companymerchandise_proto_rawDesc = nil
	file_protos_platform_company_companymerchandise_proto_goTypes = nil
	file_protos_platform_company_companymerchandise_proto_depIdxs = nil
}
