// Code generated by MockGen. DO NOT EDIT.
// Source: yuansuan.cn/project-root/pkg/common/idgen/snowflake (interfaces: IDGen)

// Package snowflake is a generated GoMock package.
package snowflake

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockIDGen is a mock of IDGen interface.
type MockIDGen struct {
	ctrl     *gomock.Controller
	recorder *MockIDGenMockRecorder
}

// MockIDGenMockRecorder is the mock recorder for MockIDGen.
type MockIDGenMockRecorder struct {
	mock *MockIDGen
}

// NewMockIDGen creates a new mock instance.
func NewMockIDGen(ctrl *gomock.Controller) *MockIDGen {
	mock := &MockIDGen{ctrl: ctrl}
	mock.recorder = &MockIDGenMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIDGen) EXPECT() *MockIDGenMockRecorder {
	return m.recorder
}

// GenID mocks base method.
func (m *MockIDGen) GenID(arg0 context.Context) (ID, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GenID", arg0)
	ret0, _ := ret[0].(ID)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GenID indicates an expected call of GenID.
func (mr *MockIDGenMockRecorder) GenID(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GenID", reflect.TypeOf((*MockIDGen)(nil).GenID), arg0)
}
