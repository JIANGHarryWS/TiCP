// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.21.12
// source: proto/license/license.proto

package license

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 发布状态
type Status int32

const (
	Status_UNKNOWNSTATUS Status = 0
	Status_PUBLISHED     Status = 1
	Status_UNPUBLISHED   Status = 2
)

// Enum value maps for Status.
var (
	Status_name = map[int32]string{
		0: "UNKNOWNSTATUS",
		1: "PUBLISHED",
		2: "UNPUBLISHED",
	}
	Status_value = map[string]int32{
		"UNKNOWNSTATUS": 0,
		"PUBLISHED":     1,
		"UNPUBLISHED":   2,
	}
)

func (x Status) Enum() *Status {
	p := new(Status)
	*p = x
	return p
}

func (x Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Status) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_license_license_proto_enumTypes[0].Descriptor()
}

func (Status) Type() protoreflect.EnumType {
	return &file_proto_license_license_proto_enumTypes[0]
}

func (x Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Status.Descriptor instead.
func (Status) EnumDescriptor() ([]byte, []int) {
	return file_proto_license_license_proto_rawDescGZIP(), []int{0}
}

// License类型，跟供应商有关
type LicenseType int32

const (
	// 自有
	LicenseType_SELFOWNED LicenseType = 0
	// 外部
	LicenseType_OTHEROWNED LicenseType = 1
	// 寄售
	LicenseType_CONSIGNED LicenseType = 2
)

// Enum value maps for LicenseType.
var (
	LicenseType_name = map[int32]string{
		0: "SELFOWNED",
		1: "OTHEROWNED",
		2: "CONSIGNED",
	}
	LicenseType_value = map[string]int32{
		"SELFOWNED":  0,
		"OTHEROWNED": 1,
		"CONSIGNED":  2,
	}
)

func (x LicenseType) Enum() *LicenseType {
	p := new(LicenseType)
	*p = x
	return p
}

func (x LicenseType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LicenseType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_license_license_proto_enumTypes[1].Descriptor()
}

func (LicenseType) Type() protoreflect.EnumType {
	return &file_proto_license_license_proto_enumTypes[1]
}

func (x LicenseType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LicenseType.Descriptor instead.
func (LicenseType) EnumDescriptor() ([]byte, []int) {
	return file_proto_license_license_proto_rawDescGZIP(), []int{1}
}

type LicenseStatus int32

const (
	// 未配置
	LicenseStatus_UNCONFIGURED LicenseStatus = 0
	// license 不够
	LicenseStatus_NOTENOUTH LicenseStatus = 1
	// license 足够
	LicenseStatus_ENOUGH LicenseStatus = 2
	// 未发布
	LicenseStatus_UNPUBLISH LicenseStatus = 3
)

// Enum value maps for LicenseStatus.
var (
	LicenseStatus_name = map[int32]string{
		0: "UNCONFIGURED",
		1: "NOTENOUTH",
		2: "ENOUGH",
		3: "UNPUBLISH",
	}
	LicenseStatus_value = map[string]int32{
		"UNCONFIGURED": 0,
		"NOTENOUTH":    1,
		"ENOUGH":       2,
		"UNPUBLISH":    3,
	}
)

func (x LicenseStatus) Enum() *LicenseStatus {
	p := new(LicenseStatus)
	*p = x
	return p
}

func (x LicenseStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LicenseStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_license_license_proto_enumTypes[2].Descriptor()
}

func (LicenseStatus) Type() protoreflect.EnumType {
	return &file_proto_license_license_proto_enumTypes[2]
}

func (x LicenseStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LicenseStatus.Descriptor instead.
func (LicenseStatus) EnumDescriptor() ([]byte, []int) {
	return file_proto_license_license_proto_rawDescGZIP(), []int{2}
}

type ReleaseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JobId int64 `protobuf:"varint,1,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
}

func (x *ReleaseRequest) Reset() {
	*x = ReleaseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_license_license_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReleaseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReleaseRequest) ProtoMessage() {}

func (x *ReleaseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_license_license_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReleaseRequest.ProtoReflect.Descriptor instead.
func (*ReleaseRequest) Descriptor() ([]byte, []int) {
	return file_proto_license_license_proto_rawDescGZIP(), []int{0}
}

func (x *ReleaseRequest) GetJobId() int64 {
	if x != nil {
		return x.JobId
	}
	return 0
}

type UsedRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ManagerId string   `protobuf:"bytes,1,opt,name=manager_id,json=managerId,proto3" json:"manager_id,omitempty"`
	Page      *PageCtx `protobuf:"bytes,2,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *UsedRequest) Reset() {
	*x = UsedRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_license_license_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UsedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UsedRequest) ProtoMessage() {}

func (x *UsedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_license_license_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UsedRequest.ProtoReflect.Descriptor instead.
func (*UsedRequest) Descriptor() ([]byte, []int) {
	return file_proto_license_license_proto_rawDescGZIP(), []int{1}
}

func (x *UsedRequest) GetManagerId() string {
	if x != nil {
		return x.ManagerId
	}
	return ""
}

func (x *UsedRequest) GetPage() *PageCtx {
	if x != nil {
		return x.Page
	}
	return nil
}

type LicenseUsedResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result []*LicenseUsedResult `protobuf:"bytes,1,rep,name=result,proto3" json:"result,omitempty"`
	Page   *PageCtx             `protobuf:"bytes,2,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *LicenseUsedResponse) Reset() {
	*x = LicenseUsedResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_license_license_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LicenseUsedResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LicenseUsedResponse) ProtoMessage() {}

func (x *LicenseUsedResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_license_license_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LicenseUsedResponse.ProtoReflect.Descriptor instead.
func (*LicenseUsedResponse) Descriptor() ([]byte, []int) {
	return file_proto_license_license_proto_rawDescGZIP(), []int{2}
}

func (x *LicenseUsedResponse) GetResult() []*LicenseUsedResult {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *LicenseUsedResponse) GetPage() *PageCtx {
	if x != nil {
		return x.Page
	}
	return nil
}

type LicenseUsedResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// 企业名称
	CompanyName string `protobuf:"bytes,2,opt,name=company_name,json=companyName,proto3" json:"company_name,omitempty"`
	// 使用数
	Licenses int64 `protobuf:"varint,3,opt,name=licenses,proto3" json:"licenses,omitempty"`
	// 作业id
	JobId string `protobuf:"bytes,4,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	// 作业名称
	JobName string `protobuf:"bytes,5,opt,name=job_name,json=jobName,proto3" json:"job_name,omitempty"`
	// 开始时间
	CreateTime *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	// 应用id
	AppId string `protobuf:"bytes,7,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
}

func (x *LicenseUsedResult) Reset() {
	*x = LicenseUsedResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_license_license_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LicenseUsedResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LicenseUsedResult) ProtoMessage() {}

func (x *LicenseUsedResult) ProtoReflect() protoreflect.Message {
	mi := &file_proto_license_license_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LicenseUsedResult.ProtoReflect.Descriptor instead.
func (*LicenseUsedResult) Descriptor() ([]byte, []int) {
	return file_proto_license_license_proto_rawDescGZIP(), []int{3}
}

func (x *LicenseUsedResult) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *LicenseUsedResult) GetCompanyName() string {
	if x != nil {
		return x.CompanyName
	}
	return ""
}

func (x *LicenseUsedResult) GetLicenses() int64 {
	if x != nil {
		return x.Licenses
	}
	return 0
}

func (x *LicenseUsedResult) GetJobId() string {
	if x != nil {
		return x.JobId
	}
	return ""
}

func (x *LicenseUsedResult) GetJobName() string {
	if x != nil {
		return x.JobName
	}
	return ""
}

func (x *LicenseUsedResult) GetCreateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CreateTime
	}
	return nil
}

func (x *LicenseUsedResult) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

type ConsumeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info      []*ConsumeInfo `protobuf:"bytes,1,rep,name=info,proto3" json:"info,omitempty"`
	OnlyQuery bool           `protobuf:"varint,2,opt,name=only_query,json=onlyQuery,proto3" json:"only_query,omitempty"`
}

func (x *ConsumeRequest) Reset() {
	*x = ConsumeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_license_license_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConsumeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConsumeRequest) ProtoMessage() {}

func (x *ConsumeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_license_license_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConsumeRequest.ProtoReflect.Descriptor instead.
func (*ConsumeRequest) Descriptor() ([]byte, []int) {
	return file_proto_license_license_proto_rawDescGZIP(), []int{4}
}

func (x *ConsumeRequest) GetInfo() []*ConsumeInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *ConsumeRequest) GetOnlyQuery() bool {
	if x != nil {
		return x.OnlyQuery
	}
	return false
}

type ConsumeInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 作业id
	JobId int64 `protobuf:"varint,1,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	AppId int64 `protobuf:"varint,2,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	Cpus  int64 `protobuf:"varint,3,opt,name=cpus,proto3" json:"cpus,omitempty"`
	// 若指定了lic_ids,则只在lic_ids里选择license
	LicIds       []string `protobuf:"bytes,4,rep,name=lic_ids,json=licIds,proto3" json:"lic_ids,omitempty"`
	LicManagerId int64    `protobuf:"varint,5,opt,name=lic_manager_id,json=licManagerId,proto3" json:"lic_manager_id,omitempty"`
	HpcEndpoint  string   `protobuf:"bytes,6,opt,name=hpc_endpoint,json=hpcEndpoint,proto3" json:"hpc_endpoint,omitempty"`
}

func (x *ConsumeInfo) Reset() {
	*x = ConsumeInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_license_license_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConsumeInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConsumeInfo) ProtoMessage() {}

func (x *ConsumeInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_license_license_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConsumeInfo.ProtoReflect.Descriptor instead.
func (*ConsumeInfo) Descriptor() ([]byte, []int) {
	return file_proto_license_license_proto_rawDescGZIP(), []int{5}
}

func (x *ConsumeInfo) GetJobId() int64 {
	if x != nil {
		return x.JobId
	}
	return 0
}

func (x *ConsumeInfo) GetAppId() int64 {
	if x != nil {
		return x.AppId
	}
	return 0
}

func (x *ConsumeInfo) GetCpus() int64 {
	if x != nil {
		return x.Cpus
	}
	return 0
}

func (x *ConsumeInfo) GetLicIds() []string {
	if x != nil {
		return x.LicIds
	}
	return nil
}

func (x *ConsumeInfo) GetLicManagerId() int64 {
	if x != nil {
		return x.LicManagerId
	}
	return 0
}

func (x *ConsumeInfo) GetHpcEndpoint() string {
	if x != nil {
		return x.HpcEndpoint
	}
	return ""
}

type ConsumeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result []*ConsumeResult `protobuf:"bytes,1,rep,name=result,proto3" json:"result,omitempty"`
}

func (x *ConsumeResponse) Reset() {
	*x = ConsumeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_license_license_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConsumeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConsumeResponse) ProtoMessage() {}

func (x *ConsumeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_license_license_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConsumeResponse.ProtoReflect.Descriptor instead.
func (*ConsumeResponse) Descriptor() ([]byte, []int) {
	return file_proto_license_license_proto_rawDescGZIP(), []int{6}
}

func (x *ConsumeResponse) GetResult() []*ConsumeResult {
	if x != nil {
		return x.Result
	}
	return nil
}

type ConsumeResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 作业id
	JobId int64 `protobuf:"varint,1,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	// license 地址
	ServerUrl string `protobuf:"bytes,2,opt,name=server_url,json=serverUrl,proto3" json:"server_url,omitempty"`
	// license 环境变量信息类似： ANSYSLMD_LICENSE_FILE=31345@zgyslicense
	LicenseEnvs []string `protobuf:"bytes,3,rep,name=license_envs,json=licenseEnvs,proto3" json:"license_envs,omitempty"`
	// license 状态
	Status LicenseStatus `protobuf:"varint,4,opt,name=status,proto3,enum=application.LicenseStatus" json:"status,omitempty"`
}

func (x *ConsumeResult) Reset() {
	*x = ConsumeResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_license_license_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConsumeResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConsumeResult) ProtoMessage() {}

func (x *ConsumeResult) ProtoReflect() protoreflect.Message {
	mi := &file_proto_license_license_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConsumeResult.ProtoReflect.Descriptor instead.
func (*ConsumeResult) Descriptor() ([]byte, []int) {
	return file_proto_license_license_proto_rawDescGZIP(), []int{7}
}

func (x *ConsumeResult) GetJobId() int64 {
	if x != nil {
		return x.JobId
	}
	return 0
}

func (x *ConsumeResult) GetServerUrl() string {
	if x != nil {
		return x.ServerUrl
	}
	return ""
}

func (x *ConsumeResult) GetLicenseEnvs() []string {
	if x != nil {
		return x.LicenseEnvs
	}
	return nil
}

func (x *ConsumeResult) GetStatus() LicenseStatus {
	if x != nil {
		return x.Status
	}
	return LicenseStatus_UNCONFIGURED
}

type Page struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: `validate:"gte=1"`
	Index int64 `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
	// @inject_tag: `validate:"gt=0,max=1000"`
	Size int64 `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
}

func (x *Page) Reset() {
	*x = Page{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_license_license_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Page) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Page) ProtoMessage() {}

func (x *Page) ProtoReflect() protoreflect.Message {
	mi := &file_proto_license_license_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Page.ProtoReflect.Descriptor instead.
func (*Page) Descriptor() ([]byte, []int) {
	return file_proto_license_license_proto_rawDescGZIP(), []int{8}
}

func (x *Page) GetIndex() int64 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *Page) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

type PageCtx struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Index int64 `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
	Size  int64 `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	// total record number, not page number
	Total int64 `protobuf:"varint,3,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *PageCtx) Reset() {
	*x = PageCtx{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_license_license_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PageCtx) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PageCtx) ProtoMessage() {}

func (x *PageCtx) ProtoReflect() protoreflect.Message {
	mi := &file_proto_license_license_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PageCtx.ProtoReflect.Descriptor instead.
func (*PageCtx) Descriptor() ([]byte, []int) {
	return file_proto_license_license_proto_rawDescGZIP(), []int{9}
}

func (x *PageCtx) GetIndex() int64 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *PageCtx) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *PageCtx) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

var File_proto_license_license_proto protoreflect.FileDescriptor

var file_proto_license_license_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x2f,
	0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x61,
	0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74,
	0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x27, 0x0a, 0x0e, 0x52, 0x65, 0x6c, 0x65,
	0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x6a, 0x6f,
	0x62, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6a, 0x6f, 0x62, 0x49,
	0x64, 0x22, 0x56, 0x0a, 0x0b, 0x55, 0x73, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x28, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x50, 0x61, 0x67, 0x65,
	0x43, 0x74, 0x78, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x22, 0x77, 0x0a, 0x13, 0x4c, 0x69, 0x63,
	0x65, 0x6e, 0x73, 0x65, 0x55, 0x73, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x36, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1e, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4c,
	0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x55, 0x73, 0x65, 0x64, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x28, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x43, 0x74, 0x78, 0x52, 0x04, 0x70, 0x61,
	0x67, 0x65, 0x22, 0xe8, 0x01, 0x0a, 0x11, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x55, 0x73,
	0x65, 0x64, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x70,
	0x61, 0x6e, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c,
	0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6c,
	0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x73, 0x12, 0x15, 0x0a, 0x06, 0x6a, 0x6f, 0x62, 0x5f, 0x69,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6a, 0x6f, 0x62, 0x49, 0x64, 0x12, 0x19,
	0x0a, 0x08, 0x6a, 0x6f, 0x62, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6a, 0x6f, 0x62, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x3b, 0x0a, 0x0b, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x22, 0x5d, 0x0a,
	0x0e, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x2c, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6e, 0x73,
	0x75, 0x6d, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x1d, 0x0a,
	0x0a, 0x6f, 0x6e, 0x6c, 0x79, 0x5f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x09, 0x6f, 0x6e, 0x6c, 0x79, 0x51, 0x75, 0x65, 0x72, 0x79, 0x22, 0xb1, 0x01, 0x0a,
	0x0b, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x15, 0x0a, 0x06,
	0x6a, 0x6f, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6a, 0x6f,
	0x62, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x70,
	0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x70, 0x75, 0x73, 0x12, 0x17,
	0x0a, 0x07, 0x6c, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x06, 0x6c, 0x69, 0x63, 0x49, 0x64, 0x73, 0x12, 0x24, 0x0a, 0x0e, 0x6c, 0x69, 0x63, 0x5f, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0c, 0x6c, 0x69, 0x63, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x49, 0x64, 0x12, 0x21, 0x0a,
	0x0c, 0x68, 0x70, 0x63, 0x5f, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x68, 0x70, 0x63, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x22, 0x45, 0x0a, 0x0f, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52,
	0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x9c, 0x01, 0x0a, 0x0d, 0x43, 0x6f, 0x6e, 0x73,
	0x75, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x6a, 0x6f, 0x62,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6a, 0x6f, 0x62, 0x49, 0x64,
	0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x55, 0x72, 0x6c, 0x12,
	0x21, 0x0a, 0x0c, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x5f, 0x65, 0x6e, 0x76, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x45, 0x6e,
	0x76, 0x73, 0x12, 0x32, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x30, 0x0a, 0x04, 0x50, 0x61, 0x67, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x69,
	0x6e, 0x64, 0x65, 0x78, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x22, 0x49, 0x0a, 0x07, 0x50, 0x61, 0x67, 0x65,
	0x43, 0x74, 0x78, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x2a, 0x3b, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x11, 0x0a,
	0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x10, 0x00,
	0x12, 0x0d, 0x0a, 0x09, 0x50, 0x55, 0x42, 0x4c, 0x49, 0x53, 0x48, 0x45, 0x44, 0x10, 0x01, 0x12,
	0x0f, 0x0a, 0x0b, 0x55, 0x4e, 0x50, 0x55, 0x42, 0x4c, 0x49, 0x53, 0x48, 0x45, 0x44, 0x10, 0x02,
	0x2a, 0x3b, 0x0a, 0x0b, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x0d, 0x0a, 0x09, 0x53, 0x45, 0x4c, 0x46, 0x4f, 0x57, 0x4e, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0e,
	0x0a, 0x0a, 0x4f, 0x54, 0x48, 0x45, 0x52, 0x4f, 0x57, 0x4e, 0x45, 0x44, 0x10, 0x01, 0x12, 0x0d,
	0x0a, 0x09, 0x43, 0x4f, 0x4e, 0x53, 0x49, 0x47, 0x4e, 0x45, 0x44, 0x10, 0x02, 0x2a, 0x4b, 0x0a,
	0x0d, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x10,
	0x0a, 0x0c, 0x55, 0x4e, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x55, 0x52, 0x45, 0x44, 0x10, 0x00,
	0x12, 0x0d, 0x0a, 0x09, 0x4e, 0x4f, 0x54, 0x45, 0x4e, 0x4f, 0x55, 0x54, 0x48, 0x10, 0x01, 0x12,
	0x0a, 0x0a, 0x06, 0x45, 0x4e, 0x4f, 0x55, 0x47, 0x48, 0x10, 0x02, 0x12, 0x0d, 0x0a, 0x09, 0x55,
	0x4e, 0x50, 0x55, 0x42, 0x4c, 0x49, 0x53, 0x48, 0x10, 0x03, 0x32, 0xb0, 0x01, 0x0a, 0x15, 0x4c,
	0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x4e, 0x0a, 0x0f, 0x41, 0x63, 0x71, 0x75, 0x69, 0x72, 0x65, 0x4c,
	0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x73, 0x12, 0x1b, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x47, 0x0a, 0x0e, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x4c,
	0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x12, 0x1b, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x42, 0x30, 0x5a,
	0x2e, 0x67, 0x69, 0x74, 0x2e, 0x79, 0x75, 0x61, 0x6e, 0x73, 0x75, 0x61, 0x6e, 0x2e, 0x63, 0x6e,
	0x2f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2d, 0x72, 0x6f, 0x6f, 0x74, 0x2d, 0x61, 0x70,
	0x69, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_license_license_proto_rawDescOnce sync.Once
	file_proto_license_license_proto_rawDescData = file_proto_license_license_proto_rawDesc
)

func file_proto_license_license_proto_rawDescGZIP() []byte {
	file_proto_license_license_proto_rawDescOnce.Do(func() {
		file_proto_license_license_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_license_license_proto_rawDescData)
	})
	return file_proto_license_license_proto_rawDescData
}

var file_proto_license_license_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_proto_license_license_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_proto_license_license_proto_goTypes = []interface{}{
	(Status)(0),                   // 0: application.Status
	(LicenseType)(0),              // 1: application.LicenseType
	(LicenseStatus)(0),            // 2: application.LicenseStatus
	(*ReleaseRequest)(nil),        // 3: application.ReleaseRequest
	(*UsedRequest)(nil),           // 4: application.UsedRequest
	(*LicenseUsedResponse)(nil),   // 5: application.LicenseUsedResponse
	(*LicenseUsedResult)(nil),     // 6: application.LicenseUsedResult
	(*ConsumeRequest)(nil),        // 7: application.ConsumeRequest
	(*ConsumeInfo)(nil),           // 8: application.ConsumeInfo
	(*ConsumeResponse)(nil),       // 9: application.ConsumeResponse
	(*ConsumeResult)(nil),         // 10: application.ConsumeResult
	(*Page)(nil),                  // 11: application.Page
	(*PageCtx)(nil),               // 12: application.PageCtx
	(*timestamppb.Timestamp)(nil), // 13: google.protobuf.Timestamp
	(*emptypb.Empty)(nil),         // 14: google.protobuf.Empty
}
var file_proto_license_license_proto_depIdxs = []int32{
	12, // 0: application.UsedRequest.page:type_name -> application.PageCtx
	6,  // 1: application.LicenseUsedResponse.result:type_name -> application.LicenseUsedResult
	12, // 2: application.LicenseUsedResponse.page:type_name -> application.PageCtx
	13, // 3: application.LicenseUsedResult.create_time:type_name -> google.protobuf.Timestamp
	8,  // 4: application.ConsumeRequest.info:type_name -> application.ConsumeInfo
	10, // 5: application.ConsumeResponse.result:type_name -> application.ConsumeResult
	2,  // 6: application.ConsumeResult.status:type_name -> application.LicenseStatus
	7,  // 7: application.LicenseManagerService.AcquireLicenses:input_type -> application.ConsumeRequest
	3,  // 8: application.LicenseManagerService.ReleaseLicense:input_type -> application.ReleaseRequest
	9,  // 9: application.LicenseManagerService.AcquireLicenses:output_type -> application.ConsumeResponse
	14, // 10: application.LicenseManagerService.ReleaseLicense:output_type -> google.protobuf.Empty
	9,  // [9:11] is the sub-list for method output_type
	7,  // [7:9] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_proto_license_license_proto_init() }
func file_proto_license_license_proto_init() {
	if File_proto_license_license_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_license_license_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReleaseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_license_license_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UsedRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_license_license_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LicenseUsedResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_license_license_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LicenseUsedResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_license_license_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConsumeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_license_license_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConsumeInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_license_license_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConsumeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_license_license_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConsumeResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_license_license_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Page); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_license_license_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PageCtx); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_license_license_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_license_license_proto_goTypes,
		DependencyIndexes: file_proto_license_license_proto_depIdxs,
		EnumInfos:         file_proto_license_license_proto_enumTypes,
		MessageInfos:      file_proto_license_license_proto_msgTypes,
	}.Build()
	File_proto_license_license_proto = out.File
	file_proto_license_license_proto_rawDesc = nil
	file_proto_license_license_proto_goTypes = nil
	file_proto_license_license_proto_depIdxs = nil
}
