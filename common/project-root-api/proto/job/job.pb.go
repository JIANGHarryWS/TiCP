// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.21.12
// source: proto/job/job.proto

package job

import (
	account_bill "github.com/yuansuan/ticp/common/project-root-api/proto/account_bill"
	application "github.com/yuansuan/ticp/common/project-root-api/proto/job/application"
	ptype "github.com/yuansuan/ticp/common/project-root-api/proto/ptype"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DisplayState int32

const (
	// do not use it.
	DisplayState_DisplayState_UNKNOWN   DisplayState = 0
	DisplayState_DisplayStateInitiated  DisplayState = 1 // 准备中
	DisplayState_DisplayStateRunning    DisplayState = 2 // 运行中
	DisplayState_DisplayStateCancelling DisplayState = 3 // 取消中
	DisplayState_DisplayStateCompleted  DisplayState = 4 // 已完成
	DisplayState_DisplayStateCancelled  DisplayState = 5 // 已取消 (deprecated)
	DisplayState_DisplayStateFailed     DisplayState = 6 // 已失败 (deprecated)
	DisplayState_DisplayStatePending    DisplayState = 7 // 排队中
)

// Enum value maps for DisplayState.
var (
	DisplayState_name = map[int32]string{
		0: "DisplayState_UNKNOWN",
		1: "DisplayStateInitiated",
		2: "DisplayStateRunning",
		3: "DisplayStateCancelling",
		4: "DisplayStateCompleted",
		5: "DisplayStateCancelled",
		6: "DisplayStateFailed",
		7: "DisplayStatePending",
	}
	DisplayState_value = map[string]int32{
		"DisplayState_UNKNOWN":   0,
		"DisplayStateInitiated":  1,
		"DisplayStateRunning":    2,
		"DisplayStateCancelling": 3,
		"DisplayStateCompleted":  4,
		"DisplayStateCancelled":  5,
		"DisplayStateFailed":     6,
		"DisplayStatePending":    7,
	}
)

func (x DisplayState) Enum() *DisplayState {
	p := new(DisplayState)
	*p = x
	return p
}

func (x DisplayState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DisplayState) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_job_job_proto_enumTypes[0].Descriptor()
}

func (DisplayState) Type() protoreflect.EnumType {
	return &file_proto_job_job_proto_enumTypes[0]
}

func (x DisplayState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DisplayState.Descriptor instead.
func (DisplayState) EnumDescriptor() ([]byte, []int) {
	return file_proto_job_job_proto_rawDescGZIP(), []int{0}
}

type SubmitResult int32

const (
	SubmitResult_Success   SubmitResult = 0
	SubmitResult_Cancelled SubmitResult = 1
	SubmitResult_Failed    SubmitResult = 2
)

// Enum value maps for SubmitResult.
var (
	SubmitResult_name = map[int32]string{
		0: "Success",
		1: "Cancelled",
		2: "Failed",
	}
	SubmitResult_value = map[string]int32{
		"Success":   0,
		"Cancelled": 1,
		"Failed":    2,
	}
)

func (x SubmitResult) Enum() *SubmitResult {
	p := new(SubmitResult)
	*p = x
	return p
}

func (x SubmitResult) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SubmitResult) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_job_job_proto_enumTypes[1].Descriptor()
}

func (SubmitResult) Type() protoreflect.EnumType {
	return &file_proto_job_job_proto_enumTypes[1]
}

func (x SubmitResult) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SubmitResult.Descriptor instead.
func (SubmitResult) EnumDescriptor() ([]byte, []int) {
	return file_proto_job_job_proto_rawDescGZIP(), []int{1}
}

type Job struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            string         `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	AppId         string         `protobuf:"bytes,2,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	UserId        string         `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	ClientId      string         `protobuf:"bytes,5,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	ScId          string         `protobuf:"bytes,6,opt,name=sc_id,json=scId,proto3" json:"sc_id,omitempty"`
	Name          string         `protobuf:"bytes,7,opt,name=name,proto3" json:"name,omitempty"`
	UserParams    string         `protobuf:"bytes,8,opt,name=user_params,json=userParams,proto3" json:"user_params,omitempty"`
	ProjectId     string         `protobuf:"bytes,9,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	ResourceUsage *ResourceUsage `protobuf:"bytes,10,opt,name=resource_usage,json=resourceUsage,proto3" json:"resource_usage,omitempty"`
	State         *State         `protobuf:"bytes,11,opt,name=state,proto3" json:"state,omitempty"`
	IsDeleted     bool           `protobuf:"varint,12,opt,name=is_deleted,json=isDeleted,proto3" json:"is_deleted,omitempty"`
	UserCancel    bool           `protobuf:"varint,13,opt,name=user_cancel,json=userCancel,proto3" json:"user_cancel,omitempty"`
	IsBilled      bool           `protobuf:"varint,14,opt,name=is_billed,json=isBilled,proto3" json:"is_billed,omitempty"`
	PendReason    string         `protobuf:"bytes,15,opt,name=pend_reason,json=pendReason,proto3" json:"pend_reason,omitempty"`
	ExitReason    string         `protobuf:"bytes,16,opt,name=exit_reason,json=exitReason,proto3" json:"exit_reason,omitempty"`
	// The matched sc ids when scheduling
	MatchedScId           []string     `protobuf:"bytes,17,rep,name=matched_sc_id,json=matchedScId,proto3" json:"matched_sc_id,omitempty"`
	FileUploadBlacklist   string       `protobuf:"bytes,18,opt,name=file_upload_blacklist,json=fileUploadBlacklist,proto3" json:"file_upload_blacklist,omitempty"`
	FileDownloadBlacklist string       `protobuf:"bytes,19,opt,name=file_download_blacklist,json=fileDownloadBlacklist,proto3" json:"file_download_blacklist,omitempty"`
	Retry                 int64        `protobuf:"varint,20,opt,name=retry,proto3" json:"retry,omitempty"`
	AccountId             string       `protobuf:"bytes,21,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	AppName               string       `protobuf:"bytes,22,opt,name=app_name,json=appName,proto3" json:"app_name,omitempty"`
	DisplayState          DisplayState `protobuf:"varint,23,opt,name=display_state,json=displayState,proto3,enum=job.DisplayState" json:"display_state,omitempty"`
	SystemTerminal        bool         `protobuf:"varint,24,opt,name=system_terminal,json=systemTerminal,proto3" json:"system_terminal,omitempty"`
	SystemTerminalMessage string       `protobuf:"bytes,25,opt,name=system_terminal_message,json=systemTerminalMessage,proto3" json:"system_terminal_message,omitempty"`
	Runtime               *JobRuntime  `protobuf:"bytes,30,opt,name=runtime,proto3" json:"runtime,omitempty"`
	CompanyId             string       `protobuf:"bytes,31,opt,name=company_id,json=companyId,proto3" json:"company_id,omitempty"`
	MerchandiseId         string       `protobuf:"bytes,32,opt,name=merchandise_id,json=merchandiseId,proto3" json:"merchandise_id,omitempty"`
	JobSetId              string       `protobuf:"bytes,33,opt,name=job_set_id,json=jobSetId,proto3" json:"job_set_id,omitempty"`
	JobSetName            string       `protobuf:"bytes,34,opt,name=job_set_name,json=jobSetName,proto3" json:"job_set_name,omitempty"`
	IsTrial               bool         `protobuf:"varint,35,opt,name=is_trial,json=isTrial,proto3" json:"is_trial,omitempty"`
	DepartmentId          string       `protobuf:"bytes,36,opt,name=department_id,json=departmentId,proto3" json:"department_id,omitempty"`
	// 存储区域
	FileStorageZone string                 `protobuf:"bytes,37,opt,name=file_storage_zone,json=fileStorageZone,proto3" json:"file_storage_zone,omitempty"`
	ExitCode        string                 `protobuf:"bytes,38,opt,name=exit_code,json=exitCode,proto3" json:"exit_code,omitempty"`
	OutputDir       string                 `protobuf:"bytes,39,opt,name=output_dir,json=outputDir,proto3" json:"output_dir,omitempty"`
	Zone            string                 `protobuf:"bytes,40,opt,name=zone,proto3" json:"zone,omitempty"`
	LicenseIds      string                 `protobuf:"bytes,41,opt,name=license_ids,json=licenseIds,proto3" json:"license_ids,omitempty"`
	Solution        string                 `protobuf:"bytes,42,opt,name=solution,proto3" json:"solution,omitempty"`
	CancelingTime   *timestamppb.Timestamp `protobuf:"bytes,107,opt,name=canceling_time,json=cancelingTime,proto3" json:"canceling_time,omitempty"`
	FailingTime     *timestamppb.Timestamp `protobuf:"bytes,108,opt,name=failing_time,json=failingTime,proto3" json:"failing_time,omitempty"`
	CreateTime      *timestamppb.Timestamp `protobuf:"bytes,100,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	UpdateTime      *timestamppb.Timestamp `protobuf:"bytes,101,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
}

func (x *Job) Reset() {
	*x = Job{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_job_job_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Job) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Job) ProtoMessage() {}

func (x *Job) ProtoReflect() protoreflect.Message {
	mi := &file_proto_job_job_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Job.ProtoReflect.Descriptor instead.
func (*Job) Descriptor() ([]byte, []int) {
	return file_proto_job_job_proto_rawDescGZIP(), []int{0}
}

func (x *Job) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Job) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *Job) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *Job) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *Job) GetScId() string {
	if x != nil {
		return x.ScId
	}
	return ""
}

func (x *Job) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Job) GetUserParams() string {
	if x != nil {
		return x.UserParams
	}
	return ""
}

func (x *Job) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *Job) GetResourceUsage() *ResourceUsage {
	if x != nil {
		return x.ResourceUsage
	}
	return nil
}

func (x *Job) GetState() *State {
	if x != nil {
		return x.State
	}
	return nil
}

func (x *Job) GetIsDeleted() bool {
	if x != nil {
		return x.IsDeleted
	}
	return false
}

func (x *Job) GetUserCancel() bool {
	if x != nil {
		return x.UserCancel
	}
	return false
}

func (x *Job) GetIsBilled() bool {
	if x != nil {
		return x.IsBilled
	}
	return false
}

func (x *Job) GetPendReason() string {
	if x != nil {
		return x.PendReason
	}
	return ""
}

func (x *Job) GetExitReason() string {
	if x != nil {
		return x.ExitReason
	}
	return ""
}

func (x *Job) GetMatchedScId() []string {
	if x != nil {
		return x.MatchedScId
	}
	return nil
}

func (x *Job) GetFileUploadBlacklist() string {
	if x != nil {
		return x.FileUploadBlacklist
	}
	return ""
}

func (x *Job) GetFileDownloadBlacklist() string {
	if x != nil {
		return x.FileDownloadBlacklist
	}
	return ""
}

func (x *Job) GetRetry() int64 {
	if x != nil {
		return x.Retry
	}
	return 0
}

func (x *Job) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *Job) GetAppName() string {
	if x != nil {
		return x.AppName
	}
	return ""
}

func (x *Job) GetDisplayState() DisplayState {
	if x != nil {
		return x.DisplayState
	}
	return DisplayState_DisplayState_UNKNOWN
}

func (x *Job) GetSystemTerminal() bool {
	if x != nil {
		return x.SystemTerminal
	}
	return false
}

func (x *Job) GetSystemTerminalMessage() string {
	if x != nil {
		return x.SystemTerminalMessage
	}
	return ""
}

func (x *Job) GetRuntime() *JobRuntime {
	if x != nil {
		return x.Runtime
	}
	return nil
}

func (x *Job) GetCompanyId() string {
	if x != nil {
		return x.CompanyId
	}
	return ""
}

func (x *Job) GetMerchandiseId() string {
	if x != nil {
		return x.MerchandiseId
	}
	return ""
}

func (x *Job) GetJobSetId() string {
	if x != nil {
		return x.JobSetId
	}
	return ""
}

func (x *Job) GetJobSetName() string {
	if x != nil {
		return x.JobSetName
	}
	return ""
}

func (x *Job) GetIsTrial() bool {
	if x != nil {
		return x.IsTrial
	}
	return false
}

func (x *Job) GetDepartmentId() string {
	if x != nil {
		return x.DepartmentId
	}
	return ""
}

func (x *Job) GetFileStorageZone() string {
	if x != nil {
		return x.FileStorageZone
	}
	return ""
}

func (x *Job) GetExitCode() string {
	if x != nil {
		return x.ExitCode
	}
	return ""
}

func (x *Job) GetOutputDir() string {
	if x != nil {
		return x.OutputDir
	}
	return ""
}

func (x *Job) GetZone() string {
	if x != nil {
		return x.Zone
	}
	return ""
}

func (x *Job) GetLicenseIds() string {
	if x != nil {
		return x.LicenseIds
	}
	return ""
}

func (x *Job) GetSolution() string {
	if x != nil {
		return x.Solution
	}
	return ""
}

func (x *Job) GetCancelingTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CancelingTime
	}
	return nil
}

func (x *Job) GetFailingTime() *timestamppb.Timestamp {
	if x != nil {
		return x.FailingTime
	}
	return nil
}

func (x *Job) GetCreateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CreateTime
	}
	return nil
}

func (x *Job) GetUpdateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdateTime
	}
	return nil
}

type JobInf struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name      string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	CompanyId int64  `protobuf:"varint,3,opt,name=company_id,json=companyId,proto3" json:"company_id,omitempty"`
}

func (x *JobInf) Reset() {
	*x = JobInf{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_job_job_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobInf) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobInf) ProtoMessage() {}

func (x *JobInf) ProtoReflect() protoreflect.Message {
	mi := &file_proto_job_job_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobInf.ProtoReflect.Descriptor instead.
func (*JobInf) Descriptor() ([]byte, []int) {
	return file_proto_job_job_proto_rawDescGZIP(), []int{1}
}

func (x *JobInf) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *JobInf) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *JobInf) GetCompanyId() int64 {
	if x != nil {
		return x.CompanyId
	}
	return 0
}

type JobRuntime struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               string                              `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	JobId            string                              `protobuf:"bytes,2,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	ScId             string                              `protobuf:"bytes,3,opt,name=sc_id,json=scId,proto3" json:"sc_id,omitempty"`
	WorkDir          string                              `protobuf:"bytes,4,opt,name=work_dir,json=workDir,proto3" json:"work_dir,omitempty"`
	IsClean          bool                                `protobuf:"varint,5,opt,name=is_clean,json=isClean,proto3" json:"is_clean,omitempty"`
	IsFileReady      bool                                `protobuf:"varint,6,opt,name=is_file_ready,json=isFileReady,proto3" json:"is_file_ready,omitempty"`
	SchedulerJobId   string                              `protobuf:"bytes,7,opt,name=scheduler_job_id,json=schedulerJobId,proto3" json:"scheduler_job_id,omitempty"`
	ResourceAssign   *ResourceAssign                     `protobuf:"bytes,8,opt,name=resource_assign,json=resourceAssign,proto3" json:"resource_assign,omitempty"`
	CpuTime          int64                               `protobuf:"varint,9,opt,name=cpu_time,json=cpuTime,proto3" json:"cpu_time,omitempty"`
	ScAttrs          string                              `protobuf:"bytes,10,opt,name=sc_attrs,json=scAttrs,proto3" json:"sc_attrs,omitempty"`
	SubmissionScript string                              `protobuf:"bytes,11,opt,name=submission_script,json=submissionScript,proto3" json:"submission_script,omitempty"`
	AppRuntimeId     string                              `protobuf:"bytes,12,opt,name=app_runtime_id,json=appRuntimeId,proto3" json:"app_runtime_id,omitempty"`
	BillingId        string                              `protobuf:"bytes,13,opt,name=billing_id,json=billingId,proto3" json:"billing_id,omitempty"`
	HaveResidual     bool                                `protobuf:"varint,14,opt,name=have_residual,json=haveResidual,proto3" json:"have_residual,omitempty"`
	ServerParams     *application.ServerParamsMapWrapper `protobuf:"bytes,15,opt,name=server_params,json=serverParams,proto3" json:"server_params,omitempty"`
	UploadTaskId     string                              `protobuf:"bytes,16,opt,name=upload_task_id,json=uploadTaskId,proto3" json:"upload_task_id,omitempty"`
	DownloadTaskId   string                              `protobuf:"bytes,17,opt,name=download_task_id,json=downloadTaskId,proto3" json:"download_task_id,omitempty"`
	DownloadFinished bool                                `protobuf:"varint,18,opt,name=download_finished,json=downloadFinished,proto3" json:"download_finished,omitempty"`
	IsArchived       bool                                `protobuf:"varint,19,opt,name=is_archived,json=isArchived,proto3" json:"is_archived,omitempty"`
	// The application result file filter rule
	ResultFileFilterRule string                 `protobuf:"bytes,20,opt,name=result_file_filter_rule,json=resultFileFilterRule,proto3" json:"result_file_filter_rule,omitempty"`
	UploadTime           *timestamppb.Timestamp `protobuf:"bytes,100,opt,name=upload_time,json=uploadTime,proto3" json:"upload_time,omitempty"`
	QueueTime            *timestamppb.Timestamp `protobuf:"bytes,101,opt,name=queue_time,json=queueTime,proto3" json:"queue_time,omitempty"`
	StartTime            *timestamppb.Timestamp `protobuf:"bytes,102,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime              *timestamppb.Timestamp `protobuf:"bytes,103,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	CreateTime           *timestamppb.Timestamp `protobuf:"bytes,104,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	UpdateTime           *timestamppb.Timestamp `protobuf:"bytes,105,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	DownloadTime         *timestamppb.Timestamp `protobuf:"bytes,106,opt,name=download_time,json=downloadTime,proto3" json:"download_time,omitempty"`
}

func (x *JobRuntime) Reset() {
	*x = JobRuntime{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_job_job_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobRuntime) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobRuntime) ProtoMessage() {}

func (x *JobRuntime) ProtoReflect() protoreflect.Message {
	mi := &file_proto_job_job_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobRuntime.ProtoReflect.Descriptor instead.
func (*JobRuntime) Descriptor() ([]byte, []int) {
	return file_proto_job_job_proto_rawDescGZIP(), []int{2}
}

func (x *JobRuntime) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *JobRuntime) GetJobId() string {
	if x != nil {
		return x.JobId
	}
	return ""
}

func (x *JobRuntime) GetScId() string {
	if x != nil {
		return x.ScId
	}
	return ""
}

func (x *JobRuntime) GetWorkDir() string {
	if x != nil {
		return x.WorkDir
	}
	return ""
}

func (x *JobRuntime) GetIsClean() bool {
	if x != nil {
		return x.IsClean
	}
	return false
}

func (x *JobRuntime) GetIsFileReady() bool {
	if x != nil {
		return x.IsFileReady
	}
	return false
}

func (x *JobRuntime) GetSchedulerJobId() string {
	if x != nil {
		return x.SchedulerJobId
	}
	return ""
}

func (x *JobRuntime) GetResourceAssign() *ResourceAssign {
	if x != nil {
		return x.ResourceAssign
	}
	return nil
}

func (x *JobRuntime) GetCpuTime() int64 {
	if x != nil {
		return x.CpuTime
	}
	return 0
}

func (x *JobRuntime) GetScAttrs() string {
	if x != nil {
		return x.ScAttrs
	}
	return ""
}

func (x *JobRuntime) GetSubmissionScript() string {
	if x != nil {
		return x.SubmissionScript
	}
	return ""
}

func (x *JobRuntime) GetAppRuntimeId() string {
	if x != nil {
		return x.AppRuntimeId
	}
	return ""
}

func (x *JobRuntime) GetBillingId() string {
	if x != nil {
		return x.BillingId
	}
	return ""
}

func (x *JobRuntime) GetHaveResidual() bool {
	if x != nil {
		return x.HaveResidual
	}
	return false
}

func (x *JobRuntime) GetServerParams() *application.ServerParamsMapWrapper {
	if x != nil {
		return x.ServerParams
	}
	return nil
}

func (x *JobRuntime) GetUploadTaskId() string {
	if x != nil {
		return x.UploadTaskId
	}
	return ""
}

func (x *JobRuntime) GetDownloadTaskId() string {
	if x != nil {
		return x.DownloadTaskId
	}
	return ""
}

func (x *JobRuntime) GetDownloadFinished() bool {
	if x != nil {
		return x.DownloadFinished
	}
	return false
}

func (x *JobRuntime) GetIsArchived() bool {
	if x != nil {
		return x.IsArchived
	}
	return false
}

func (x *JobRuntime) GetResultFileFilterRule() string {
	if x != nil {
		return x.ResultFileFilterRule
	}
	return ""
}

func (x *JobRuntime) GetUploadTime() *timestamppb.Timestamp {
	if x != nil {
		return x.UploadTime
	}
	return nil
}

func (x *JobRuntime) GetQueueTime() *timestamppb.Timestamp {
	if x != nil {
		return x.QueueTime
	}
	return nil
}

func (x *JobRuntime) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *JobRuntime) GetEndTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EndTime
	}
	return nil
}

func (x *JobRuntime) GetCreateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CreateTime
	}
	return nil
}

func (x *JobRuntime) GetUpdateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdateTime
	}
	return nil
}

func (x *JobRuntime) GetDownloadTime() *timestamppb.Timestamp {
	if x != nil {
		return x.DownloadTime
	}
	return nil
}

type State struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State    int64 `protobuf:"varint,1,opt,name=state,proto3" json:"state,omitempty"`
	SubState int64 `protobuf:"varint,2,opt,name=sub_state,json=subState,proto3" json:"sub_state,omitempty"`
}

func (x *State) Reset() {
	*x = State{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_job_job_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *State) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*State) ProtoMessage() {}

func (x *State) ProtoReflect() protoreflect.Message {
	mi := &file_proto_job_job_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use State.ProtoReflect.Descriptor instead.
func (*State) Descriptor() ([]byte, []int) {
	return file_proto_job_job_proto_rawDescGZIP(), []int{3}
}

func (x *State) GetState() int64 {
	if x != nil {
		return x.State
	}
	return 0
}

func (x *State) GetSubState() int64 {
	if x != nil {
		return x.SubState
	}
	return 0
}

type ResourceUsage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cpus  int64 `protobuf:"varint,1,opt,name=cpus,proto3" json:"cpus,omitempty"`
	Nodes int64 `protobuf:"varint,2,opt,name=nodes,proto3" json:"nodes,omitempty"`
}

func (x *ResourceUsage) Reset() {
	*x = ResourceUsage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_job_job_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResourceUsage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceUsage) ProtoMessage() {}

func (x *ResourceUsage) ProtoReflect() protoreflect.Message {
	mi := &file_proto_job_job_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceUsage.ProtoReflect.Descriptor instead.
func (*ResourceUsage) Descriptor() ([]byte, []int) {
	return file_proto_job_job_proto_rawDescGZIP(), []int{4}
}

func (x *ResourceUsage) GetCpus() int64 {
	if x != nil {
		return x.Cpus
	}
	return 0
}

func (x *ResourceUsage) GetNodes() int64 {
	if x != nil {
		return x.Nodes
	}
	return 0
}

type ResourceAssign struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cpus  int64 `protobuf:"varint,1,opt,name=cpus,proto3" json:"cpus,omitempty"`
	Nodes int64 `protobuf:"varint,2,opt,name=nodes,proto3" json:"nodes,omitempty"`
}

func (x *ResourceAssign) Reset() {
	*x = ResourceAssign{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_job_job_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResourceAssign) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceAssign) ProtoMessage() {}

func (x *ResourceAssign) ProtoReflect() protoreflect.Message {
	mi := &file_proto_job_job_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceAssign.ProtoReflect.Descriptor instead.
func (*ResourceAssign) Descriptor() ([]byte, []int) {
	return file_proto_job_job_proto_rawDescGZIP(), []int{5}
}

func (x *ResourceAssign) GetCpus() int64 {
	if x != nil {
		return x.Cpus
	}
	return 0
}

func (x *ResourceAssign) GetNodes() int64 {
	if x != nil {
		return x.Nodes
	}
	return 0
}

// 解决方案名称
type ListSolutionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *ListSolutionsRequest) Reset() {
	*x = ListSolutionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_job_job_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSolutionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSolutionsRequest) ProtoMessage() {}

func (x *ListSolutionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_job_job_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSolutionsRequest.ProtoReflect.Descriptor instead.
func (*ListSolutionsRequest) Descriptor() ([]byte, []int) {
	return file_proto_job_job_proto_rawDescGZIP(), []int{6}
}

func (x *ListSolutionsRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// 返回解决方案列表
type ListSolutionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Solutions []*Solution `protobuf:"bytes,1,rep,name=solutions,proto3" json:"solutions,omitempty"`
}

func (x *ListSolutionsResponse) Reset() {
	*x = ListSolutionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_job_job_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSolutionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSolutionsResponse) ProtoMessage() {}

func (x *ListSolutionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_job_job_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSolutionsResponse.ProtoReflect.Descriptor instead.
func (*ListSolutionsResponse) Descriptor() ([]byte, []int) {
	return file_proto_job_job_proto_rawDescGZIP(), []int{7}
}

func (x *ListSolutionsResponse) GetSolutions() []*Solution {
	if x != nil {
		return x.Solutions
	}
	return nil
}

// 解决方案详细信息
type Solution struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     string     `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Licenses []*License `protobuf:"bytes,2,rep,name=licenses,proto3" json:"licenses,omitempty"`
	ScIDs    []string   `protobuf:"bytes,3,rep,name=scIDs,proto3" json:"scIDs,omitempty"`
}

func (x *Solution) Reset() {
	*x = Solution{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_job_job_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Solution) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Solution) ProtoMessage() {}

func (x *Solution) ProtoReflect() protoreflect.Message {
	mi := &file_proto_job_job_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Solution.ProtoReflect.Descriptor instead.
func (*Solution) Descriptor() ([]byte, []int) {
	return file_proto_job_job_proto_rawDescGZIP(), []int{8}
}

func (x *Solution) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Solution) GetLicenses() []*License {
	if x != nil {
		return x.Licenses
	}
	return nil
}

func (x *Solution) GetScIDs() []string {
	if x != nil {
		return x.ScIDs
	}
	return nil
}

// license信息
type License struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppType    string   `protobuf:"bytes,1,opt,name=appType,proto3" json:"appType,omitempty"`
	AppVersion string   `protobuf:"bytes,2,opt,name=appVersion,proto3" json:"appVersion,omitempty"`
	LicenseIDs []string `protobuf:"bytes,3,rep,name=licenseIDs,proto3" json:"licenseIDs,omitempty"`
}

func (x *License) Reset() {
	*x = License{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_job_job_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *License) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*License) ProtoMessage() {}

func (x *License) ProtoReflect() protoreflect.Message {
	mi := &file_proto_job_job_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use License.ProtoReflect.Descriptor instead.
func (*License) Descriptor() ([]byte, []int) {
	return file_proto_job_job_proto_rawDescGZIP(), []int{9}
}

func (x *License) GetAppType() string {
	if x != nil {
		return x.AppType
	}
	return ""
}

func (x *License) GetAppVersion() string {
	if x != nil {
		return x.AppVersion
	}
	return ""
}

func (x *License) GetLicenseIDs() []string {
	if x != nil {
		return x.LicenseIDs
	}
	return nil
}

// 带解决方案的Job请求
type CreateJobWithSolutionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Params *ScheduleParams `protobuf:"bytes,1,opt,name=params,proto3" json:"params,omitempty"`
	// @inject_tag: `validate:"is_ysid,required"`
	AppId string `protobuf:"bytes,2,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	// @inject_tag: `validate:"is_ysid,required"`
	UserId string `protobuf:"bytes,4,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// @inject_tag: `validate:"is_ysid,required"`
	ClientId string `protobuf:"bytes,5,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	// @inject_tag: `validate:"required"`
	Name string `protobuf:"bytes,7,opt,name=name,proto3" json:"name,omitempty"`
	// The user input parameters
	UserParams *UserParams `protobuf:"bytes,8,opt,name=user_params,json=userParams,proto3" json:"user_params,omitempty"`
	// @inject_tag: `validate:"is_ysid,required"`
	ProjectId string `protobuf:"bytes,9,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	// @inject_tag: `validate:"is_ysid"`
	DepartmentId string `protobuf:"bytes,10,opt,name=department_id,json=departmentId,proto3" json:"department_id,omitempty"`
	// @inject_tag: `validate:"required"`
	UserParamsVersion string `protobuf:"bytes,11,opt,name=user_params_version,json=userParamsVersion,proto3" json:"user_params_version,omitempty"`
	// The uploaded file info in box
	UploadFileInfo *UploadFileInfo `protobuf:"bytes,12,opt,name=upload_file_info,json=uploadFileInfo,proto3" json:"upload_file_info,omitempty"`
	Output         *OutputInfo     `protobuf:"bytes,13,opt,name=output,proto3" json:"output,omitempty"`
	// @inject_tag: `validate:"is_ysid,required"`
	AccountId string `protobuf:"bytes,21,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	// User defined file upload blacklist
	FileUploadBlacklist string `protobuf:"bytes,22,opt,name=file_upload_blacklist,json=fileUploadBlacklist,proto3" json:"file_upload_blacklist,omitempty"`
	// User defined file download blacklist
	FileDownloadBlacklist string `protobuf:"bytes,23,opt,name=file_download_blacklist,json=fileDownloadBlacklist,proto3" json:"file_download_blacklist,omitempty"`
	// Wechat Official Account notification switch
	NotifyOffiaccount bool `protobuf:"varint,24,opt,name=notify_offiaccount,json=notifyOffiaccount,proto3" json:"notify_offiaccount,omitempty"`
	// 解决方案名称，非必填，如果为空默认为远算云方案
	SolutionName string `protobuf:"bytes,25,opt,name=solution_name,json=solutionName,proto3" json:"solution_name,omitempty"`
}

func (x *CreateJobWithSolutionRequest) Reset() {
	*x = CreateJobWithSolutionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_job_job_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateJobWithSolutionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateJobWithSolutionRequest) ProtoMessage() {}

func (x *CreateJobWithSolutionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_job_job_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateJobWithSolutionRequest.ProtoReflect.Descriptor instead.
func (*CreateJobWithSolutionRequest) Descriptor() ([]byte, []int) {
	return file_proto_job_job_proto_rawDescGZIP(), []int{10}
}

func (x *CreateJobWithSolutionRequest) GetParams() *ScheduleParams {
	if x != nil {
		return x.Params
	}
	return nil
}

func (x *CreateJobWithSolutionRequest) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *CreateJobWithSolutionRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *CreateJobWithSolutionRequest) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *CreateJobWithSolutionRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateJobWithSolutionRequest) GetUserParams() *UserParams {
	if x != nil {
		return x.UserParams
	}
	return nil
}

func (x *CreateJobWithSolutionRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *CreateJobWithSolutionRequest) GetDepartmentId() string {
	if x != nil {
		return x.DepartmentId
	}
	return ""
}

func (x *CreateJobWithSolutionRequest) GetUserParamsVersion() string {
	if x != nil {
		return x.UserParamsVersion
	}
	return ""
}

func (x *CreateJobWithSolutionRequest) GetUploadFileInfo() *UploadFileInfo {
	if x != nil {
		return x.UploadFileInfo
	}
	return nil
}

func (x *CreateJobWithSolutionRequest) GetOutput() *OutputInfo {
	if x != nil {
		return x.Output
	}
	return nil
}

func (x *CreateJobWithSolutionRequest) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *CreateJobWithSolutionRequest) GetFileUploadBlacklist() string {
	if x != nil {
		return x.FileUploadBlacklist
	}
	return ""
}

func (x *CreateJobWithSolutionRequest) GetFileDownloadBlacklist() string {
	if x != nil {
		return x.FileDownloadBlacklist
	}
	return ""
}

func (x *CreateJobWithSolutionRequest) GetNotifyOffiaccount() bool {
	if x != nil {
		return x.NotifyOffiaccount
	}
	return false
}

func (x *CreateJobWithSolutionRequest) GetSolutionName() string {
	if x != nil {
		return x.SolutionName
	}
	return ""
}

// 返回作业信息
type CreateJobWithSolutionReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Job  *Job   `protobuf:"bytes,1,opt,name=job,proto3" json:"job,omitempty"`
	Jobs []*Job `protobuf:"bytes,2,rep,name=jobs,proto3" json:"jobs,omitempty"`
}

func (x *CreateJobWithSolutionReply) Reset() {
	*x = CreateJobWithSolutionReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_job_job_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateJobWithSolutionReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateJobWithSolutionReply) ProtoMessage() {}

func (x *CreateJobWithSolutionReply) ProtoReflect() protoreflect.Message {
	mi := &file_proto_job_job_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateJobWithSolutionReply.ProtoReflect.Descriptor instead.
func (*CreateJobWithSolutionReply) Descriptor() ([]byte, []int) {
	return file_proto_job_job_proto_rawDescGZIP(), []int{11}
}

func (x *CreateJobWithSolutionReply) GetJob() *Job {
	if x != nil {
		return x.Job
	}
	return nil
}

func (x *CreateJobWithSolutionReply) GetJobs() []*Job {
	if x != nil {
		return x.Jobs
	}
	return nil
}

type MonitorChart struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   string             `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Items []*MonitorChart_KV `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *MonitorChart) Reset() {
	*x = MonitorChart{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_job_job_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MonitorChart) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MonitorChart) ProtoMessage() {}

func (x *MonitorChart) ProtoReflect() protoreflect.Message {
	mi := &file_proto_job_job_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MonitorChart.ProtoReflect.Descriptor instead.
func (*MonitorChart) Descriptor() ([]byte, []int) {
	return file_proto_job_job_proto_rawDescGZIP(), []int{12}
}

func (x *MonitorChart) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *MonitorChart) GetItems() []*MonitorChart_KV {
	if x != nil {
		return x.Items
	}
	return nil
}

type UpdateMonitorChartRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Charts []*MonitorChart `protobuf:"bytes,1,rep,name=charts,proto3" json:"charts,omitempty"`
	JobId  string          `protobuf:"bytes,2,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	Status int32           `protobuf:"varint,3,opt,name=status,proto3" json:"status,omitempty"` // 0 => start, 1 => middle; 2 => end
}

func (x *UpdateMonitorChartRequest) Reset() {
	*x = UpdateMonitorChartRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_job_job_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMonitorChartRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMonitorChartRequest) ProtoMessage() {}

func (x *UpdateMonitorChartRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_job_job_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMonitorChartRequest.ProtoReflect.Descriptor instead.
func (*UpdateMonitorChartRequest) Descriptor() ([]byte, []int) {
	return file_proto_job_job_proto_rawDescGZIP(), []int{13}
}

func (x *UpdateMonitorChartRequest) GetCharts() []*MonitorChart {
	if x != nil {
		return x.Charts
	}
	return nil
}

func (x *UpdateMonitorChartRequest) GetJobId() string {
	if x != nil {
		return x.JobId
	}
	return ""
}

func (x *UpdateMonitorChartRequest) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type UpdateMonitorChartResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateMonitorChartResponse) Reset() {
	*x = UpdateMonitorChartResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_job_job_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMonitorChartResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMonitorChartResponse) ProtoMessage() {}

func (x *UpdateMonitorChartResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_job_job_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMonitorChartResponse.ProtoReflect.Descriptor instead.
func (*UpdateMonitorChartResponse) Descriptor() ([]byte, []int) {
	return file_proto_job_job_proto_rawDescGZIP(), []int{14}
}

type GetMonitorChartRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JobId string `protobuf:"bytes,1,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
}

func (x *GetMonitorChartRequest) Reset() {
	*x = GetMonitorChartRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_job_job_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMonitorChartRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMonitorChartRequest) ProtoMessage() {}

func (x *GetMonitorChartRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_job_job_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMonitorChartRequest.ProtoReflect.Descriptor instead.
func (*GetMonitorChartRequest) Descriptor() ([]byte, []int) {
	return file_proto_job_job_proto_rawDescGZIP(), []int{15}
}

func (x *GetMonitorChartRequest) GetJobId() string {
	if x != nil {
		return x.JobId
	}
	return ""
}

type GetMonitorChartResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Charts []*MonitorChart `protobuf:"bytes,1,rep,name=charts,proto3" json:"charts,omitempty"`
}

func (x *GetMonitorChartResponse) Reset() {
	*x = GetMonitorChartResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_job_job_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMonitorChartResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMonitorChartResponse) ProtoMessage() {}

func (x *GetMonitorChartResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_job_job_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMonitorChartResponse.ProtoReflect.Descriptor instead.
func (*GetMonitorChartResponse) Descriptor() ([]byte, []int) {
	return file_proto_job_job_proto_rawDescGZIP(), []int{16}
}

func (x *GetMonitorChartResponse) GetCharts() []*MonitorChart {
	if x != nil {
		return x.Charts
	}
	return nil
}

// The sum request contains two parameters.
type GetJobRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: `validate:"is_ysid,required"`
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// @inject_tag: `validate:"is_ysid"`
	ProjectId string `protobuf:"bytes,2,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
}

func (x *GetJobRequest) Reset() {
	*x = GetJobRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_job_job_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetJobRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetJobRequest) ProtoMessage() {}

func (x *GetJobRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_job_job_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetJobRequest.ProtoReflect.Descriptor instead.
func (*GetJobRequest) Descriptor() ([]byte, []int) {
	return file_proto_job_job_proto_rawDescGZIP(), []int{17}
}

func (x *GetJobRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetJobRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

// The sum response contains the result of the calculation.
type GetJobReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Job *Job `protobuf:"bytes,1,opt,name=job,proto3" json:"job,omitempty"`
}

func (x *GetJobReply) Reset() {
	*x = GetJobReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_job_job_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetJobReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetJobReply) ProtoMessage() {}

func (x *GetJobReply) ProtoReflect() protoreflect.Message {
	mi := &file_proto_job_job_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetJobReply.ProtoReflect.Descriptor instead.
func (*GetJobReply) Descriptor() ([]byte, []int) {
	return file_proto_job_job_proto_rawDescGZIP(), []int{18}
}

func (x *GetJobReply) GetJob() *Job {
	if x != nil {
		return x.Job
	}
	return nil
}

type GetSCJobsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: `validate:"required"`
	ScId string `protobuf:"bytes,1,opt,name=sc_id,json=scId,proto3" json:"sc_id,omitempty"`
}

func (x *GetSCJobsRequest) Reset() {
	*x = GetSCJobsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_job_job_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSCJobsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSCJobsRequest) ProtoMessage() {}

func (x *GetSCJobsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_job_job_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSCJobsRequest.ProtoReflect.Descriptor instead.
func (*GetSCJobsRequest) Descriptor() ([]byte, []int) {
	return file_proto_job_job_proto_rawDescGZIP(), []int{19}
}

func (x *GetSCJobsRequest) GetScId() string {
	if x != nil {
		return x.ScId
	}
	return ""
}

type GetSCJobsReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Jobs []*Job `protobuf:"bytes,1,rep,name=jobs,proto3" json:"jobs,omitempty"`
}

func (x *GetSCJobsReply) Reset() {
	*x = GetSCJobsReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_job_job_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSCJobsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSCJobsReply) ProtoMessage() {}

func (x *GetSCJobsReply) ProtoReflect() protoreflect.Message {
	mi := &file_proto_job_job_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSCJobsReply.ProtoReflect.Descriptor instead.
func (*GetSCJobsReply) Descriptor() ([]byte, []int) {
	return file_proto_job_job_proto_rawDescGZIP(), []int{20}
}

func (x *GetSCJobsReply) GetJobs() []*Job {
	if x != nil {
		return x.Jobs
	}
	return nil
}

// The files which have uploaded to box, this uploaded file info will be used to sync files into box to SC
type UploadFileInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// job file related parameters
	SourceFileStorageId string `protobuf:"bytes,20,opt,name=source_file_storage_id,json=sourceFileStorageId,proto3" json:"source_file_storage_id,omitempty"`
	// 存储区域字段
	FileZone     string `protobuf:"bytes,200,opt,name=file_zone,json=fileZone,proto3" json:"file_zone,omitempty"`
	SourcePath   string `protobuf:"bytes,21,opt,name=source_path,json=sourcePath,proto3" json:"source_path,omitempty"`
	SyncRunnerId string `protobuf:"bytes,22,opt,name=sync_runner_id,json=syncRunnerId,proto3" json:"sync_runner_id,omitempty"`
}

func (x *UploadFileInfo) Reset() {
	*x = UploadFileInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_job_job_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadFileInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadFileInfo) ProtoMessage() {}

func (x *UploadFileInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_job_job_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadFileInfo.ProtoReflect.Descriptor instead.
func (*UploadFileInfo) Descriptor() ([]byte, []int) {
	return file_proto_job_job_proto_rawDescGZIP(), []int{21}
}

func (x *UploadFileInfo) GetSourceFileStorageId() string {
	if x != nil {
		return x.SourceFileStorageId
	}
	return ""
}

func (x *UploadFileInfo) GetFileZone() string {
	if x != nil {
		return x.FileZone
	}
	return ""
}

func (x *UploadFileInfo) GetSourcePath() string {
	if x != nil {
		return x.SourcePath
	}
	return ""
}

func (x *UploadFileInfo) GetSyncRunnerId() string {
	if x != nil {
		return x.SyncRunnerId
	}
	return ""
}

type OutputInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address   string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	StorageId string `protobuf:"bytes,2,opt,name=storage_id,json=storageId,proto3" json:"storage_id,omitempty"`
	Zone      string `protobuf:"bytes,3,opt,name=zone,proto3" json:"zone,omitempty"`
}

func (x *OutputInfo) Reset() {
	*x = OutputInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_job_job_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OutputInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OutputInfo) ProtoMessage() {}

func (x *OutputInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_job_job_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OutputInfo.ProtoReflect.Descriptor instead.
func (*OutputInfo) Descriptor() ([]byte, []int) {
	return file_proto_job_job_proto_rawDescGZIP(), []int{22}
}

func (x *OutputInfo) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *OutputInfo) GetStorageId() string {
	if x != nil {
		return x.StorageId
	}
	return ""
}

func (x *OutputInfo) GetZone() string {
	if x != nil {
		return x.Zone
	}
	return ""
}

type UserParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fields []*FieldReq `protobuf:"bytes,1,rep,name=fields,proto3" json:"fields,omitempty"`
}

func (x *UserParams) Reset() {
	*x = UserParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_job_job_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserParams) ProtoMessage() {}

func (x *UserParams) ProtoReflect() protoreflect.Message {
	mi := &file_proto_job_job_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserParams.ProtoReflect.Descriptor instead.
func (*UserParams) Descriptor() ([]byte, []int) {
	return file_proto_job_job_proto_rawDescGZIP(), []int{23}
}

func (x *UserParams) GetFields() []*FieldReq {
	if x != nil {
		return x.Fields
	}
	return nil
}

// FieldReq is the request field id/value in submission form
type FieldReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Required: true The field ID for job submission
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Required: true The field type for job submission
	Type string `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	// The field value for job submission: text/date/list/radio/checkbox
	Value string `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
	// The field value for job submission: multi/lsfile
	Values []string `protobuf:"bytes,4,rep,name=values,proto3" json:"values,omitempty"`
	// The field value for master slave files relationship json string
	MasterSlave string `protobuf:"bytes,5,opt,name=master_slave,json=masterSlave,proto3" json:"master_slave,omitempty"`
}

func (x *FieldReq) Reset() {
	*x = FieldReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_job_job_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FieldReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FieldReq) ProtoMessage() {}

func (x *FieldReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_job_job_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FieldReq.ProtoReflect.Descriptor instead.
func (*FieldReq) Descriptor() ([]byte, []int) {
	return file_proto_job_job_proto_rawDescGZIP(), []int{24}
}

func (x *FieldReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *FieldReq) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *FieldReq) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *FieldReq) GetValues() []string {
	if x != nil {
		return x.Values
	}
	return nil
}

func (x *FieldReq) GetMasterSlave() string {
	if x != nil {
		return x.MasterSlave
	}
	return ""
}

type CreateJobWithScheduleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Params *ScheduleParams `protobuf:"bytes,1,opt,name=params,proto3" json:"params,omitempty"`
	// @inject_tag: `validate:"is_ysid,required"`
	AppId string `protobuf:"bytes,2,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	// @inject_tag: `validate:"is_ysid,required"`
	UserId string `protobuf:"bytes,4,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// @inject_tag: `validate:"is_ysid,required"`
	ClientId string `protobuf:"bytes,5,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	// @inject_tag: `validate:"required"`
	Name string `protobuf:"bytes,7,opt,name=name,proto3" json:"name,omitempty"`
	// The user input parameters
	UserParams *UserParams `protobuf:"bytes,8,opt,name=user_params,json=userParams,proto3" json:"user_params,omitempty"`
	// @inject_tag: `validate:"is_ysid,required"`
	ProjectId string `protobuf:"bytes,9,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	// @inject_tag: `validate:"is_ysid"`
	DepartmentId string `protobuf:"bytes,10,opt,name=department_id,json=departmentId,proto3" json:"department_id,omitempty"`
	// @inject_tag: `validate:"required"`
	UserParamsVersion string `protobuf:"bytes,11,opt,name=user_params_version,json=userParamsVersion,proto3" json:"user_params_version,omitempty"`
	// The uploaded file info in box
	UploadFileInfo *UploadFileInfo `protobuf:"bytes,12,opt,name=upload_file_info,json=uploadFileInfo,proto3" json:"upload_file_info,omitempty"`
	Output         *OutputInfo     `protobuf:"bytes,13,opt,name=output,proto3" json:"output,omitempty"`
	// @inject_tag: `validate:"is_ysid,required"`
	AccountId string `protobuf:"bytes,21,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	// User defined file upload blacklist
	FileUploadBlacklist string `protobuf:"bytes,22,opt,name=file_upload_blacklist,json=fileUploadBlacklist,proto3" json:"file_upload_blacklist,omitempty"`
	// User defined file download blacklist
	FileDownloadBlacklist string `protobuf:"bytes,23,opt,name=file_download_blacklist,json=fileDownloadBlacklist,proto3" json:"file_download_blacklist,omitempty"`
	// Wechat Official Account notification switch
	NotifyOffiaccount bool `protobuf:"varint,24,opt,name=notify_offiaccount,json=notifyOffiaccount,proto3" json:"notify_offiaccount,omitempty"`
	// license_ids
	LicenseIds []string `protobuf:"bytes,25,rep,name=license_ids,json=licenseIds,proto3" json:"license_ids,omitempty"`
	// solution
	Solution *Solution `protobuf:"bytes,26,opt,name=solution,proto3" json:"solution,omitempty"`
}

func (x *CreateJobWithScheduleRequest) Reset() {
	*x = CreateJobWithScheduleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_job_job_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateJobWithScheduleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateJobWithScheduleRequest) ProtoMessage() {}

func (x *CreateJobWithScheduleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_job_job_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateJobWithScheduleRequest.ProtoReflect.Descriptor instead.
func (*CreateJobWithScheduleRequest) Descriptor() ([]byte, []int) {
	return file_proto_job_job_proto_rawDescGZIP(), []int{25}
}

func (x *CreateJobWithScheduleRequest) GetParams() *ScheduleParams {
	if x != nil {
		return x.Params
	}
	return nil
}

func (x *CreateJobWithScheduleRequest) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *CreateJobWithScheduleRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *CreateJobWithScheduleRequest) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *CreateJobWithScheduleRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateJobWithScheduleRequest) GetUserParams() *UserParams {
	if x != nil {
		return x.UserParams
	}
	return nil
}

func (x *CreateJobWithScheduleRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *CreateJobWithScheduleRequest) GetDepartmentId() string {
	if x != nil {
		return x.DepartmentId
	}
	return ""
}

func (x *CreateJobWithScheduleRequest) GetUserParamsVersion() string {
	if x != nil {
		return x.UserParamsVersion
	}
	return ""
}

func (x *CreateJobWithScheduleRequest) GetUploadFileInfo() *UploadFileInfo {
	if x != nil {
		return x.UploadFileInfo
	}
	return nil
}

func (x *CreateJobWithScheduleRequest) GetOutput() *OutputInfo {
	if x != nil {
		return x.Output
	}
	return nil
}

func (x *CreateJobWithScheduleRequest) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *CreateJobWithScheduleRequest) GetFileUploadBlacklist() string {
	if x != nil {
		return x.FileUploadBlacklist
	}
	return ""
}

func (x *CreateJobWithScheduleRequest) GetFileDownloadBlacklist() string {
	if x != nil {
		return x.FileDownloadBlacklist
	}
	return ""
}

func (x *CreateJobWithScheduleRequest) GetNotifyOffiaccount() bool {
	if x != nil {
		return x.NotifyOffiaccount
	}
	return false
}

func (x *CreateJobWithScheduleRequest) GetLicenseIds() []string {
	if x != nil {
		return x.LicenseIds
	}
	return nil
}

func (x *CreateJobWithScheduleRequest) GetSolution() *Solution {
	if x != nil {
		return x.Solution
	}
	return nil
}

type ScheduleParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SelectedSc []string `protobuf:"bytes,1,rep,name=selected_sc,json=selectedSc,proto3" json:"selected_sc,omitempty"`
	// @inject_tag: `validate:"required"`
	MinCores int64 `protobuf:"varint,2,opt,name=min_cores,json=minCores,proto3" json:"min_cores,omitempty"`
}

func (x *ScheduleParams) Reset() {
	*x = ScheduleParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_job_job_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScheduleParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScheduleParams) ProtoMessage() {}

func (x *ScheduleParams) ProtoReflect() protoreflect.Message {
	mi := &file_proto_job_job_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScheduleParams.ProtoReflect.Descriptor instead.
func (*ScheduleParams) Descriptor() ([]byte, []int) {
	return file_proto_job_job_proto_rawDescGZIP(), []int{26}
}

func (x *ScheduleParams) GetSelectedSc() []string {
	if x != nil {
		return x.SelectedSc
	}
	return nil
}

func (x *ScheduleParams) GetMinCores() int64 {
	if x != nil {
		return x.MinCores
	}
	return 0
}

type CreateJobWithScheduleReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Job  *Job   `protobuf:"bytes,1,opt,name=job,proto3" json:"job,omitempty"`
	Jobs []*Job `protobuf:"bytes,2,rep,name=jobs,proto3" json:"jobs,omitempty"`
}

func (x *CreateJobWithScheduleReply) Reset() {
	*x = CreateJobWithScheduleReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_job_job_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateJobWithScheduleReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateJobWithScheduleReply) ProtoMessage() {}

func (x *CreateJobWithScheduleReply) ProtoReflect() protoreflect.Message {
	mi := &file_proto_job_job_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateJobWithScheduleReply.ProtoReflect.Descriptor instead.
func (*CreateJobWithScheduleReply) Descriptor() ([]byte, []int) {
	return file_proto_job_job_proto_rawDescGZIP(), []int{27}
}

func (x *CreateJobWithScheduleReply) GetJob() *Job {
	if x != nil {
		return x.Job
	}
	return nil
}

func (x *CreateJobWithScheduleReply) GetJobs() []*Job {
	if x != nil {
		return x.Jobs
	}
	return nil
}

type SetJobFileReadyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: `validate:"is_ysid,required"`
	JobId string `protobuf:"bytes,1,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
}

func (x *SetJobFileReadyRequest) Reset() {
	*x = SetJobFileReadyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_job_job_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetJobFileReadyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetJobFileReadyRequest) ProtoMessage() {}

func (x *SetJobFileReadyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_job_job_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetJobFileReadyRequest.ProtoReflect.Descriptor instead.
func (*SetJobFileReadyRequest) Descriptor() ([]byte, []int) {
	return file_proto_job_job_proto_rawDescGZIP(), []int{28}
}

func (x *SetJobFileReadyRequest) GetJobId() string {
	if x != nil {
		return x.JobId
	}
	return ""
}

type SetJobFileReadyReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Job *Job `protobuf:"bytes,1,opt,name=job,proto3" json:"job,omitempty"`
}

func (x *SetJobFileReadyReply) Reset() {
	*x = SetJobFileReadyReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_job_job_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetJobFileReadyReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetJobFileReadyReply) ProtoMessage() {}

func (x *SetJobFileReadyReply) ProtoReflect() protoreflect.Message {
	mi := &file_proto_job_job_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetJobFileReadyReply.ProtoReflect.Descriptor instead.
func (*SetJobFileReadyReply) Descriptor() ([]byte, []int) {
	return file_proto_job_job_proto_rawDescGZIP(), []int{29}
}

func (x *SetJobFileReadyReply) GetJob() *Job {
	if x != nil {
		return x.Job
	}
	return nil
}

type GetSubmittingJobsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: `validate:"required"`
	ScId string `protobuf:"bytes,1,opt,name=sc_id,json=scId,proto3" json:"sc_id,omitempty"`
}

func (x *GetSubmittingJobsRequest) Reset() {
	*x = GetSubmittingJobsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_job_job_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSubmittingJobsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSubmittingJobsRequest) ProtoMessage() {}

func (x *GetSubmittingJobsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_job_job_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSubmittingJobsRequest.ProtoReflect.Descriptor instead.
func (*GetSubmittingJobsRequest) Descriptor() ([]byte, []int) {
	return file_proto_job_job_proto_rawDescGZIP(), []int{30}
}

func (x *GetSubmittingJobsRequest) GetScId() string {
	if x != nil {
		return x.ScId
	}
	return ""
}

type GetSubmittingJobsReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Jobs []*Job `protobuf:"bytes,1,rep,name=jobs,proto3" json:"jobs,omitempty"`
}

func (x *GetSubmittingJobsReply) Reset() {
	*x = GetSubmittingJobsReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_job_job_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSubmittingJobsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSubmittingJobsReply) ProtoMessage() {}

func (x *GetSubmittingJobsReply) ProtoReflect() protoreflect.Message {
	mi := &file_proto_job_job_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSubmittingJobsReply.ProtoReflect.Descriptor instead.
func (*GetSubmittingJobsReply) Descriptor() ([]byte, []int) {
	return file_proto_job_job_proto_rawDescGZIP(), []int{31}
}

func (x *GetSubmittingJobsReply) GetJobs() []*Job {
	if x != nil {
		return x.Jobs
	}
	return nil
}

type SetJobSubmittedRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: `validate:"is_ysid,required"`
	JobId   string       `protobuf:"bytes,1,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	ScJobId string       `protobuf:"bytes,2,opt,name=sc_job_id,json=scJobId,proto3" json:"sc_job_id,omitempty"`
	Res     SubmitResult `protobuf:"varint,3,opt,name=res,proto3,enum=job.SubmitResult" json:"res,omitempty"`
	Message string       `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *SetJobSubmittedRequest) Reset() {
	*x = SetJobSubmittedRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_job_job_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetJobSubmittedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetJobSubmittedRequest) ProtoMessage() {}

func (x *SetJobSubmittedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_job_job_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetJobSubmittedRequest.ProtoReflect.Descriptor instead.
func (*SetJobSubmittedRequest) Descriptor() ([]byte, []int) {
	return file_proto_job_job_proto_rawDescGZIP(), []int{32}
}

func (x *SetJobSubmittedRequest) GetJobId() string {
	if x != nil {
		return x.JobId
	}
	return ""
}

func (x *SetJobSubmittedRequest) GetScJobId() string {
	if x != nil {
		return x.ScJobId
	}
	return ""
}

func (x *SetJobSubmittedRequest) GetRes() SubmitResult {
	if x != nil {
		return x.Res
	}
	return SubmitResult_Success
}

func (x *SetJobSubmittedRequest) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type SetJobSubmittedReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Job *Job `protobuf:"bytes,1,opt,name=job,proto3" json:"job,omitempty"`
}

func (x *SetJobSubmittedReply) Reset() {
	*x = SetJobSubmittedReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_job_job_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetJobSubmittedReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetJobSubmittedReply) ProtoMessage() {}

func (x *SetJobSubmittedReply) ProtoReflect() protoreflect.Message {
	mi := &file_proto_job_job_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetJobSubmittedReply.ProtoReflect.Descriptor instead.
func (*SetJobSubmittedReply) Descriptor() ([]byte, []int) {
	return file_proto_job_job_proto_rawDescGZIP(), []int{33}
}

func (x *SetJobSubmittedReply) GetJob() *Job {
	if x != nil {
		return x.Job
	}
	return nil
}

type UpdateSCScheduledJobRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: `validate:"is_ysid,required"`
	JobId string `protobuf:"bytes,1,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	// @inject_tag: `validate:"required"`
	State *State `protobuf:"bytes,2,opt,name=state,proto3" json:"state,omitempty"`
	// paas the params, if job status == running or completed
	RunningDuration int64 `protobuf:"varint,3,opt,name=running_duration,json=runningDuration,proto3" json:"running_duration,omitempty"`
	// job start time
	StartTime *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	// job end time
	EndTime *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	// number cpus used
	NumCups int64 `protobuf:"varint,6,opt,name=num_cups,json=numCups,proto3" json:"num_cups,omitempty"`
	// number nodes used
	NumNodes   int64  `protobuf:"varint,7,opt,name=num_nodes,json=numNodes,proto3" json:"num_nodes,omitempty"`
	ExitReason string `protobuf:"bytes,8,opt,name=exit_reason,json=exitReason,proto3" json:"exit_reason,omitempty"`
	PendReason string `protobuf:"bytes,9,opt,name=pend_reason,json=pendReason,proto3" json:"pend_reason,omitempty"`
	// job submit time
	SubmitTime *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=submit_time,json=submitTime,proto3" json:"submit_time,omitempty"`
	// scjob_id update, only for gz 广州超算在超算内部进行license排队，初始id为fake id， 具体缘由参见http://wiki.intern.yuansuan.cn/display/ENG/national+super+compute+center+in+guangzhou
	SchedulerJobId string `protobuf:"bytes,11,opt,name=scheduler_job_id,json=schedulerJobId,proto3" json:"scheduler_job_id,omitempty"`
	ExitCode       string `protobuf:"bytes,12,opt,name=exit_code,json=exitCode,proto3" json:"exit_code,omitempty"`
}

func (x *UpdateSCScheduledJobRequest) Reset() {
	*x = UpdateSCScheduledJobRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_job_job_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSCScheduledJobRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSCScheduledJobRequest) ProtoMessage() {}

func (x *UpdateSCScheduledJobRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_job_job_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSCScheduledJobRequest.ProtoReflect.Descriptor instead.
func (*UpdateSCScheduledJobRequest) Descriptor() ([]byte, []int) {
	return file_proto_job_job_proto_rawDescGZIP(), []int{34}
}

func (x *UpdateSCScheduledJobRequest) GetJobId() string {
	if x != nil {
		return x.JobId
	}
	return ""
}

func (x *UpdateSCScheduledJobRequest) GetState() *State {
	if x != nil {
		return x.State
	}
	return nil
}

func (x *UpdateSCScheduledJobRequest) GetRunningDuration() int64 {
	if x != nil {
		return x.RunningDuration
	}
	return 0
}

func (x *UpdateSCScheduledJobRequest) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *UpdateSCScheduledJobRequest) GetEndTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EndTime
	}
	return nil
}

func (x *UpdateSCScheduledJobRequest) GetNumCups() int64 {
	if x != nil {
		return x.NumCups
	}
	return 0
}

func (x *UpdateSCScheduledJobRequest) GetNumNodes() int64 {
	if x != nil {
		return x.NumNodes
	}
	return 0
}

func (x *UpdateSCScheduledJobRequest) GetExitReason() string {
	if x != nil {
		return x.ExitReason
	}
	return ""
}

func (x *UpdateSCScheduledJobRequest) GetPendReason() string {
	if x != nil {
		return x.PendReason
	}
	return ""
}

func (x *UpdateSCScheduledJobRequest) GetSubmitTime() *timestamppb.Timestamp {
	if x != nil {
		return x.SubmitTime
	}
	return nil
}

func (x *UpdateSCScheduledJobRequest) GetSchedulerJobId() string {
	if x != nil {
		return x.SchedulerJobId
	}
	return ""
}

func (x *UpdateSCScheduledJobRequest) GetExitCode() string {
	if x != nil {
		return x.ExitCode
	}
	return ""
}

type UpdateSCScheduledJobReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Job *Job `protobuf:"bytes,1,opt,name=job,proto3" json:"job,omitempty"`
}

func (x *UpdateSCScheduledJobReply) Reset() {
	*x = UpdateSCScheduledJobReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_job_job_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSCScheduledJobReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSCScheduledJobReply) ProtoMessage() {}

func (x *UpdateSCScheduledJobReply) ProtoReflect() protoreflect.Message {
	mi := &file_proto_job_job_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSCScheduledJobReply.ProtoReflect.Descriptor instead.
func (*UpdateSCScheduledJobReply) Descriptor() ([]byte, []int) {
	return file_proto_job_job_proto_rawDescGZIP(), []int{35}
}

func (x *UpdateSCScheduledJobReply) GetJob() *Job {
	if x != nil {
		return x.Job
	}
	return nil
}

type CancelJobsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JobIds []string `protobuf:"bytes,1,rep,name=job_ids,json=jobIds,proto3" json:"job_ids,omitempty"`
}

func (x *CancelJobsRequest) Reset() {
	*x = CancelJobsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_job_job_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CancelJobsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelJobsRequest) ProtoMessage() {}

func (x *CancelJobsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_job_job_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelJobsRequest.ProtoReflect.Descriptor instead.
func (*CancelJobsRequest) Descriptor() ([]byte, []int) {
	return file_proto_job_job_proto_rawDescGZIP(), []int{36}
}

func (x *CancelJobsRequest) GetJobIds() []string {
	if x != nil {
		return x.JobIds
	}
	return nil
}

type GetJobInfoByJobIDsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JobIds []int64 `protobuf:"varint,1,rep,packed,name=job_ids,json=jobIds,proto3" json:"job_ids,omitempty"`
}

func (x *GetJobInfoByJobIDsRequest) Reset() {
	*x = GetJobInfoByJobIDsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_job_job_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetJobInfoByJobIDsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetJobInfoByJobIDsRequest) ProtoMessage() {}

func (x *GetJobInfoByJobIDsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_job_job_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetJobInfoByJobIDsRequest.ProtoReflect.Descriptor instead.
func (*GetJobInfoByJobIDsRequest) Descriptor() ([]byte, []int) {
	return file_proto_job_job_proto_rawDescGZIP(), []int{37}
}

func (x *GetJobInfoByJobIDsRequest) GetJobIds() []int64 {
	if x != nil {
		return x.JobIds
	}
	return nil
}

type GetJobInfoByJobIDsResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Jobs []*JobInf `protobuf:"bytes,1,rep,name=jobs,proto3" json:"jobs,omitempty"`
}

func (x *GetJobInfoByJobIDsResult) Reset() {
	*x = GetJobInfoByJobIDsResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_job_job_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetJobInfoByJobIDsResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetJobInfoByJobIDsResult) ProtoMessage() {}

func (x *GetJobInfoByJobIDsResult) ProtoReflect() protoreflect.Message {
	mi := &file_proto_job_job_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetJobInfoByJobIDsResult.ProtoReflect.Descriptor instead.
func (*GetJobInfoByJobIDsResult) Descriptor() ([]byte, []int) {
	return file_proto_job_job_proto_rawDescGZIP(), []int{38}
}

func (x *GetJobInfoByJobIDsResult) GetJobs() []*JobInf {
	if x != nil {
		return x.Jobs
	}
	return nil
}

type CancelJobsReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CancelJobsReply) Reset() {
	*x = CancelJobsReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_job_job_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CancelJobsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelJobsReply) ProtoMessage() {}

func (x *CancelJobsReply) ProtoReflect() protoreflect.Message {
	mi := &file_proto_job_job_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelJobsReply.ProtoReflect.Descriptor instead.
func (*CancelJobsReply) Descriptor() ([]byte, []int) {
	return file_proto_job_job_proto_rawDescGZIP(), []int{39}
}

type DeleteJobsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JobIds []string `protobuf:"bytes,1,rep,name=job_ids,json=jobIds,proto3" json:"job_ids,omitempty"`
}

func (x *DeleteJobsRequest) Reset() {
	*x = DeleteJobsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_job_job_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteJobsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteJobsRequest) ProtoMessage() {}

func (x *DeleteJobsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_job_job_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteJobsRequest.ProtoReflect.Descriptor instead.
func (*DeleteJobsRequest) Descriptor() ([]byte, []int) {
	return file_proto_job_job_proto_rawDescGZIP(), []int{40}
}

func (x *DeleteJobsRequest) GetJobIds() []string {
	if x != nil {
		return x.JobIds
	}
	return nil
}

type DeleteJobsReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteJobsReply) Reset() {
	*x = DeleteJobsReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_job_job_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteJobsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteJobsReply) ProtoMessage() {}

func (x *DeleteJobsReply) ProtoReflect() protoreflect.Message {
	mi := &file_proto_job_job_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteJobsReply.ProtoReflect.Descriptor instead.
func (*DeleteJobsReply) Descriptor() ([]byte, []int) {
	return file_proto_job_job_proto_rawDescGZIP(), []int{41}
}

// GetInitiatedJobsRequest is an empty request
type GetInitiatedJobsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetInitiatedJobsRequest) Reset() {
	*x = GetInitiatedJobsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_job_job_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInitiatedJobsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInitiatedJobsRequest) ProtoMessage() {}

func (x *GetInitiatedJobsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_job_job_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInitiatedJobsRequest.ProtoReflect.Descriptor instead.
func (*GetInitiatedJobsRequest) Descriptor() ([]byte, []int) {
	return file_proto_job_job_proto_rawDescGZIP(), []int{42}
}

// GetInitiatedJobsResponse responses the initiated job list
type GetInitiatedJobsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Jobs []*Job `protobuf:"bytes,1,rep,name=jobs,proto3" json:"jobs,omitempty"`
}

func (x *GetInitiatedJobsResponse) Reset() {
	*x = GetInitiatedJobsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_job_job_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInitiatedJobsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInitiatedJobsResponse) ProtoMessage() {}

func (x *GetInitiatedJobsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_job_job_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInitiatedJobsResponse.ProtoReflect.Descriptor instead.
func (*GetInitiatedJobsResponse) Descriptor() ([]byte, []int) {
	return file_proto_job_job_proto_rawDescGZIP(), []int{43}
}

func (x *GetInitiatedJobsResponse) GetJobs() []*Job {
	if x != nil {
		return x.Jobs
	}
	return nil
}

// GetJobListRequest gets the job list by the parameters in request
type GetJobListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The job id filter
	JobIdsFilter []string `protobuf:"bytes,1,rep,name=job_ids_filter,json=jobIdsFilter,proto3" json:"job_ids_filter,omitempty"`
	// The sc column filter
	ScFilters []string `protobuf:"bytes,2,rep,name=sc_filters,json=scFilters,proto3" json:"sc_filters,omitempty"`
	// The user column filter
	UserFilters []string `protobuf:"bytes,3,rep,name=user_filters,json=userFilters,proto3" json:"user_filters,omitempty"`
	// The app column filter
	AppFilters []string `protobuf:"bytes,4,rep,name=app_filters,json=appFilters,proto3" json:"app_filters,omitempty"`
	// The state (combine user_cancel) column filter
	StateFilters []DisplayState `protobuf:"varint,5,rep,packed,name=state_filters,json=stateFilters,proto3,enum=job.DisplayState" json:"state_filters,omitempty"`
	// The core column filter
	CoreFilters []string `protobuf:"bytes,6,rep,name=core_filters,json=coreFilters,proto3" json:"core_filters,omitempty"`
	// The project filter
	ProjectFilters []string `protobuf:"bytes,7,rep,name=project_filters,json=projectFilters,proto3" json:"project_filters,omitempty"`
	// The fuzzy search ky
	FuzzyKey string `protobuf:"bytes,8,opt,name=fuzzy_key,json=fuzzyKey,proto3" json:"fuzzy_key,omitempty"`
	// The order by value
	OrderBy string `protobuf:"bytes,9,opt,name=order_by,json=orderBy,proto3" json:"order_by,omitempty"`
	// The sort by ASC: true or false
	SortByAsc bool `protobuf:"varint,10,opt,name=sort_by_asc,json=sortByAsc,proto3" json:"sort_by_asc,omitempty"`
	// @inject_tag: `validate:"required"`
	Page *ptype.Page `protobuf:"bytes,11,opt,name=page,proto3" json:"page,omitempty"`
	// Whether include  the deleted jobs ( Exclude the deleted jobs by default)
	IncludeDeleted bool `protobuf:"varint,12,opt,name=include_deleted,json=includeDeleted,proto3" json:"include_deleted,omitempty"`
	// @inject_tag: `validate:"is_ysid"`
	JobId           string  `protobuf:"bytes,13,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	SubStateFilters []int64 `protobuf:"varint,14,rep,packed,name=sub_state_filters,json=subStateFilters,proto3" json:"sub_state_filters,omitempty"`
	// 开始时间 (create_time >= start_time)
	StartTime *timestamppb.Timestamp `protobuf:"bytes,15,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	// 结束时间 (create_time < end_time)
	EndTime *timestamppb.Timestamp `protobuf:"bytes,16,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	// comany filter
	CompanyFilters []string `protobuf:"bytes,17,rep,name=company_filters,json=companyFilters,proto3" json:"company_filters,omitempty"`
	// jobs set key
	JobsetFilters []string `protobuf:"bytes,19,rep,name=jobset_filters,json=jobsetFilters,proto3" json:"jobset_filters,omitempty"`
	// 回传状态
	DownloadFilters []int64  `protobuf:"varint,20,rep,packed,name=download_filters,json=downloadFilters,proto3" json:"download_filters,omitempty"`
	IsTrialJob      bool     `protobuf:"varint,21,opt,name=is_trial_job,json=isTrialJob,proto3" json:"is_trial_job,omitempty"`
	ProductFilters  []string `protobuf:"bytes,22,rep,name=product_filters,json=productFilters,proto3" json:"product_filters,omitempty"`
	// 超算id
	ScId string `protobuf:"bytes,23,opt,name=sc_id,json=scId,proto3" json:"sc_id,omitempty"`
}

func (x *GetJobListRequest) Reset() {
	*x = GetJobListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_job_job_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetJobListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetJobListRequest) ProtoMessage() {}

func (x *GetJobListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_job_job_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetJobListRequest.ProtoReflect.Descriptor instead.
func (*GetJobListRequest) Descriptor() ([]byte, []int) {
	return file_proto_job_job_proto_rawDescGZIP(), []int{44}
}

func (x *GetJobListRequest) GetJobIdsFilter() []string {
	if x != nil {
		return x.JobIdsFilter
	}
	return nil
}

func (x *GetJobListRequest) GetScFilters() []string {
	if x != nil {
		return x.ScFilters
	}
	return nil
}

func (x *GetJobListRequest) GetUserFilters() []string {
	if x != nil {
		return x.UserFilters
	}
	return nil
}

func (x *GetJobListRequest) GetAppFilters() []string {
	if x != nil {
		return x.AppFilters
	}
	return nil
}

func (x *GetJobListRequest) GetStateFilters() []DisplayState {
	if x != nil {
		return x.StateFilters
	}
	return nil
}

func (x *GetJobListRequest) GetCoreFilters() []string {
	if x != nil {
		return x.CoreFilters
	}
	return nil
}

func (x *GetJobListRequest) GetProjectFilters() []string {
	if x != nil {
		return x.ProjectFilters
	}
	return nil
}

func (x *GetJobListRequest) GetFuzzyKey() string {
	if x != nil {
		return x.FuzzyKey
	}
	return ""
}

func (x *GetJobListRequest) GetOrderBy() string {
	if x != nil {
		return x.OrderBy
	}
	return ""
}

func (x *GetJobListRequest) GetSortByAsc() bool {
	if x != nil {
		return x.SortByAsc
	}
	return false
}

func (x *GetJobListRequest) GetPage() *ptype.Page {
	if x != nil {
		return x.Page
	}
	return nil
}

func (x *GetJobListRequest) GetIncludeDeleted() bool {
	if x != nil {
		return x.IncludeDeleted
	}
	return false
}

func (x *GetJobListRequest) GetJobId() string {
	if x != nil {
		return x.JobId
	}
	return ""
}

func (x *GetJobListRequest) GetSubStateFilters() []int64 {
	if x != nil {
		return x.SubStateFilters
	}
	return nil
}

func (x *GetJobListRequest) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *GetJobListRequest) GetEndTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EndTime
	}
	return nil
}

func (x *GetJobListRequest) GetCompanyFilters() []string {
	if x != nil {
		return x.CompanyFilters
	}
	return nil
}

func (x *GetJobListRequest) GetJobsetFilters() []string {
	if x != nil {
		return x.JobsetFilters
	}
	return nil
}

func (x *GetJobListRequest) GetDownloadFilters() []int64 {
	if x != nil {
		return x.DownloadFilters
	}
	return nil
}

func (x *GetJobListRequest) GetIsTrialJob() bool {
	if x != nil {
		return x.IsTrialJob
	}
	return false
}

func (x *GetJobListRequest) GetProductFilters() []string {
	if x != nil {
		return x.ProductFilters
	}
	return nil
}

func (x *GetJobListRequest) GetScId() string {
	if x != nil {
		return x.ScId
	}
	return ""
}

// GetJobListReply returns the job list information and total number
type GetJobListReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The job list information
	Jobs    []*Job         `protobuf:"bytes,2,rep,name=jobs,proto3" json:"jobs,omitempty"`
	PageCtx *ptype.PageCtx `protobuf:"bytes,3,opt,name=page_ctx,json=pageCtx,proto3" json:"page_ctx,omitempty"`
}

func (x *GetJobListReply) Reset() {
	*x = GetJobListReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_job_job_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetJobListReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetJobListReply) ProtoMessage() {}

func (x *GetJobListReply) ProtoReflect() protoreflect.Message {
	mi := &file_proto_job_job_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetJobListReply.ProtoReflect.Descriptor instead.
func (*GetJobListReply) Descriptor() ([]byte, []int) {
	return file_proto_job_job_proto_rawDescGZIP(), []int{45}
}

func (x *GetJobListReply) GetJobs() []*Job {
	if x != nil {
		return x.Jobs
	}
	return nil
}

func (x *GetJobListReply) GetPageCtx() *ptype.PageCtx {
	if x != nil {
		return x.PageCtx
	}
	return nil
}

// GetJobFilterRequest GetJobFilterRequest
type GetJobFilterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The client id
	ClientId string `protobuf:"bytes,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	// The project filter
	ProjectFilters []string `protobuf:"bytes,2,rep,name=project_filters,json=projectFilters,proto3" json:"project_filters,omitempty"`
	// The fuzzy search ky
	FuzzyKey string `protobuf:"bytes,3,opt,name=fuzzy_key,json=fuzzyKey,proto3" json:"fuzzy_key,omitempty"`
}

func (x *GetJobFilterRequest) Reset() {
	*x = GetJobFilterRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_job_job_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetJobFilterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetJobFilterRequest) ProtoMessage() {}

func (x *GetJobFilterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_job_job_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetJobFilterRequest.ProtoReflect.Descriptor instead.
func (*GetJobFilterRequest) Descriptor() ([]byte, []int) {
	return file_proto_job_job_proto_rawDescGZIP(), []int{46}
}

func (x *GetJobFilterRequest) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *GetJobFilterRequest) GetProjectFilters() []string {
	if x != nil {
		return x.ProjectFilters
	}
	return nil
}

func (x *GetJobFilterRequest) GetFuzzyKey() string {
	if x != nil {
		return x.FuzzyKey
	}
	return ""
}

// GetJobFilterReply replies the filters for app, cpu, state and user
type GetJobFilterReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The all cpu information for filter
	CpuFilter []string `protobuf:"bytes,1,rep,name=cpu_filter,json=cpuFilter,proto3" json:"cpu_filter,omitempty"`
	// The all app information for filter
	AppFilter []string `protobuf:"bytes,2,rep,name=app_filter,json=appFilter,proto3" json:"app_filter,omitempty"`
	// The all state information for filter
	StateFilter []DisplayState `protobuf:"varint,3,rep,packed,name=state_filter,json=stateFilter,proto3,enum=job.DisplayState" json:"state_filter,omitempty"`
	// The all user information for filter
	UserFilter []string `protobuf:"bytes,4,rep,name=user_filter,json=userFilter,proto3" json:"user_filter,omitempty"`
	// The all sub state for filter
	SubStateFilter []int64 `protobuf:"varint,5,rep,packed,name=sub_state_filter,json=subStateFilter,proto3" json:"sub_state_filter,omitempty"`
	// jobs set key
	JobsetFilters []string `protobuf:"bytes,6,rep,name=jobset_filters,json=jobsetFilters,proto3" json:"jobset_filters,omitempty"`
	// 回传状态
	DownloadFilters []int64 `protobuf:"varint,7,rep,packed,name=download_filters,json=downloadFilters,proto3" json:"download_filters,omitempty"`
}

func (x *GetJobFilterReply) Reset() {
	*x = GetJobFilterReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_job_job_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetJobFilterReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetJobFilterReply) ProtoMessage() {}

func (x *GetJobFilterReply) ProtoReflect() protoreflect.Message {
	mi := &file_proto_job_job_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetJobFilterReply.ProtoReflect.Descriptor instead.
func (*GetJobFilterReply) Descriptor() ([]byte, []int) {
	return file_proto_job_job_proto_rawDescGZIP(), []int{47}
}

func (x *GetJobFilterReply) GetCpuFilter() []string {
	if x != nil {
		return x.CpuFilter
	}
	return nil
}

func (x *GetJobFilterReply) GetAppFilter() []string {
	if x != nil {
		return x.AppFilter
	}
	return nil
}

func (x *GetJobFilterReply) GetStateFilter() []DisplayState {
	if x != nil {
		return x.StateFilter
	}
	return nil
}

func (x *GetJobFilterReply) GetUserFilter() []string {
	if x != nil {
		return x.UserFilter
	}
	return nil
}

func (x *GetJobFilterReply) GetSubStateFilter() []int64 {
	if x != nil {
		return x.SubStateFilter
	}
	return nil
}

func (x *GetJobFilterReply) GetJobsetFilters() []string {
	if x != nil {
		return x.JobsetFilters
	}
	return nil
}

func (x *GetJobFilterReply) GetDownloadFilters() []int64 {
	if x != nil {
		return x.DownloadFilters
	}
	return nil
}

// GetJobRuntimeListRequest GetJobRuntimeListRequest
type GetJobRuntimeListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The job id
	JobId string `protobuf:"bytes,1,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
}

func (x *GetJobRuntimeListRequest) Reset() {
	*x = GetJobRuntimeListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_job_job_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetJobRuntimeListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetJobRuntimeListRequest) ProtoMessage() {}

func (x *GetJobRuntimeListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_job_job_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetJobRuntimeListRequest.ProtoReflect.Descriptor instead.
func (*GetJobRuntimeListRequest) Descriptor() ([]byte, []int) {
	return file_proto_job_job_proto_rawDescGZIP(), []int{48}
}

func (x *GetJobRuntimeListRequest) GetJobId() string {
	if x != nil {
		return x.JobId
	}
	return ""
}

// GetJobRuntimeListReply replies the job runtimes
type GetJobRuntimeListReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JobRuntimes []*JobRuntime `protobuf:"bytes,1,rep,name=job_runtimes,json=jobRuntimes,proto3" json:"job_runtimes,omitempty"`
}

func (x *GetJobRuntimeListReply) Reset() {
	*x = GetJobRuntimeListReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_job_job_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetJobRuntimeListReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetJobRuntimeListReply) ProtoMessage() {}

func (x *GetJobRuntimeListReply) ProtoReflect() protoreflect.Message {
	mi := &file_proto_job_job_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetJobRuntimeListReply.ProtoReflect.Descriptor instead.
func (*GetJobRuntimeListReply) Descriptor() ([]byte, []int) {
	return file_proto_job_job_proto_rawDescGZIP(), []int{49}
}

func (x *GetJobRuntimeListReply) GetJobRuntimes() []*JobRuntime {
	if x != nil {
		return x.JobRuntimes
	}
	return nil
}

type SystemTerminalJobRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: `validate:"is_ysid,required"`
	JobId   string `protobuf:"bytes,1,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *SystemTerminalJobRequest) Reset() {
	*x = SystemTerminalJobRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_job_job_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemTerminalJobRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemTerminalJobRequest) ProtoMessage() {}

func (x *SystemTerminalJobRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_job_job_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemTerminalJobRequest.ProtoReflect.Descriptor instead.
func (*SystemTerminalJobRequest) Descriptor() ([]byte, []int) {
	return file_proto_job_job_proto_rawDescGZIP(), []int{50}
}

func (x *SystemTerminalJobRequest) GetJobId() string {
	if x != nil {
		return x.JobId
	}
	return ""
}

func (x *SystemTerminalJobRequest) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type SystemTerminalJobReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Job *Job `protobuf:"bytes,1,opt,name=job,proto3" json:"job,omitempty"`
}

func (x *SystemTerminalJobReply) Reset() {
	*x = SystemTerminalJobReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_job_job_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemTerminalJobReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemTerminalJobReply) ProtoMessage() {}

func (x *SystemTerminalJobReply) ProtoReflect() protoreflect.Message {
	mi := &file_proto_job_job_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemTerminalJobReply.ProtoReflect.Descriptor instead.
func (*SystemTerminalJobReply) Descriptor() ([]byte, []int) {
	return file_proto_job_job_proto_rawDescGZIP(), []int{51}
}

func (x *SystemTerminalJobReply) GetJob() *Job {
	if x != nil {
		return x.Job
	}
	return nil
}

type GetJobRuntimeToArchiveRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ScId string `protobuf:"bytes,1,opt,name=sc_id,json=scId,proto3" json:"sc_id,omitempty"`
}

func (x *GetJobRuntimeToArchiveRequest) Reset() {
	*x = GetJobRuntimeToArchiveRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_job_job_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetJobRuntimeToArchiveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetJobRuntimeToArchiveRequest) ProtoMessage() {}

func (x *GetJobRuntimeToArchiveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_job_job_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetJobRuntimeToArchiveRequest.ProtoReflect.Descriptor instead.
func (*GetJobRuntimeToArchiveRequest) Descriptor() ([]byte, []int) {
	return file_proto_job_job_proto_rawDescGZIP(), []int{52}
}

func (x *GetJobRuntimeToArchiveRequest) GetScId() string {
	if x != nil {
		return x.ScId
	}
	return ""
}

type GetJobRuntimeToArchiveReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JobRuntimes []*JobRuntime `protobuf:"bytes,1,rep,name=job_runtimes,json=jobRuntimes,proto3" json:"job_runtimes,omitempty"`
}

func (x *GetJobRuntimeToArchiveReply) Reset() {
	*x = GetJobRuntimeToArchiveReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_job_job_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetJobRuntimeToArchiveReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetJobRuntimeToArchiveReply) ProtoMessage() {}

func (x *GetJobRuntimeToArchiveReply) ProtoReflect() protoreflect.Message {
	mi := &file_proto_job_job_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetJobRuntimeToArchiveReply.ProtoReflect.Descriptor instead.
func (*GetJobRuntimeToArchiveReply) Descriptor() ([]byte, []int) {
	return file_proto_job_job_proto_rawDescGZIP(), []int{53}
}

func (x *GetJobRuntimeToArchiveReply) GetJobRuntimes() []*JobRuntime {
	if x != nil {
		return x.JobRuntimes
	}
	return nil
}

type SetJobRuntimeArchivedRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: `validate:"is_ysid,required"`
	JobRuntimeId string `protobuf:"bytes,1,opt,name=job_runtime_id,json=jobRuntimeId,proto3" json:"job_runtime_id,omitempty"`
}

func (x *SetJobRuntimeArchivedRequest) Reset() {
	*x = SetJobRuntimeArchivedRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_job_job_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetJobRuntimeArchivedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetJobRuntimeArchivedRequest) ProtoMessage() {}

func (x *SetJobRuntimeArchivedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_job_job_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetJobRuntimeArchivedRequest.ProtoReflect.Descriptor instead.
func (*SetJobRuntimeArchivedRequest) Descriptor() ([]byte, []int) {
	return file_proto_job_job_proto_rawDescGZIP(), []int{54}
}

func (x *SetJobRuntimeArchivedRequest) GetJobRuntimeId() string {
	if x != nil {
		return x.JobRuntimeId
	}
	return ""
}

type SetJobRuntimeArchivedReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JobRuntime *JobRuntime `protobuf:"bytes,1,opt,name=job_runtime,json=jobRuntime,proto3" json:"job_runtime,omitempty"`
}

func (x *SetJobRuntimeArchivedReply) Reset() {
	*x = SetJobRuntimeArchivedReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_job_job_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetJobRuntimeArchivedReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetJobRuntimeArchivedReply) ProtoMessage() {}

func (x *SetJobRuntimeArchivedReply) ProtoReflect() protoreflect.Message {
	mi := &file_proto_job_job_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetJobRuntimeArchivedReply.ProtoReflect.Descriptor instead.
func (*SetJobRuntimeArchivedReply) Descriptor() ([]byte, []int) {
	return file_proto_job_job_proto_rawDescGZIP(), []int{55}
}

func (x *SetJobRuntimeArchivedReply) GetJobRuntime() *JobRuntime {
	if x != nil {
		return x.JobRuntime
	}
	return nil
}

type JobEventLog struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	JobId        string                 `protobuf:"bytes,2,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	JobRuntimeId string                 `protobuf:"bytes,3,opt,name=job_runtime_id,json=jobRuntimeId,proto3" json:"job_runtime_id,omitempty"`
	Event        string                 `protobuf:"bytes,4,opt,name=event,proto3" json:"event,omitempty"`
	State        int64                  `protobuf:"varint,5,opt,name=state,proto3" json:"state,omitempty"`
	SubState     int64                  `protobuf:"varint,6,opt,name=sub_state,json=subState,proto3" json:"sub_state,omitempty"`
	CreateTime   *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
}

func (x *JobEventLog) Reset() {
	*x = JobEventLog{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_job_job_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobEventLog) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobEventLog) ProtoMessage() {}

func (x *JobEventLog) ProtoReflect() protoreflect.Message {
	mi := &file_proto_job_job_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobEventLog.ProtoReflect.Descriptor instead.
func (*JobEventLog) Descriptor() ([]byte, []int) {
	return file_proto_job_job_proto_rawDescGZIP(), []int{56}
}

func (x *JobEventLog) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *JobEventLog) GetJobId() string {
	if x != nil {
		return x.JobId
	}
	return ""
}

func (x *JobEventLog) GetJobRuntimeId() string {
	if x != nil {
		return x.JobRuntimeId
	}
	return ""
}

func (x *JobEventLog) GetEvent() string {
	if x != nil {
		return x.Event
	}
	return ""
}

func (x *JobEventLog) GetState() int64 {
	if x != nil {
		return x.State
	}
	return 0
}

func (x *JobEventLog) GetSubState() int64 {
	if x != nil {
		return x.SubState
	}
	return 0
}

func (x *JobEventLog) GetCreateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CreateTime
	}
	return nil
}

type GetJobEventLogRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: `validate:"is_ysid"`
	JobId string `protobuf:"bytes,1,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	// @inject_tag: `validate:"is_ysid"`
	JobRuntimeId string `protobuf:"bytes,2,opt,name=job_runtime_id,json=jobRuntimeId,proto3" json:"job_runtime_id,omitempty"`
}

func (x *GetJobEventLogRequest) Reset() {
	*x = GetJobEventLogRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_job_job_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetJobEventLogRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetJobEventLogRequest) ProtoMessage() {}

func (x *GetJobEventLogRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_job_job_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetJobEventLogRequest.ProtoReflect.Descriptor instead.
func (*GetJobEventLogRequest) Descriptor() ([]byte, []int) {
	return file_proto_job_job_proto_rawDescGZIP(), []int{57}
}

func (x *GetJobEventLogRequest) GetJobId() string {
	if x != nil {
		return x.JobId
	}
	return ""
}

func (x *GetJobEventLogRequest) GetJobRuntimeId() string {
	if x != nil {
		return x.JobRuntimeId
	}
	return ""
}

type GetJobEventLogReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*JobEventLog `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *GetJobEventLogReply) Reset() {
	*x = GetJobEventLogReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_job_job_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetJobEventLogReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetJobEventLogReply) ProtoMessage() {}

func (x *GetJobEventLogReply) ProtoReflect() protoreflect.Message {
	mi := &file_proto_job_job_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetJobEventLogReply.ProtoReflect.Descriptor instead.
func (*GetJobEventLogReply) Descriptor() ([]byte, []int) {
	return file_proto_job_job_proto_rawDescGZIP(), []int{58}
}

func (x *GetJobEventLogReply) GetList() []*JobEventLog {
	if x != nil {
		return x.List
	}
	return nil
}

type GetTotalNumberOfJobInProjectRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// project_id 工作空间ID
	// @inject_tag: `validate:"is_ysid"`
	ProjectId string `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
}

func (x *GetTotalNumberOfJobInProjectRequest) Reset() {
	*x = GetTotalNumberOfJobInProjectRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_job_job_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTotalNumberOfJobInProjectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTotalNumberOfJobInProjectRequest) ProtoMessage() {}

func (x *GetTotalNumberOfJobInProjectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_job_job_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTotalNumberOfJobInProjectRequest.ProtoReflect.Descriptor instead.
func (*GetTotalNumberOfJobInProjectRequest) Descriptor() ([]byte, []int) {
	return file_proto_job_job_proto_rawDescGZIP(), []int{59}
}

func (x *GetTotalNumberOfJobInProjectRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

type GetTotalNumberOfJobInProjectResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total     int64 `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Completed int64 `protobuf:"varint,2,opt,name=completed,proto3" json:"completed,omitempty"`
}

func (x *GetTotalNumberOfJobInProjectResponse) Reset() {
	*x = GetTotalNumberOfJobInProjectResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_job_job_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTotalNumberOfJobInProjectResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTotalNumberOfJobInProjectResponse) ProtoMessage() {}

func (x *GetTotalNumberOfJobInProjectResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_job_job_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTotalNumberOfJobInProjectResponse.ProtoReflect.Descriptor instead.
func (*GetTotalNumberOfJobInProjectResponse) Descriptor() ([]byte, []int) {
	return file_proto_job_job_proto_rawDescGZIP(), []int{60}
}

func (x *GetTotalNumberOfJobInProjectResponse) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *GetTotalNumberOfJobInProjectResponse) GetCompleted() int64 {
	if x != nil {
		return x.Completed
	}
	return 0
}

type GetTotalCPUTimeInProjectRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// project_id 工作空间ID
	// @inject_tag: `validate:"is_ysid"`
	ProjectId string `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
}

func (x *GetTotalCPUTimeInProjectRequest) Reset() {
	*x = GetTotalCPUTimeInProjectRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_job_job_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTotalCPUTimeInProjectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTotalCPUTimeInProjectRequest) ProtoMessage() {}

func (x *GetTotalCPUTimeInProjectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_job_job_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTotalCPUTimeInProjectRequest.ProtoReflect.Descriptor instead.
func (*GetTotalCPUTimeInProjectRequest) Descriptor() ([]byte, []int) {
	return file_proto_job_job_proto_rawDescGZIP(), []int{61}
}

func (x *GetTotalCPUTimeInProjectRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

type GetTotalCPUTimeInProjectResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64 `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *GetTotalCPUTimeInProjectResponse) Reset() {
	*x = GetTotalCPUTimeInProjectResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_job_job_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTotalCPUTimeInProjectResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTotalCPUTimeInProjectResponse) ProtoMessage() {}

func (x *GetTotalCPUTimeInProjectResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_job_job_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTotalCPUTimeInProjectResponse.ProtoReflect.Descriptor instead.
func (*GetTotalCPUTimeInProjectResponse) Descriptor() ([]byte, []int) {
	return file_proto_job_job_proto_rawDescGZIP(), []int{62}
}

func (x *GetTotalCPUTimeInProjectResponse) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type GetJobByRuntimeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: `validate:"is_ysid,required"`
	JobRuntimeId string `protobuf:"bytes,1,opt,name=job_runtime_id,json=jobRuntimeId,proto3" json:"job_runtime_id,omitempty"`
}

func (x *GetJobByRuntimeRequest) Reset() {
	*x = GetJobByRuntimeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_job_job_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetJobByRuntimeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetJobByRuntimeRequest) ProtoMessage() {}

func (x *GetJobByRuntimeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_job_job_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetJobByRuntimeRequest.ProtoReflect.Descriptor instead.
func (*GetJobByRuntimeRequest) Descriptor() ([]byte, []int) {
	return file_proto_job_job_proto_rawDescGZIP(), []int{63}
}

func (x *GetJobByRuntimeRequest) GetJobRuntimeId() string {
	if x != nil {
		return x.JobRuntimeId
	}
	return ""
}

type GetJobByRuntimeReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Job *Job `protobuf:"bytes,1,opt,name=job,proto3" json:"job,omitempty"`
}

func (x *GetJobByRuntimeReply) Reset() {
	*x = GetJobByRuntimeReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_job_job_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetJobByRuntimeReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetJobByRuntimeReply) ProtoMessage() {}

func (x *GetJobByRuntimeReply) ProtoReflect() protoreflect.Message {
	mi := &file_proto_job_job_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetJobByRuntimeReply.ProtoReflect.Descriptor instead.
func (*GetJobByRuntimeReply) Descriptor() ([]byte, []int) {
	return file_proto_job_job_proto_rawDescGZIP(), []int{64}
}

func (x *GetJobByRuntimeReply) GetJob() *Job {
	if x != nil {
		return x.Job
	}
	return nil
}

type CreateJobBillRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JobId string `protobuf:"bytes,1,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
}

func (x *CreateJobBillRequest) Reset() {
	*x = CreateJobBillRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_job_job_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateJobBillRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateJobBillRequest) ProtoMessage() {}

func (x *CreateJobBillRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_job_job_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateJobBillRequest.ProtoReflect.Descriptor instead.
func (*CreateJobBillRequest) Descriptor() ([]byte, []int) {
	return file_proto_job_job_proto_rawDescGZIP(), []int{65}
}

func (x *CreateJobBillRequest) GetJobId() string {
	if x != nil {
		return x.JobId
	}
	return ""
}

type CreateJobBillReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bill *account_bill.Billing `protobuf:"bytes,1,opt,name=bill,proto3" json:"bill,omitempty"`
}

func (x *CreateJobBillReply) Reset() {
	*x = CreateJobBillReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_job_job_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateJobBillReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateJobBillReply) ProtoMessage() {}

func (x *CreateJobBillReply) ProtoReflect() protoreflect.Message {
	mi := &file_proto_job_job_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateJobBillReply.ProtoReflect.Descriptor instead.
func (*CreateJobBillReply) Descriptor() ([]byte, []int) {
	return file_proto_job_job_proto_rawDescGZIP(), []int{66}
}

func (x *CreateJobBillReply) GetBill() *account_bill.Billing {
	if x != nil {
		return x.Bill
	}
	return nil
}

type VolumeMount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// storage path
	SrcPath string `protobuf:"bytes,1,opt,name=src_path,json=srcPath,proto3" json:"src_path,omitempty"`
	// storage path
	DestPath string `protobuf:"bytes,2,opt,name=dest_path,json=destPath,proto3" json:"dest_path,omitempty"`
}

func (x *VolumeMount) Reset() {
	*x = VolumeMount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_job_job_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VolumeMount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VolumeMount) ProtoMessage() {}

func (x *VolumeMount) ProtoReflect() protoreflect.Message {
	mi := &file_proto_job_job_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VolumeMount.ProtoReflect.Descriptor instead.
func (*VolumeMount) Descriptor() ([]byte, []int) {
	return file_proto_job_job_proto_rawDescGZIP(), []int{67}
}

func (x *VolumeMount) GetSrcPath() string {
	if x != nil {
		return x.SrcPath
	}
	return ""
}

func (x *VolumeMount) GetDestPath() string {
	if x != nil {
		return x.DestPath
	}
	return ""
}

type VolumeMounts struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StorageId string         `protobuf:"bytes,1,opt,name=storage_id,json=storageId,proto3" json:"storage_id,omitempty"`
	Mounts    []*VolumeMount `protobuf:"bytes,2,rep,name=mounts,proto3" json:"mounts,omitempty"`
}

func (x *VolumeMounts) Reset() {
	*x = VolumeMounts{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_job_job_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VolumeMounts) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VolumeMounts) ProtoMessage() {}

func (x *VolumeMounts) ProtoReflect() protoreflect.Message {
	mi := &file_proto_job_job_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VolumeMounts.ProtoReflect.Descriptor instead.
func (*VolumeMounts) Descriptor() ([]byte, []int) {
	return file_proto_job_job_proto_rawDescGZIP(), []int{68}
}

func (x *VolumeMounts) GetStorageId() string {
	if x != nil {
		return x.StorageId
	}
	return ""
}

func (x *VolumeMounts) GetMounts() []*VolumeMount {
	if x != nil {
		return x.Mounts
	}
	return nil
}

type CreateJobWithScheduleV2Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: `validate:"is_ysid,required"`
	ProjectId string          `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	Params    *ScheduleParams `protobuf:"bytes,2,opt,name=params,proto3" json:"params,omitempty"`
	// @inject_tag: `validate:"is_ysid,required"`
	AppId string `protobuf:"bytes,3,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	// @inject_tag: `validate:"is_ysid,required"`
	UserId string `protobuf:"bytes,4,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// @inject_tag: `validate:"required"`
	Name       string      `protobuf:"bytes,7,opt,name=name,proto3" json:"name,omitempty"`
	UserParams *UserParams `protobuf:"bytes,8,opt,name=user_params,json=userParams,proto3" json:"user_params,omitempty"`
	// @inject_tag: `validate:"required"`
	UserParamsVersion string        `protobuf:"bytes,11,opt,name=user_params_version,json=userParamsVersion,proto3" json:"user_params_version,omitempty"`
	VolumeMounts      *VolumeMounts `protobuf:"bytes,12,opt,name=volume_mounts,json=volumeMounts,proto3" json:"volume_mounts,omitempty"`
	// User defined file download blacklist
	FileDownloadBlacklist string `protobuf:"bytes,23,opt,name=file_download_blacklist,json=fileDownloadBlacklist,proto3" json:"file_download_blacklist,omitempty"`
	// Wechat Official Account notification switch
	NotifyOffiaccount bool `protobuf:"varint,24,opt,name=notify_offiaccount,json=notifyOffiaccount,proto3" json:"notify_offiaccount,omitempty"`
}

func (x *CreateJobWithScheduleV2Request) Reset() {
	*x = CreateJobWithScheduleV2Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_job_job_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateJobWithScheduleV2Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateJobWithScheduleV2Request) ProtoMessage() {}

func (x *CreateJobWithScheduleV2Request) ProtoReflect() protoreflect.Message {
	mi := &file_proto_job_job_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateJobWithScheduleV2Request.ProtoReflect.Descriptor instead.
func (*CreateJobWithScheduleV2Request) Descriptor() ([]byte, []int) {
	return file_proto_job_job_proto_rawDescGZIP(), []int{69}
}

func (x *CreateJobWithScheduleV2Request) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *CreateJobWithScheduleV2Request) GetParams() *ScheduleParams {
	if x != nil {
		return x.Params
	}
	return nil
}

func (x *CreateJobWithScheduleV2Request) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *CreateJobWithScheduleV2Request) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *CreateJobWithScheduleV2Request) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateJobWithScheduleV2Request) GetUserParams() *UserParams {
	if x != nil {
		return x.UserParams
	}
	return nil
}

func (x *CreateJobWithScheduleV2Request) GetUserParamsVersion() string {
	if x != nil {
		return x.UserParamsVersion
	}
	return ""
}

func (x *CreateJobWithScheduleV2Request) GetVolumeMounts() *VolumeMounts {
	if x != nil {
		return x.VolumeMounts
	}
	return nil
}

func (x *CreateJobWithScheduleV2Request) GetFileDownloadBlacklist() string {
	if x != nil {
		return x.FileDownloadBlacklist
	}
	return ""
}

func (x *CreateJobWithScheduleV2Request) GetNotifyOffiaccount() bool {
	if x != nil {
		return x.NotifyOffiaccount
	}
	return false
}

type CreateJobWithScheduleV2Reply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JobId string `protobuf:"bytes,1,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
}

func (x *CreateJobWithScheduleV2Reply) Reset() {
	*x = CreateJobWithScheduleV2Reply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_job_job_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateJobWithScheduleV2Reply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateJobWithScheduleV2Reply) ProtoMessage() {}

func (x *CreateJobWithScheduleV2Reply) ProtoReflect() protoreflect.Message {
	mi := &file_proto_job_job_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateJobWithScheduleV2Reply.ProtoReflect.Descriptor instead.
func (*CreateJobWithScheduleV2Reply) Descriptor() ([]byte, []int) {
	return file_proto_job_job_proto_rawDescGZIP(), []int{70}
}

func (x *CreateJobWithScheduleV2Reply) GetJobId() string {
	if x != nil {
		return x.JobId
	}
	return ""
}

type CancelJobRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId string `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	JobId     string `protobuf:"bytes,2,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
}

func (x *CancelJobRequest) Reset() {
	*x = CancelJobRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_job_job_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CancelJobRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelJobRequest) ProtoMessage() {}

func (x *CancelJobRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_job_job_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelJobRequest.ProtoReflect.Descriptor instead.
func (*CancelJobRequest) Descriptor() ([]byte, []int) {
	return file_proto_job_job_proto_rawDescGZIP(), []int{71}
}

func (x *CancelJobRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *CancelJobRequest) GetJobId() string {
	if x != nil {
		return x.JobId
	}
	return ""
}

type CancelJobReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CancelJobReply) Reset() {
	*x = CancelJobReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_job_job_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CancelJobReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelJobReply) ProtoMessage() {}

func (x *CancelJobReply) ProtoReflect() protoreflect.Message {
	mi := &file_proto_job_job_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelJobReply.ProtoReflect.Descriptor instead.
func (*CancelJobReply) Descriptor() ([]byte, []int) {
	return file_proto_job_job_proto_rawDescGZIP(), []int{72}
}

type StatJobSubmitParamsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: `validate:"is_ysid,required"`
	AppRuntimeId string `protobuf:"bytes,1,opt,name=app_runtime_id,json=appRuntimeId,proto3" json:"app_runtime_id,omitempty"`
	// @inject_tag: `validate:"is_ysid"`
	CompanyId string `protobuf:"bytes,2,opt,name=company_id,json=companyId,proto3" json:"company_id,omitempty"`
	// @inject_tag: `validate:"is_ysid"`
	UserId string `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *StatJobSubmitParamsRequest) Reset() {
	*x = StatJobSubmitParamsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_job_job_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatJobSubmitParamsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatJobSubmitParamsRequest) ProtoMessage() {}

func (x *StatJobSubmitParamsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_job_job_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatJobSubmitParamsRequest.ProtoReflect.Descriptor instead.
func (*StatJobSubmitParamsRequest) Descriptor() ([]byte, []int) {
	return file_proto_job_job_proto_rawDescGZIP(), []int{73}
}

func (x *StatJobSubmitParamsRequest) GetAppRuntimeId() string {
	if x != nil {
		return x.AppRuntimeId
	}
	return ""
}

func (x *StatJobSubmitParamsRequest) GetCompanyId() string {
	if x != nil {
		return x.CompanyId
	}
	return ""
}

func (x *StatJobSubmitParamsRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type StatJobSubmitParamsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rate  float64 `protobuf:"fixed64,1,opt,name=rate,proto3" json:"rate,omitempty"`
	Cores int64   `protobuf:"varint,2,opt,name=cores,proto3" json:"cores,omitempty"`
}

func (x *StatJobSubmitParamsResponse) Reset() {
	*x = StatJobSubmitParamsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_job_job_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatJobSubmitParamsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatJobSubmitParamsResponse) ProtoMessage() {}

func (x *StatJobSubmitParamsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_job_job_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatJobSubmitParamsResponse.ProtoReflect.Descriptor instead.
func (*StatJobSubmitParamsResponse) Descriptor() ([]byte, []int) {
	return file_proto_job_job_proto_rawDescGZIP(), []int{74}
}

func (x *StatJobSubmitParamsResponse) GetRate() float64 {
	if x != nil {
		return x.Rate
	}
	return 0
}

func (x *StatJobSubmitParamsResponse) GetCores() int64 {
	if x != nil {
		return x.Cores
	}
	return 0
}

type MonitorLog struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key     string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Content []string `protobuf:"bytes,2,rep,name=content,proto3" json:"content,omitempty"`
}

func (x *MonitorLog) Reset() {
	*x = MonitorLog{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_job_job_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MonitorLog) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MonitorLog) ProtoMessage() {}

func (x *MonitorLog) ProtoReflect() protoreflect.Message {
	mi := &file_proto_job_job_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MonitorLog.ProtoReflect.Descriptor instead.
func (*MonitorLog) Descriptor() ([]byte, []int) {
	return file_proto_job_job_proto_rawDescGZIP(), []int{75}
}

func (x *MonitorLog) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *MonitorLog) GetContent() []string {
	if x != nil {
		return x.Content
	}
	return nil
}

// 更新作业实时日志请求
type UpdateMonitorLogRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Logs []*MonitorLog `protobuf:"bytes,1,rep,name=logs,proto3" json:"logs,omitempty"`
	// @inject_tag: `validate:",required"`
	JobId string `protobuf:"bytes,2,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	// @inject_tag: `validate:"required"`
	Status int32 `protobuf:"varint,3,opt,name=status,proto3" json:"status,omitempty"` // 0 => start, 1 => middle; 2 => end
}

func (x *UpdateMonitorLogRequest) Reset() {
	*x = UpdateMonitorLogRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_job_job_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMonitorLogRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMonitorLogRequest) ProtoMessage() {}

func (x *UpdateMonitorLogRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_job_job_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMonitorLogRequest.ProtoReflect.Descriptor instead.
func (*UpdateMonitorLogRequest) Descriptor() ([]byte, []int) {
	return file_proto_job_job_proto_rawDescGZIP(), []int{76}
}

func (x *UpdateMonitorLogRequest) GetLogs() []*MonitorLog {
	if x != nil {
		return x.Logs
	}
	return nil
}

func (x *UpdateMonitorLogRequest) GetJobId() string {
	if x != nil {
		return x.JobId
	}
	return ""
}

func (x *UpdateMonitorLogRequest) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

// 更新作业实时日志结果
type UpdateMonitorLogResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateMonitorLogResponse) Reset() {
	*x = UpdateMonitorLogResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_job_job_proto_msgTypes[77]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMonitorLogResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMonitorLogResponse) ProtoMessage() {}

func (x *UpdateMonitorLogResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_job_job_proto_msgTypes[77]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMonitorLogResponse.ProtoReflect.Descriptor instead.
func (*UpdateMonitorLogResponse) Descriptor() ([]byte, []int) {
	return file_proto_job_job_proto_rawDescGZIP(), []int{77}
}

type JobRuntimeIDsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RuntimeIDs []string `protobuf:"bytes,1,rep,name=runtimeIDs,proto3" json:"runtimeIDs,omitempty"`
}

func (x *JobRuntimeIDsRequest) Reset() {
	*x = JobRuntimeIDsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_job_job_proto_msgTypes[78]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobRuntimeIDsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobRuntimeIDsRequest) ProtoMessage() {}

func (x *JobRuntimeIDsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_job_job_proto_msgTypes[78]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobRuntimeIDsRequest.ProtoReflect.Descriptor instead.
func (*JobRuntimeIDsRequest) Descriptor() ([]byte, []int) {
	return file_proto_job_job_proto_rawDescGZIP(), []int{78}
}

func (x *JobRuntimeIDsRequest) GetRuntimeIDs() []string {
	if x != nil {
		return x.RuntimeIDs
	}
	return nil
}

type RuntimeInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RuntimeID string `protobuf:"bytes,1,opt,name=runtimeID,proto3" json:"runtimeID,omitempty"`
	JobID     string `protobuf:"bytes,2,opt,name=jobID,proto3" json:"jobID,omitempty"`
}

func (x *RuntimeInfo) Reset() {
	*x = RuntimeInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_job_job_proto_msgTypes[79]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RuntimeInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RuntimeInfo) ProtoMessage() {}

func (x *RuntimeInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_job_job_proto_msgTypes[79]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RuntimeInfo.ProtoReflect.Descriptor instead.
func (*RuntimeInfo) Descriptor() ([]byte, []int) {
	return file_proto_job_job_proto_rawDescGZIP(), []int{79}
}

func (x *RuntimeInfo) GetRuntimeID() string {
	if x != nil {
		return x.RuntimeID
	}
	return ""
}

func (x *RuntimeInfo) GetJobID() string {
	if x != nil {
		return x.JobID
	}
	return ""
}

type JobRuntimeIDsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RuntimeInfos []*RuntimeInfo `protobuf:"bytes,1,rep,name=runtimeInfos,proto3" json:"runtimeInfos,omitempty"`
}

func (x *JobRuntimeIDsResponse) Reset() {
	*x = JobRuntimeIDsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_job_job_proto_msgTypes[80]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobRuntimeIDsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobRuntimeIDsResponse) ProtoMessage() {}

func (x *JobRuntimeIDsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_job_job_proto_msgTypes[80]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobRuntimeIDsResponse.ProtoReflect.Descriptor instead.
func (*JobRuntimeIDsResponse) Descriptor() ([]byte, []int) {
	return file_proto_job_job_proto_rawDescGZIP(), []int{80}
}

func (x *JobRuntimeIDsResponse) GetRuntimeInfos() []*RuntimeInfo {
	if x != nil {
		return x.RuntimeInfos
	}
	return nil
}

type MonitorChart_KV struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Kv []float64 `protobuf:"fixed64,1,rep,packed,name=kv,proto3" json:"kv,omitempty"`
}

func (x *MonitorChart_KV) Reset() {
	*x = MonitorChart_KV{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_job_job_proto_msgTypes[81]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MonitorChart_KV) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MonitorChart_KV) ProtoMessage() {}

func (x *MonitorChart_KV) ProtoReflect() protoreflect.Message {
	mi := &file_proto_job_job_proto_msgTypes[81]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MonitorChart_KV.ProtoReflect.Descriptor instead.
func (*MonitorChart_KV) Descriptor() ([]byte, []int) {
	return file_proto_job_job_proto_rawDescGZIP(), []int{12, 0}
}

func (x *MonitorChart_KV) GetKv() []float64 {
	if x != nil {
		return x.Kv
	}
	return nil
}

var File_proto_job_job_proto protoreflect.FileDescriptor

var file_proto_job_job_proto_rawDesc = []byte{
	0x0a, 0x13, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6a, 0x6f, 0x62, 0x2f, 0x6a, 0x6f, 0x62, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x03, 0x6a, 0x6f, 0x62, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70,
	0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x27, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f,
	0x6a, 0x6f, 0x62, 0x2f, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f,
	0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x20, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x5f, 0x62, 0x69, 0x6c, 0x6c, 0x2f, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x16, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x74, 0x79, 0x70, 0x65,
	0x2f, 0x70, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xe6, 0x0b, 0x0a, 0x03,
	0x4a, 0x6f, 0x62, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64,
	0x12, 0x13, 0x0a, 0x05, 0x73, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x73, 0x63, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x75, 0x73, 0x65, 0x72, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x39, 0x0a, 0x0e, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x75, 0x73, 0x61, 0x67, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x55, 0x73, 0x61, 0x67, 0x65, 0x52, 0x0d, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x55,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x20, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52,
	0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x64, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x63, 0x61,
	0x6e, 0x63, 0x65, 0x6c, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x75, 0x73, 0x65, 0x72,
	0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x62, 0x69, 0x6c,
	0x6c, 0x65, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x42, 0x69, 0x6c,
	0x6c, 0x65, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x65, 0x6e, 0x64, 0x5f, 0x72, 0x65, 0x61, 0x73,
	0x6f, 0x6e, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x65, 0x6e, 0x64, 0x52, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x78, 0x69, 0x74, 0x5f, 0x72, 0x65, 0x61,
	0x73, 0x6f, 0x6e, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x78, 0x69, 0x74, 0x52,
	0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x22, 0x0a, 0x0d, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x64,
	0x5f, 0x73, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x11, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x6d, 0x61,
	0x74, 0x63, 0x68, 0x65, 0x64, 0x53, 0x63, 0x49, 0x64, 0x12, 0x32, 0x0a, 0x15, 0x66, 0x69, 0x6c,
	0x65, 0x5f, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x62, 0x6c, 0x61, 0x63, 0x6b, 0x6c, 0x69,
	0x73, 0x74, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x66, 0x69, 0x6c, 0x65, 0x55, 0x70,
	0x6c, 0x6f, 0x61, 0x64, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x36, 0x0a,
	0x17, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x62,
	0x6c, 0x61, 0x63, 0x6b, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15,
	0x66, 0x69, 0x6c, 0x65, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x42, 0x6c, 0x61, 0x63,
	0x6b, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x65, 0x74, 0x72, 0x79, 0x18, 0x14,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x72, 0x65, 0x74, 0x72, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x70,
	0x70, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x70,
	0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x36, 0x0a, 0x0d, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79,
	0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x17, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x6a,
	0x6f, 0x62, 0x2e, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52,
	0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x27, 0x0a,
	0x0f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x6c,
	0x18, 0x18, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x54, 0x65,
	0x72, 0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x12, 0x36, 0x0a, 0x17, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x5f, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x19, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x54,
	0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x29,
	0x0a, 0x07, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0f, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x4a, 0x6f, 0x62, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65,
	0x52, 0x07, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6d,
	0x70, 0x61, 0x6e, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63,
	0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x6d, 0x65, 0x72, 0x63,
	0x68, 0x61, 0x6e, 0x64, 0x69, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x20, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x64, 0x69, 0x73, 0x65, 0x49, 0x64, 0x12,
	0x1c, 0x0a, 0x0a, 0x6a, 0x6f, 0x62, 0x5f, 0x73, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x21, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x6a, 0x6f, 0x62, 0x53, 0x65, 0x74, 0x49, 0x64, 0x12, 0x20, 0x0a,
	0x0c, 0x6a, 0x6f, 0x62, 0x5f, 0x73, 0x65, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x22, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x6a, 0x6f, 0x62, 0x53, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x19, 0x0a, 0x08, 0x69, 0x73, 0x5f, 0x74, 0x72, 0x69, 0x61, 0x6c, 0x18, 0x23, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x69, 0x73, 0x54, 0x72, 0x69, 0x61, 0x6c, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x65,
	0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x24, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12,
	0x2a, 0x0a, 0x11, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x5f,
	0x7a, 0x6f, 0x6e, 0x65, 0x18, 0x25, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x66, 0x69, 0x6c, 0x65,
	0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x5a, 0x6f, 0x6e, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x65,
	0x78, 0x69, 0x74, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x26, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x65, 0x78, 0x69, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x6f, 0x75, 0x74, 0x70,
	0x75, 0x74, 0x5f, 0x64, 0x69, 0x72, 0x18, 0x27, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x75,
	0x74, 0x70, 0x75, 0x74, 0x44, 0x69, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x7a, 0x6f, 0x6e, 0x65, 0x18,
	0x28, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x7a, 0x6f, 0x6e, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6c,
	0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x29, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x49, 0x64, 0x73, 0x12, 0x1a, 0x0a, 0x08,
	0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x2a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x41, 0x0a, 0x0e, 0x63, 0x61, 0x6e, 0x63,
	0x65, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x6b, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0d, 0x63, 0x61,
	0x6e, 0x63, 0x65, 0x6c, 0x69, 0x6e, 0x67, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x3d, 0x0a, 0x0c, 0x66,
	0x61, 0x69, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x6c, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x66,
	0x61, 0x69, 0x6c, 0x69, 0x6e, 0x67, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x3b, 0x0a, 0x0b, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x64, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x3b, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x65, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x22, 0x4b, 0x0a, 0x06, 0x4a, 0x6f, 0x62, 0x49, 0x6e, 0x66, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49,
	0x64, 0x22, 0x9b, 0x09, 0x0a, 0x0a, 0x4a, 0x6f, 0x62, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x15, 0x0a, 0x06, 0x6a, 0x6f, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x6a, 0x6f, 0x62, 0x49, 0x64, 0x12, 0x13, 0x0a, 0x05, 0x73, 0x63, 0x5f, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x63, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08,
	0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x64, 0x69, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x77, 0x6f, 0x72, 0x6b, 0x44, 0x69, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x73, 0x5f, 0x63, 0x6c,
	0x65, 0x61, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x43, 0x6c, 0x65,
	0x61, 0x6e, 0x12, 0x22, 0x0a, 0x0d, 0x69, 0x73, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x72, 0x65,
	0x61, 0x64, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x73, 0x46, 0x69, 0x6c,
	0x65, 0x52, 0x65, 0x61, 0x64, 0x79, 0x12, 0x28, 0x0a, 0x10, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75,
	0x6c, 0x65, 0x72, 0x5f, 0x6a, 0x6f, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x72, 0x4a, 0x6f, 0x62, 0x49, 0x64,
	0x12, 0x3c, 0x0a, 0x0f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x61, 0x73, 0x73,
	0x69, 0x67, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6a, 0x6f, 0x62, 0x2e,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x52, 0x0e,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x12, 0x19,
	0x0a, 0x08, 0x63, 0x70, 0x75, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x07, 0x63, 0x70, 0x75, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x63, 0x5f,
	0x61, 0x74, 0x74, 0x72, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x63, 0x41,
	0x74, 0x74, 0x72, 0x73, 0x12, 0x2b, 0x0a, 0x11, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x5f, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x10, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x12, 0x24, 0x0a, 0x0e, 0x61, 0x70, 0x70, 0x5f, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x70, 0x70, 0x52, 0x75,
	0x6e, 0x74, 0x69, 0x6d, 0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x69, 0x6c, 0x6c, 0x69,
	0x6e, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x69, 0x6c,
	0x6c, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x68, 0x61, 0x76, 0x65, 0x5f, 0x72,
	0x65, 0x73, 0x69, 0x64, 0x75, 0x61, 0x6c, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x68,
	0x61, 0x76, 0x65, 0x52, 0x65, 0x73, 0x69, 0x64, 0x75, 0x61, 0x6c, 0x12, 0x48, 0x0a, 0x0d, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x23, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x4d, 0x61, 0x70,
	0x57, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x52, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x24, 0x0a, 0x0e, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x5f,
	0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x75,
	0x70, 0x6c, 0x6f, 0x61, 0x64, 0x54, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x64,
	0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69, 0x64, 0x18,
	0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x54,
	0x61, 0x73, 0x6b, 0x49, 0x64, 0x12, 0x2b, 0x0a, 0x11, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61,
	0x64, 0x5f, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x18, 0x12, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x10, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68,
	0x65, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x73, 0x5f, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65,
	0x64, 0x18, 0x13, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x41, 0x72, 0x63, 0x68, 0x69,
	0x76, 0x65, 0x64, 0x12, 0x35, 0x0a, 0x17, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x5f, 0x66, 0x69,
	0x6c, 0x65, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x5f, 0x72, 0x75, 0x6c, 0x65, 0x18, 0x14,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x46, 0x69, 0x6c, 0x65,
	0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x75, 0x6c, 0x65, 0x12, 0x3b, 0x0a, 0x0b, 0x75, 0x70,
	0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x64, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x75, 0x70, 0x6c,
	0x6f, 0x61, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x39, 0x0a, 0x0a, 0x71, 0x75, 0x65, 0x75, 0x65,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x65, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x71, 0x75, 0x65, 0x75, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x39, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x66, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x35, 0x0a,
	0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x67, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x65, 0x6e, 0x64,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x3b, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x68, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x3b, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x69, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x3f,
	0x0a, 0x0d, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x6a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x0c, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x22,
	0x3a, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1b,
	0x0a, 0x09, 0x73, 0x75, 0x62, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x73, 0x75, 0x62, 0x53, 0x74, 0x61, 0x74, 0x65, 0x22, 0x39, 0x0a, 0x0d, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x55, 0x73, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x70, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x70, 0x75, 0x73,
	0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x22, 0x3a, 0x0a, 0x0e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x70, 0x75, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x70, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x05,
	0x6e, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6e, 0x6f, 0x64,
	0x65, 0x73, 0x22, 0x2a, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x6f, 0x6c, 0x75, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x44,
	0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x09, 0x73, 0x6f, 0x6c, 0x75, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x6a, 0x6f, 0x62,
	0x2e, 0x53, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x73, 0x6f, 0x6c, 0x75, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x22, 0x5e, 0x0a, 0x08, 0x53, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x08, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x4c, 0x69, 0x63,
	0x65, 0x6e, 0x73, 0x65, 0x52, 0x08, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x73, 0x12, 0x14,
	0x0a, 0x05, 0x73, 0x63, 0x49, 0x44, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x73,
	0x63, 0x49, 0x44, 0x73, 0x22, 0x63, 0x0a, 0x07, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x61, 0x70, 0x70, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x61, 0x70, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x70, 0x70,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61,
	0x70, 0x70, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x6c, 0x69, 0x63,
	0x65, 0x6e, 0x73, 0x65, 0x49, 0x44, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x6c,
	0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x49, 0x44, 0x73, 0x22, 0x99, 0x05, 0x0a, 0x1c, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x4a, 0x6f, 0x62, 0x57, 0x69, 0x74, 0x68, 0x53, 0x6f, 0x6c, 0x75, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2b, 0x0a, 0x06, 0x70, 0x61,
	0x72, 0x61, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6a, 0x6f, 0x62,
	0x2e, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52,
	0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x15, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x17,
	0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x30, 0x0a, 0x0b, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x6a, 0x6f, 0x62, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x0a,
	0x75, 0x73, 0x65, 0x72, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x65, 0x70,
	0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x2e,
	0x0a, 0x13, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x5f, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x75, 0x73, 0x65,
	0x72, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x3d,
	0x0a, 0x10, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x69, 0x6e,
	0x66, 0x6f, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x55,
	0x70, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0e, 0x75,
	0x70, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x27, 0x0a,
	0x06, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x6a, 0x6f, 0x62, 0x2e, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x06,
	0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x32, 0x0a, 0x15, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x75, 0x70,
	0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x62, 0x6c, 0x61, 0x63, 0x6b, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x16,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x66, 0x69, 0x6c, 0x65, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64,
	0x42, 0x6c, 0x61, 0x63, 0x6b, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x36, 0x0a, 0x17, 0x66, 0x69, 0x6c,
	0x65, 0x5f, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x62, 0x6c, 0x61, 0x63, 0x6b,
	0x6c, 0x69, 0x73, 0x74, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x66, 0x69, 0x6c, 0x65,
	0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x6c, 0x69, 0x73,
	0x74, 0x12, 0x2d, 0x0a, 0x12, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x5f, 0x6f, 0x66, 0x66, 0x69,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x18, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x6e,
	0x6f, 0x74, 0x69, 0x66, 0x79, 0x4f, 0x66, 0x66, 0x69, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x23, 0x0a, 0x0d, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x19, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f,
	0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x56, 0x0a, 0x1a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4a,
	0x6f, 0x62, 0x57, 0x69, 0x74, 0x68, 0x53, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x1a, 0x0a, 0x03, 0x6a, 0x6f, 0x62, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x08, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x4a, 0x6f, 0x62, 0x52, 0x03, 0x6a, 0x6f, 0x62, 0x12,
	0x1c, 0x0a, 0x04, 0x6a, 0x6f, 0x62, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x08, 0x2e,
	0x6a, 0x6f, 0x62, 0x2e, 0x4a, 0x6f, 0x62, 0x52, 0x04, 0x6a, 0x6f, 0x62, 0x73, 0x22, 0x62, 0x0a,
	0x0c, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x43, 0x68, 0x61, 0x72, 0x74, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x2a, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x43, 0x68, 0x61, 0x72,
	0x74, 0x2e, 0x4b, 0x56, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x1a, 0x14, 0x0a, 0x02, 0x4b,
	0x56, 0x12, 0x0e, 0x0a, 0x02, 0x6b, 0x76, 0x18, 0x01, 0x20, 0x03, 0x28, 0x01, 0x52, 0x02, 0x6b,
	0x76, 0x22, 0x75, 0x0a, 0x19, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x6f, 0x6e, 0x69, 0x74,
	0x6f, 0x72, 0x43, 0x68, 0x61, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x29,
	0x0a, 0x06, 0x63, 0x68, 0x61, 0x72, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x43, 0x68, 0x61, 0x72,
	0x74, 0x52, 0x06, 0x63, 0x68, 0x61, 0x72, 0x74, 0x73, 0x12, 0x15, 0x0a, 0x06, 0x6a, 0x6f, 0x62,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6a, 0x6f, 0x62, 0x49, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x1c, 0x0a, 0x1a, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x43, 0x68, 0x61, 0x72, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2f, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x6e,
	0x69, 0x74, 0x6f, 0x72, 0x43, 0x68, 0x61, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x15, 0x0a, 0x06, 0x6a, 0x6f, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x6a, 0x6f, 0x62, 0x49, 0x64, 0x22, 0x44, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x4d, 0x6f,
	0x6e, 0x69, 0x74, 0x6f, 0x72, 0x43, 0x68, 0x61, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x29, 0x0a, 0x06, 0x63, 0x68, 0x61, 0x72, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72,
	0x43, 0x68, 0x61, 0x72, 0x74, 0x52, 0x06, 0x63, 0x68, 0x61, 0x72, 0x74, 0x73, 0x22, 0x3e, 0x0a,
	0x0d, 0x47, 0x65, 0x74, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d,
	0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x22, 0x29, 0x0a,
	0x0b, 0x47, 0x65, 0x74, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x1a, 0x0a, 0x03,
	0x6a, 0x6f, 0x62, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x6a, 0x6f, 0x62, 0x2e,
	0x4a, 0x6f, 0x62, 0x52, 0x03, 0x6a, 0x6f, 0x62, 0x22, 0x27, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x53,
	0x43, 0x4a, 0x6f, 0x62, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x13, 0x0a, 0x05,
	0x73, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x63, 0x49,
	0x64, 0x22, 0x2e, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x53, 0x43, 0x4a, 0x6f, 0x62, 0x73, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x1c, 0x0a, 0x04, 0x6a, 0x6f, 0x62, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x08, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x4a, 0x6f, 0x62, 0x52, 0x04, 0x6a, 0x6f, 0x62,
	0x73, 0x22, 0xaa, 0x01, 0x0a, 0x0e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x33, 0x0a, 0x16, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x66,
	0x69, 0x6c, 0x65, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x14,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x46, 0x69, 0x6c, 0x65,
	0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x69, 0x6c,
	0x65, 0x5f, 0x7a, 0x6f, 0x6e, 0x65, 0x18, 0xc8, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66,
	0x69, 0x6c, 0x65, 0x5a, 0x6f, 0x6e, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x24, 0x0a, 0x0e, 0x73, 0x79, 0x6e, 0x63,
	0x5f, 0x72, 0x75, 0x6e, 0x6e, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x73, 0x79, 0x6e, 0x63, 0x52, 0x75, 0x6e, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x22, 0x59,
	0x0a, 0x0a, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x18, 0x0a, 0x07,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x6f, 0x72,
	0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x7a, 0x6f, 0x6e, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x7a, 0x6f, 0x6e, 0x65, 0x22, 0x33, 0x0a, 0x0a, 0x55, 0x73, 0x65,
	0x72, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x25, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x52, 0x65, 0x71, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x22, 0x7f,
	0x0a, 0x08, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12, 0x21, 0x0a, 0x0c,
	0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x73, 0x6c, 0x61, 0x76, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x53, 0x6c, 0x61, 0x76, 0x65, 0x22,
	0xc0, 0x05, 0x0a, 0x1c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4a, 0x6f, 0x62, 0x57, 0x69, 0x74,
	0x68, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x2b, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x15, 0x0a,
	0x06, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61,
	0x70, 0x70, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a,
	0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x30,
	0x0a, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x73, 0x52, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73,
	0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12,
	0x23, 0x0a, 0x0d, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65,
	0x6e, 0x74, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x13, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x70, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x11, 0x75, 0x73, 0x65, 0x72, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x3d, 0x0a, 0x10, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x66,
	0x69, 0x6c, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13,
	0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x0e, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x27, 0x0a, 0x06, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x06, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x1d, 0x0a, 0x0a,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x32, 0x0a, 0x15, 0x66,
	0x69, 0x6c, 0x65, 0x5f, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x62, 0x6c, 0x61, 0x63, 0x6b,
	0x6c, 0x69, 0x73, 0x74, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x66, 0x69, 0x6c, 0x65,
	0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x6c, 0x69, 0x73, 0x74, 0x12,
	0x36, 0x0a, 0x17, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64,
	0x5f, 0x62, 0x6c, 0x61, 0x63, 0x6b, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x15, 0x66, 0x69, 0x6c, 0x65, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x42, 0x6c,
	0x61, 0x63, 0x6b, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x2d, 0x0a, 0x12, 0x6e, 0x6f, 0x74, 0x69, 0x66,
	0x79, 0x5f, 0x6f, 0x66, 0x66, 0x69, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x18, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x11, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x4f, 0x66, 0x66, 0x69, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73,
	0x65, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x19, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x6c, 0x69, 0x63,
	0x65, 0x6e, 0x73, 0x65, 0x49, 0x64, 0x73, 0x12, 0x29, 0x0a, 0x08, 0x73, 0x6f, 0x6c, 0x75, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x6a, 0x6f, 0x62, 0x2e,
	0x53, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0x4e, 0x0a, 0x0e, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64,
	0x5f, 0x73, 0x63, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x6c, 0x65, 0x63,
	0x74, 0x65, 0x64, 0x53, 0x63, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6f, 0x72,
	0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x69, 0x6e, 0x43, 0x6f, 0x72,
	0x65, 0x73, 0x22, 0x56, 0x0a, 0x1a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4a, 0x6f, 0x62, 0x57,
	0x69, 0x74, 0x68, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x1a, 0x0a, 0x03, 0x6a, 0x6f, 0x62, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e,
	0x6a, 0x6f, 0x62, 0x2e, 0x4a, 0x6f, 0x62, 0x52, 0x03, 0x6a, 0x6f, 0x62, 0x12, 0x1c, 0x0a, 0x04,
	0x6a, 0x6f, 0x62, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x6a, 0x6f, 0x62,
	0x2e, 0x4a, 0x6f, 0x62, 0x52, 0x04, 0x6a, 0x6f, 0x62, 0x73, 0x22, 0x2f, 0x0a, 0x16, 0x53, 0x65,
	0x74, 0x4a, 0x6f, 0x62, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x61, 0x64, 0x79, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x6a, 0x6f, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6a, 0x6f, 0x62, 0x49, 0x64, 0x22, 0x32, 0x0a, 0x14, 0x53,
	0x65, 0x74, 0x4a, 0x6f, 0x62, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x61, 0x64, 0x79, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x1a, 0x0a, 0x03, 0x6a, 0x6f, 0x62, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x08, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x4a, 0x6f, 0x62, 0x52, 0x03, 0x6a, 0x6f, 0x62, 0x22,
	0x2f, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x4a, 0x6f, 0x62, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x13, 0x0a, 0x05, 0x73,
	0x63, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x63, 0x49, 0x64,
	0x22, 0x36, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x4a, 0x6f, 0x62, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x1c, 0x0a, 0x04, 0x6a, 0x6f,
	0x62, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x4a,
	0x6f, 0x62, 0x52, 0x04, 0x6a, 0x6f, 0x62, 0x73, 0x22, 0x8a, 0x01, 0x0a, 0x16, 0x53, 0x65, 0x74,
	0x4a, 0x6f, 0x62, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x6a, 0x6f, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x6a, 0x6f, 0x62, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x09, 0x73, 0x63,
	0x5f, 0x6a, 0x6f, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73,
	0x63, 0x4a, 0x6f, 0x62, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x03, 0x72, 0x65, 0x73, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x03, 0x72, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x32, 0x0a, 0x14, 0x53, 0x65, 0x74, 0x4a, 0x6f, 0x62, 0x53,
	0x75, 0x62, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x1a, 0x0a,
	0x03, 0x6a, 0x6f, 0x62, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x6a, 0x6f, 0x62,
	0x2e, 0x4a, 0x6f, 0x62, 0x52, 0x03, 0x6a, 0x6f, 0x62, 0x22, 0xf1, 0x03, 0x0a, 0x1b, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x53, 0x43, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x4a,
	0x6f, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x6a, 0x6f, 0x62,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6a, 0x6f, 0x62, 0x49, 0x64,
	0x12, 0x20, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0a, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x72, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x64, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x72, 0x75,
	0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x39, 0x0a,
	0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x35, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x19, 0x0a, 0x08, 0x6e, 0x75, 0x6d, 0x5f, 0x63, 0x75, 0x70, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x07, 0x6e, 0x75, 0x6d, 0x43, 0x75, 0x70, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x6e, 0x75,
	0x6d, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6e,
	0x75, 0x6d, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x78, 0x69, 0x74, 0x5f,
	0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x78,
	0x69, 0x74, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x65, 0x6e, 0x64,
	0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70,
	0x65, 0x6e, 0x64, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x3b, 0x0a, 0x0b, 0x73, 0x75, 0x62,
	0x6d, 0x69, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x73, 0x75, 0x62, 0x6d,
	0x69, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75,
	0x6c, 0x65, 0x72, 0x5f, 0x6a, 0x6f, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x72, 0x4a, 0x6f, 0x62, 0x49, 0x64,
	0x12, 0x1b, 0x0a, 0x09, 0x65, 0x78, 0x69, 0x74, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x78, 0x69, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x37, 0x0a,
	0x19, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x43, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c,
	0x65, 0x64, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x1a, 0x0a, 0x03, 0x6a, 0x6f,
	0x62, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x4a, 0x6f,
	0x62, 0x52, 0x03, 0x6a, 0x6f, 0x62, 0x22, 0x2c, 0x0a, 0x11, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c,
	0x4a, 0x6f, 0x62, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x6a,
	0x6f, 0x62, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x6a, 0x6f,
	0x62, 0x49, 0x64, 0x73, 0x22, 0x34, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x4a, 0x6f, 0x62, 0x49, 0x6e,
	0x66, 0x6f, 0x42, 0x79, 0x4a, 0x6f, 0x62, 0x49, 0x44, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x17, 0x0a, 0x07, 0x6a, 0x6f, 0x62, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x03, 0x52, 0x06, 0x6a, 0x6f, 0x62, 0x49, 0x64, 0x73, 0x22, 0x3b, 0x0a, 0x18, 0x47, 0x65,
	0x74, 0x4a, 0x6f, 0x62, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x79, 0x4a, 0x6f, 0x62, 0x49, 0x44, 0x73,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x1f, 0x0a, 0x04, 0x6a, 0x6f, 0x62, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x4a, 0x6f, 0x62, 0x49, 0x6e,
	0x66, 0x52, 0x04, 0x6a, 0x6f, 0x62, 0x73, 0x22, 0x11, 0x0a, 0x0f, 0x43, 0x61, 0x6e, 0x63, 0x65,
	0x6c, 0x4a, 0x6f, 0x62, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x2c, 0x0a, 0x11, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x4a, 0x6f, 0x62, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x17, 0x0a, 0x07, 0x6a, 0x6f, 0x62, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x06, 0x6a, 0x6f, 0x62, 0x49, 0x64, 0x73, 0x22, 0x11, 0x0a, 0x0f, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x4a, 0x6f, 0x62, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x19, 0x0a, 0x17, 0x47,
	0x65, 0x74, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x65, 0x64, 0x4a, 0x6f, 0x62, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x38, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x69,
	0x74, 0x69, 0x61, 0x74, 0x65, 0x64, 0x4a, 0x6f, 0x62, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x1c, 0x0a, 0x04, 0x6a, 0x6f, 0x62, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x08, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x4a, 0x6f, 0x62, 0x52, 0x04, 0x6a, 0x6f, 0x62, 0x73,
	0x22, 0xd2, 0x06, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x4a, 0x6f, 0x62, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x0e, 0x6a, 0x6f, 0x62, 0x5f, 0x69, 0x64,
	0x73, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c,
	0x6a, 0x6f, 0x62, 0x49, 0x64, 0x73, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a,
	0x73, 0x63, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x09, 0x73, 0x63, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x12, 0x1f,
	0x0a, 0x0b, 0x61, 0x70, 0x70, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x70, 0x70, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x12,
	0x36, 0x0a, 0x0d, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73,
	0x18, 0x05, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x44, 0x69, 0x73,
	0x70, 0x6c, 0x61, 0x79, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x0c, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x72, 0x65, 0x5f,
	0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x63,
	0x6f, 0x72, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x12, 0x27, 0x0a, 0x0f, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x07, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x46, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x75, 0x7a, 0x7a, 0x79, 0x5f, 0x6b, 0x65, 0x79,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x75, 0x7a, 0x7a, 0x79, 0x4b, 0x65, 0x79,
	0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x62, 0x79, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x12, 0x1e, 0x0a, 0x0b, 0x73,
	0x6f, 0x72, 0x74, 0x5f, 0x62, 0x79, 0x5f, 0x61, 0x73, 0x63, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x09, 0x73, 0x6f, 0x72, 0x74, 0x42, 0x79, 0x41, 0x73, 0x63, 0x12, 0x1f, 0x0a, 0x04, 0x70,
	0x61, 0x67, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x70, 0x74, 0x79, 0x70,
	0x65, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x27, 0x0a, 0x0f,
	0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x6a, 0x6f, 0x62, 0x5f, 0x69, 0x64, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6a, 0x6f, 0x62, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x11,
	0x73, 0x75, 0x62, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x73, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x03, 0x52, 0x0f, 0x73, 0x75, 0x62, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x12, 0x39, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x35, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x6f,
	0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x11, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x46, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x6a, 0x6f, 0x62, 0x73, 0x65, 0x74, 0x5f, 0x66, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x13, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0d, 0x6a, 0x6f, 0x62,
	0x73, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x12, 0x29, 0x0a, 0x10, 0x64, 0x6f,
	0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x14,
	0x20, 0x03, 0x28, 0x03, 0x52, 0x0f, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x73, 0x12, 0x20, 0x0a, 0x0c, 0x69, 0x73, 0x5f, 0x74, 0x72, 0x69, 0x61,
	0x6c, 0x5f, 0x6a, 0x6f, 0x62, 0x18, 0x15, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x54,
	0x72, 0x69, 0x61, 0x6c, 0x4a, 0x6f, 0x62, 0x12, 0x27, 0x0a, 0x0f, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x16, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x0e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73,
	0x12, 0x13, 0x0a, 0x05, 0x73, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x73, 0x63, 0x49, 0x64, 0x22, 0x5a, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x4a, 0x6f, 0x62, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x1c, 0x0a, 0x04, 0x6a, 0x6f, 0x62, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x4a, 0x6f, 0x62,
	0x52, 0x04, 0x6a, 0x6f, 0x62, 0x73, 0x12, 0x29, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x63,
	0x74, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x74, 0x79, 0x70, 0x65,
	0x2e, 0x50, 0x61, 0x67, 0x65, 0x43, 0x74, 0x78, 0x52, 0x07, 0x70, 0x61, 0x67, 0x65, 0x43, 0x74,
	0x78, 0x22, 0x78, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x4a, 0x6f, 0x62, 0x46, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0e,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x12, 0x1b,
	0x0a, 0x09, 0x66, 0x75, 0x7a, 0x7a, 0x79, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x66, 0x75, 0x7a, 0x7a, 0x79, 0x4b, 0x65, 0x79, 0x22, 0xa4, 0x02, 0x0a, 0x11,
	0x47, 0x65, 0x74, 0x4a, 0x6f, 0x62, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x70, 0x75, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x63, 0x70, 0x75, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x70, 0x70, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x61, 0x70, 0x70, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12,
	0x34, 0x0a, 0x0c, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x44, 0x69, 0x73, 0x70,
	0x6c, 0x61, 0x79, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x65, 0x46,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x66, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x73, 0x65, 0x72,
	0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x28, 0x0a, 0x10, 0x73, 0x75, 0x62, 0x5f, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x05, 0x20, 0x03, 0x28, 0x03,
	0x52, 0x0e, 0x73, 0x75, 0x62, 0x53, 0x74, 0x61, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x12, 0x25, 0x0a, 0x0e, 0x6a, 0x6f, 0x62, 0x73, 0x65, 0x74, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0d, 0x6a, 0x6f, 0x62, 0x73, 0x65, 0x74,
	0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x12, 0x29, 0x0a, 0x10, 0x64, 0x6f, 0x77, 0x6e, 0x6c,
	0x6f, 0x61, 0x64, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28,
	0x03, 0x52, 0x0f, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x73, 0x22, 0x31, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x4a, 0x6f, 0x62, 0x52, 0x75, 0x6e, 0x74,
	0x69, 0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x15,
	0x0a, 0x06, 0x6a, 0x6f, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x6a, 0x6f, 0x62, 0x49, 0x64, 0x22, 0x4c, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x4a, 0x6f, 0x62, 0x52,
	0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12,
	0x32, 0x0a, 0x0c, 0x6a, 0x6f, 0x62, 0x5f, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x4a, 0x6f, 0x62, 0x52,
	0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x52, 0x0b, 0x6a, 0x6f, 0x62, 0x52, 0x75, 0x6e, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x22, 0x4b, 0x0a, 0x18, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x54, 0x65, 0x72,
	0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x15, 0x0a, 0x06, 0x6a, 0x6f, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x6a, 0x6f, 0x62, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x22, 0x34, 0x0a, 0x16, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e,
	0x61, 0x6c, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x1a, 0x0a, 0x03, 0x6a, 0x6f,
	0x62, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x4a, 0x6f,
	0x62, 0x52, 0x03, 0x6a, 0x6f, 0x62, 0x22, 0x34, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x4a, 0x6f, 0x62,
	0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x54, 0x6f, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x13, 0x0a, 0x05, 0x73, 0x63, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x63, 0x49, 0x64, 0x22, 0x51, 0x0a, 0x1b,
	0x47, 0x65, 0x74, 0x4a, 0x6f, 0x62, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x54, 0x6f, 0x41,
	0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x32, 0x0a, 0x0c, 0x6a,
	0x6f, 0x62, 0x5f, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0f, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x4a, 0x6f, 0x62, 0x52, 0x75, 0x6e, 0x74, 0x69,
	0x6d, 0x65, 0x52, 0x0b, 0x6a, 0x6f, 0x62, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x22,
	0x44, 0x0a, 0x1c, 0x53, 0x65, 0x74, 0x4a, 0x6f, 0x62, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65,
	0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x24, 0x0a, 0x0e, 0x6a, 0x6f, 0x62, 0x5f, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6a, 0x6f, 0x62, 0x52, 0x75, 0x6e, 0x74,
	0x69, 0x6d, 0x65, 0x49, 0x64, 0x22, 0x4e, 0x0a, 0x1a, 0x53, 0x65, 0x74, 0x4a, 0x6f, 0x62, 0x52,
	0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x64, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x30, 0x0a, 0x0b, 0x6a, 0x6f, 0x62, 0x5f, 0x72, 0x75, 0x6e, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x4a,
	0x6f, 0x62, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x52, 0x0a, 0x6a, 0x6f, 0x62, 0x52, 0x75,
	0x6e, 0x74, 0x69, 0x6d, 0x65, 0x22, 0xe0, 0x01, 0x0a, 0x0b, 0x4a, 0x6f, 0x62, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x4c, 0x6f, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x6a, 0x6f, 0x62, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6a, 0x6f, 0x62, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0e,
	0x6a, 0x6f, 0x62, 0x5f, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6a, 0x6f, 0x62, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65,
	0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1b,
	0x0a, 0x09, 0x73, 0x75, 0x62, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x73, 0x75, 0x62, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x3b, 0x0a, 0x0b, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x54, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x4a,
	0x6f, 0x62, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x15, 0x0a, 0x06, 0x6a, 0x6f, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x6a, 0x6f, 0x62, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0e, 0x6a, 0x6f, 0x62, 0x5f,
	0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x6a, 0x6f, 0x62, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x49, 0x64, 0x22, 0x3b,
	0x0a, 0x13, 0x47, 0x65, 0x74, 0x4a, 0x6f, 0x62, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4c, 0x6f, 0x67,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x24, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x4a, 0x6f, 0x62, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x4c, 0x6f, 0x67, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x44, 0x0a, 0x23, 0x47,
	0x65, 0x74, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x4a,
	0x6f, 0x62, 0x49, 0x6e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49,
	0x64, 0x22, 0x5a, 0x0a, 0x24, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x4f, 0x66, 0x4a, 0x6f, 0x62, 0x49, 0x6e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12,
	0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x22, 0x40, 0x0a,
	0x1f, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x50, 0x55, 0x54, 0x69, 0x6d, 0x65,
	0x49, 0x6e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x22,
	0x38, 0x0a, 0x20, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x50, 0x55, 0x54, 0x69,
	0x6d, 0x65, 0x49, 0x6e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x3e, 0x0a, 0x16, 0x47, 0x65, 0x74,
	0x4a, 0x6f, 0x62, 0x42, 0x79, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x0e, 0x6a, 0x6f, 0x62, 0x5f, 0x72, 0x75, 0x6e, 0x74, 0x69,
	0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6a, 0x6f, 0x62,
	0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x49, 0x64, 0x22, 0x32, 0x0a, 0x14, 0x47, 0x65, 0x74,
	0x4a, 0x6f, 0x62, 0x42, 0x79, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x1a, 0x0a, 0x03, 0x6a, 0x6f, 0x62, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08,
	0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x4a, 0x6f, 0x62, 0x52, 0x03, 0x6a, 0x6f, 0x62, 0x22, 0x2d, 0x0a,
	0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4a, 0x6f, 0x62, 0x42, 0x69, 0x6c, 0x6c, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x6a, 0x6f, 0x62, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6a, 0x6f, 0x62, 0x49, 0x64, 0x22, 0x3f, 0x0a, 0x12,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4a, 0x6f, 0x62, 0x42, 0x69, 0x6c, 0x6c, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x29, 0x0a, 0x04, 0x62, 0x69, 0x6c, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x62, 0x69, 0x6c, 0x6c, 0x2e,
	0x42, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x52, 0x04, 0x62, 0x69, 0x6c, 0x6c, 0x22, 0x45, 0x0a,
	0x0b, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x4d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x19, 0x0a, 0x08,
	0x73, 0x72, 0x63, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x73, 0x72, 0x63, 0x50, 0x61, 0x74, 0x68, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x65, 0x73, 0x74, 0x5f,
	0x70, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x73, 0x74,
	0x50, 0x61, 0x74, 0x68, 0x22, 0x57, 0x0a, 0x0c, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x4d, 0x6f,
	0x75, 0x6e, 0x74, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67,
	0x65, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x06, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65,
	0x4d, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x06, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x22, 0xb1, 0x03,
	0x0a, 0x1e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4a, 0x6f, 0x62, 0x57, 0x69, 0x74, 0x68, 0x53,
	0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x56, 0x32, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12,
	0x2b, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x13, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x73, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x15, 0x0a, 0x06,
	0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x70,
	0x70, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x30, 0x0a, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x12, 0x2e, 0x0a, 0x13, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x11, 0x75, 0x73, 0x65, 0x72, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x36, 0x0a, 0x0d, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x5f, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6a, 0x6f, 0x62, 0x2e,
	0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x4d, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x52, 0x0c, 0x76, 0x6f,
	0x6c, 0x75, 0x6d, 0x65, 0x4d, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x12, 0x36, 0x0a, 0x17, 0x66, 0x69,
	0x6c, 0x65, 0x5f, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x62, 0x6c, 0x61, 0x63,
	0x6b, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x66, 0x69, 0x6c,
	0x65, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x6c, 0x69,
	0x73, 0x74, 0x12, 0x2d, 0x0a, 0x12, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x5f, 0x6f, 0x66, 0x66,
	0x69, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x18, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11,
	0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x4f, 0x66, 0x66, 0x69, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x22, 0x35, 0x0a, 0x1c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4a, 0x6f, 0x62, 0x57, 0x69,
	0x74, 0x68, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x56, 0x32, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x15, 0x0a, 0x06, 0x6a, 0x6f, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x6a, 0x6f, 0x62, 0x49, 0x64, 0x22, 0x48, 0x0a, 0x10, 0x43, 0x61, 0x6e, 0x63,
	0x65, 0x6c, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x6a,
	0x6f, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6a, 0x6f, 0x62,
	0x49, 0x64, 0x22, 0x10, 0x0a, 0x0e, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x4a, 0x6f, 0x62, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0x7a, 0x0a, 0x1a, 0x53, 0x74, 0x61, 0x74, 0x4a, 0x6f, 0x62, 0x53,
	0x75, 0x62, 0x6d, 0x69, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x24, 0x0a, 0x0e, 0x61, 0x70, 0x70, 0x5f, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x70, 0x70, 0x52,
	0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x70,
	0x61, 0x6e, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f,
	0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x22, 0x47, 0x0a, 0x1b, 0x53, 0x74, 0x61, 0x74, 0x4a, 0x6f, 0x62, 0x53, 0x75, 0x62, 0x6d, 0x69,
	0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x72, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x72,
	0x61, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x22, 0x38, 0x0a, 0x0a, 0x4d, 0x6f, 0x6e,
	0x69, 0x74, 0x6f, 0x72, 0x4c, 0x6f, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x22, 0x6d, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x6f, 0x6e,
	0x69, 0x74, 0x6f, 0x72, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23,
	0x0a, 0x04, 0x6c, 0x6f, 0x67, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6a,
	0x6f, 0x62, 0x2e, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x4c, 0x6f, 0x67, 0x52, 0x04, 0x6c,
	0x6f, 0x67, 0x73, 0x12, 0x15, 0x0a, 0x06, 0x6a, 0x6f, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x6a, 0x6f, 0x62, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x22, 0x1a, 0x0a, 0x18, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x6f, 0x6e, 0x69,
	0x74, 0x6f, 0x72, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x36,
	0x0a, 0x14, 0x4a, 0x6f, 0x62, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x49, 0x44, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d,
	0x65, 0x49, 0x44, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x75, 0x6e, 0x74,
	0x69, 0x6d, 0x65, 0x49, 0x44, 0x73, 0x22, 0x41, 0x0a, 0x0b, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d,
	0x65, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x6a, 0x6f, 0x62, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x6a, 0x6f, 0x62, 0x49, 0x44, 0x22, 0x4d, 0x0a, 0x15, 0x4a, 0x6f, 0x62,
	0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x49, 0x44, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x34, 0x0a, 0x0c, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x52,
	0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0c, 0x72, 0x75, 0x6e, 0x74,
	0x69, 0x6d, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x2a, 0xdf, 0x01, 0x0a, 0x0c, 0x44, 0x69, 0x73,
	0x70, 0x6c, 0x61, 0x79, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x14, 0x44, 0x69, 0x73,
	0x70, 0x6c, 0x61, 0x79, 0x53, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57,
	0x4e, 0x10, 0x00, 0x12, 0x19, 0x0a, 0x15, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x65, 0x64, 0x10, 0x01, 0x12, 0x17,
	0x0a, 0x13, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x75,
	0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x10, 0x02, 0x12, 0x1a, 0x0a, 0x16, 0x44, 0x69, 0x73, 0x70, 0x6c,
	0x61, 0x79, 0x53, 0x74, 0x61, 0x74, 0x65, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x6c, 0x69, 0x6e,
	0x67, 0x10, 0x03, 0x12, 0x19, 0x0a, 0x15, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x10, 0x04, 0x12, 0x19,
	0x0a, 0x15, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x53, 0x74, 0x61, 0x74, 0x65, 0x43, 0x61,
	0x6e, 0x63, 0x65, 0x6c, 0x6c, 0x65, 0x64, 0x10, 0x05, 0x12, 0x16, 0x0a, 0x12, 0x44, 0x69, 0x73,
	0x70, 0x6c, 0x61, 0x79, 0x53, 0x74, 0x61, 0x74, 0x65, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x10,
	0x06, 0x12, 0x17, 0x0a, 0x13, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x10, 0x07, 0x2a, 0x36, 0x0a, 0x0c, 0x53, 0x75,
	0x62, 0x6d, 0x69, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x43, 0x61, 0x6e, 0x63, 0x65,
	0x6c, 0x6c, 0x65, 0x64, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64,
	0x10, 0x02, 0x32, 0x95, 0x14, 0x0a, 0x0d, 0x4a, 0x6f, 0x62, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x12, 0x30, 0x0a, 0x06, 0x47, 0x65, 0x74, 0x4a, 0x6f, 0x62, 0x12, 0x12,
	0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x10, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x4a, 0x6f, 0x62, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x4b, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x4a, 0x6f, 0x62,
	0x42, 0x79, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x1b, 0x2e, 0x6a, 0x6f, 0x62, 0x2e,
	0x47, 0x65, 0x74, 0x4a, 0x6f, 0x62, 0x42, 0x79, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x47, 0x65, 0x74,
	0x4a, 0x6f, 0x62, 0x42, 0x79, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x00, 0x12, 0x39, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x53, 0x43, 0x4a, 0x6f, 0x62, 0x73,
	0x12, 0x15, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x43, 0x4a, 0x6f, 0x62, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x47, 0x65,
	0x74, 0x53, 0x43, 0x4a, 0x6f, 0x62, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x5d,
	0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4a, 0x6f, 0x62, 0x57, 0x69, 0x74, 0x68, 0x53,
	0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x21, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x4a, 0x6f, 0x62, 0x57, 0x69, 0x74, 0x68, 0x53, 0x63, 0x68, 0x65, 0x64,
	0x75, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x6a, 0x6f, 0x62,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4a, 0x6f, 0x62, 0x57, 0x69, 0x74, 0x68, 0x53, 0x63,
	0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x63, 0x0a,
	0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4a, 0x6f, 0x62, 0x57, 0x69, 0x74, 0x68, 0x53, 0x63,
	0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x56, 0x32, 0x12, 0x23, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x4a, 0x6f, 0x62, 0x57, 0x69, 0x74, 0x68, 0x53, 0x63, 0x68, 0x65,
	0x64, 0x75, 0x6c, 0x65, 0x56, 0x32, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e,
	0x6a, 0x6f, 0x62, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4a, 0x6f, 0x62, 0x57, 0x69, 0x74,
	0x68, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x56, 0x32, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x00, 0x12, 0x4b, 0x0a, 0x0f, 0x53, 0x65, 0x74, 0x4a, 0x6f, 0x62, 0x46, 0x69, 0x6c, 0x65,
	0x52, 0x65, 0x61, 0x64, 0x79, 0x12, 0x1b, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x53, 0x65, 0x74, 0x4a,
	0x6f, 0x62, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x61, 0x64, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x19, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x53, 0x65, 0x74, 0x4a, 0x6f, 0x62, 0x46,
	0x69, 0x6c, 0x65, 0x52, 0x65, 0x61, 0x64, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12,
	0x51, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x4a, 0x6f, 0x62, 0x73, 0x12, 0x1d, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x75,
	0x62, 0x6d, 0x69, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x4a, 0x6f, 0x62, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62,
	0x6d, 0x69, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x4a, 0x6f, 0x62, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x00, 0x12, 0x4b, 0x0a, 0x0f, 0x53, 0x65, 0x74, 0x4a, 0x6f, 0x62, 0x53, 0x75, 0x62, 0x6d,
	0x69, 0x74, 0x74, 0x65, 0x64, 0x12, 0x1b, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x53, 0x65, 0x74, 0x4a,
	0x6f, 0x62, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x19, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x53, 0x65, 0x74, 0x4a, 0x6f, 0x62, 0x53,
	0x75, 0x62, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12,
	0x5a, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x43, 0x53, 0x63, 0x68, 0x65, 0x64,
	0x75, 0x6c, 0x65, 0x64, 0x4a, 0x6f, 0x62, 0x12, 0x20, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x53, 0x43, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x4a,
	0x6f, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x6a, 0x6f, 0x62, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x43, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65,
	0x64, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x3c, 0x0a, 0x0a, 0x47,
	0x65, 0x74, 0x4a, 0x6f, 0x62, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x16, 0x2e, 0x6a, 0x6f, 0x62, 0x2e,
	0x47, 0x65, 0x74, 0x4a, 0x6f, 0x62, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x14, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x4a, 0x6f, 0x62, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x42, 0x0a, 0x0c, 0x47, 0x65, 0x74,
	0x4a, 0x6f, 0x62, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x18, 0x2e, 0x6a, 0x6f, 0x62, 0x2e,
	0x47, 0x65, 0x74, 0x4a, 0x6f, 0x62, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x4a, 0x6f, 0x62,
	0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x3c, 0x0a,
	0x0a, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x4a, 0x6f, 0x62, 0x73, 0x12, 0x16, 0x2e, 0x6a, 0x6f,
	0x62, 0x2e, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x4a, 0x6f, 0x62, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c,
	0x4a, 0x6f, 0x62, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x39, 0x0a, 0x09, 0x43,
	0x61, 0x6e, 0x63, 0x65, 0x6c, 0x4a, 0x6f, 0x62, 0x12, 0x15, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x43,
	0x61, 0x6e, 0x63, 0x65, 0x6c, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x13, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x4a, 0x6f, 0x62, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x3c, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x4a, 0x6f, 0x62, 0x73, 0x12, 0x16, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x4a, 0x6f, 0x62, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x6a,
	0x6f, 0x62, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4a, 0x6f, 0x62, 0x73, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x00, 0x12, 0x51, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x4a, 0x6f, 0x62, 0x52, 0x75,
	0x6e, 0x74, 0x69, 0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1d, 0x2e, 0x6a, 0x6f, 0x62, 0x2e,
	0x47, 0x65, 0x74, 0x4a, 0x6f, 0x62, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x47,
	0x65, 0x74, 0x4a, 0x6f, 0x62, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x51, 0x0a, 0x11, 0x53, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x4a, 0x6f, 0x62, 0x12, 0x1d, 0x2e, 0x6a,
	0x6f, 0x62, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61,
	0x6c, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x6a, 0x6f,
	0x62, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x6c,
	0x4a, 0x6f, 0x62, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x60, 0x0a, 0x16, 0x47, 0x65,
	0x74, 0x4a, 0x6f, 0x62, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x54, 0x6f, 0x41, 0x72, 0x63,
	0x68, 0x69, 0x76, 0x65, 0x12, 0x22, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x4a, 0x6f,
	0x62, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x54, 0x6f, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x47,
	0x65, 0x74, 0x4a, 0x6f, 0x62, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x54, 0x6f, 0x41, 0x72,
	0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x5d, 0x0a, 0x15,
	0x53, 0x65, 0x74, 0x4a, 0x6f, 0x62, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x41, 0x72, 0x63,
	0x68, 0x69, 0x76, 0x65, 0x64, 0x12, 0x21, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x53, 0x65, 0x74, 0x4a,
	0x6f, 0x62, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x53,
	0x65, 0x74, 0x4a, 0x6f, 0x62, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x41, 0x72, 0x63, 0x68,
	0x69, 0x76, 0x65, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x48, 0x0a, 0x0e, 0x47,
	0x65, 0x74, 0x4a, 0x6f, 0x62, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4c, 0x6f, 0x67, 0x12, 0x1a, 0x2e,
	0x6a, 0x6f, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x4a, 0x6f, 0x62, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4c,
	0x6f, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x6a, 0x6f, 0x62, 0x2e,
	0x47, 0x65, 0x74, 0x4a, 0x6f, 0x62, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4c, 0x6f, 0x67, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x75, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x74, 0x61,
	0x6c, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x4a, 0x6f, 0x62, 0x49, 0x6e, 0x50, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x28, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x54,
	0x6f, 0x74, 0x61, 0x6c, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x4a, 0x6f, 0x62, 0x49,
	0x6e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x29, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x4a, 0x6f, 0x62, 0x49, 0x6e, 0x50, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x69, 0x0a, 0x18,
	0x47, 0x65, 0x74, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x50, 0x55, 0x54, 0x69, 0x6d, 0x65, 0x49,
	0x6e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x24, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x47,
	0x65, 0x74, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x50, 0x55, 0x54, 0x69, 0x6d, 0x65, 0x49, 0x6e,
	0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25,
	0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x50, 0x55,
	0x54, 0x69, 0x6d, 0x65, 0x49, 0x6e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x45, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x4a, 0x6f, 0x62, 0x42, 0x69, 0x6c, 0x6c, 0x12, 0x19, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x4a, 0x6f, 0x62, 0x42, 0x69, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x4a, 0x6f, 0x62, 0x42, 0x69, 0x6c, 0x6c, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x45,
	0x0a, 0x0d, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x4a, 0x6f, 0x62, 0x42, 0x69, 0x6c, 0x6c, 0x12,
	0x19, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4a, 0x6f, 0x62, 0x42,
	0x69, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x6a, 0x6f, 0x62,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4a, 0x6f, 0x62, 0x42, 0x69, 0x6c, 0x6c, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x36, 0x0a, 0x10, 0x53, 0x79, 0x6e, 0x63, 0x4a, 0x6f, 0x62,
	0x54, 0x6f, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x12, 0x08, 0x2e, 0x6a, 0x6f, 0x62, 0x2e,
	0x4a, 0x6f, 0x62, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x5a, 0x0a,
	0x13, 0x53, 0x74, 0x61, 0x74, 0x4a, 0x6f, 0x62, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x73, 0x12, 0x1f, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x4a,
	0x6f, 0x62, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x53, 0x74, 0x61, 0x74,
	0x4a, 0x6f, 0x62, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x57, 0x0a, 0x12, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x43, 0x68, 0x61, 0x72, 0x74, 0x12,
	0x1e, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x6f, 0x6e, 0x69,
	0x74, 0x6f, 0x72, 0x43, 0x68, 0x61, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1f, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x6f, 0x6e, 0x69,
	0x74, 0x6f, 0x72, 0x43, 0x68, 0x61, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x4e, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72,
	0x43, 0x68, 0x61, 0x72, 0x74, 0x12, 0x1b, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x4d,
	0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x43, 0x68, 0x61, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x6e, 0x69,
	0x74, 0x6f, 0x72, 0x43, 0x68, 0x61, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x51, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x6f, 0x6e, 0x69,
	0x74, 0x6f, 0x72, 0x4c, 0x6f, 0x67, 0x12, 0x1c, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x53, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x4a, 0x6f, 0x62, 0x49,
	0x44, 0x73, 0x42, 0x79, 0x4a, 0x6f, 0x62, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x49, 0x44,
	0x73, 0x12, 0x19, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x4a, 0x6f, 0x62, 0x52, 0x75, 0x6e, 0x74, 0x69,
	0x6d, 0x65, 0x49, 0x44, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x6a,
	0x6f, 0x62, 0x2e, 0x4a, 0x6f, 0x62, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x49, 0x44, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x55, 0x0a, 0x12, 0x47, 0x65,
	0x74, 0x4a, 0x6f, 0x62, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x79, 0x4a, 0x6f, 0x62, 0x49, 0x44, 0x73,
	0x12, 0x1e, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x4a, 0x6f, 0x62, 0x49, 0x6e, 0x66,
	0x6f, 0x42, 0x79, 0x4a, 0x6f, 0x62, 0x49, 0x44, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1d, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x4a, 0x6f, 0x62, 0x49, 0x6e, 0x66,
	0x6f, 0x42, 0x79, 0x4a, 0x6f, 0x62, 0x49, 0x44, 0x73, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22,
	0x00, 0x12, 0x5d, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4a, 0x6f, 0x62, 0x57, 0x69,
	0x74, 0x68, 0x53, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x21, 0x2e, 0x6a, 0x6f, 0x62,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4a, 0x6f, 0x62, 0x57, 0x69, 0x74, 0x68, 0x53, 0x6f,
	0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e,
	0x6a, 0x6f, 0x62, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4a, 0x6f, 0x62, 0x57, 0x69, 0x74,
	0x68, 0x53, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00,
	0x12, 0x48, 0x0a, 0x0d, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x12, 0x19, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x6f, 0x6c, 0x75,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x6a,
	0x6f, 0x62, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x2c, 0x5a, 0x2a, 0x67, 0x69,
	0x74, 0x2e, 0x79, 0x75, 0x61, 0x6e, 0x73, 0x75, 0x61, 0x6e, 0x2e, 0x63, 0x6e, 0x2f, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2d, 0x72, 0x6f, 0x6f, 0x74, 0x2d, 0x61, 0x70, 0x69, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6a, 0x6f, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_job_job_proto_rawDescOnce sync.Once
	file_proto_job_job_proto_rawDescData = file_proto_job_job_proto_rawDesc
)

func file_proto_job_job_proto_rawDescGZIP() []byte {
	file_proto_job_job_proto_rawDescOnce.Do(func() {
		file_proto_job_job_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_job_job_proto_rawDescData)
	})
	return file_proto_job_job_proto_rawDescData
}

var file_proto_job_job_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_proto_job_job_proto_msgTypes = make([]protoimpl.MessageInfo, 82)
var file_proto_job_job_proto_goTypes = []interface{}{
	(DisplayState)(0),                            // 0: job.DisplayState
	(SubmitResult)(0),                            // 1: job.SubmitResult
	(*Job)(nil),                                  // 2: job.Job
	(*JobInf)(nil),                               // 3: job.JobInf
	(*JobRuntime)(nil),                           // 4: job.JobRuntime
	(*State)(nil),                                // 5: job.State
	(*ResourceUsage)(nil),                        // 6: job.ResourceUsage
	(*ResourceAssign)(nil),                       // 7: job.ResourceAssign
	(*ListSolutionsRequest)(nil),                 // 8: job.ListSolutionsRequest
	(*ListSolutionsResponse)(nil),                // 9: job.ListSolutionsResponse
	(*Solution)(nil),                             // 10: job.Solution
	(*License)(nil),                              // 11: job.License
	(*CreateJobWithSolutionRequest)(nil),         // 12: job.CreateJobWithSolutionRequest
	(*CreateJobWithSolutionReply)(nil),           // 13: job.CreateJobWithSolutionReply
	(*MonitorChart)(nil),                         // 14: job.MonitorChart
	(*UpdateMonitorChartRequest)(nil),            // 15: job.UpdateMonitorChartRequest
	(*UpdateMonitorChartResponse)(nil),           // 16: job.UpdateMonitorChartResponse
	(*GetMonitorChartRequest)(nil),               // 17: job.GetMonitorChartRequest
	(*GetMonitorChartResponse)(nil),              // 18: job.GetMonitorChartResponse
	(*GetJobRequest)(nil),                        // 19: job.GetJobRequest
	(*GetJobReply)(nil),                          // 20: job.GetJobReply
	(*GetSCJobsRequest)(nil),                     // 21: job.GetSCJobsRequest
	(*GetSCJobsReply)(nil),                       // 22: job.GetSCJobsReply
	(*UploadFileInfo)(nil),                       // 23: job.UploadFileInfo
	(*OutputInfo)(nil),                           // 24: job.OutputInfo
	(*UserParams)(nil),                           // 25: job.UserParams
	(*FieldReq)(nil),                             // 26: job.FieldReq
	(*CreateJobWithScheduleRequest)(nil),         // 27: job.CreateJobWithScheduleRequest
	(*ScheduleParams)(nil),                       // 28: job.ScheduleParams
	(*CreateJobWithScheduleReply)(nil),           // 29: job.CreateJobWithScheduleReply
	(*SetJobFileReadyRequest)(nil),               // 30: job.SetJobFileReadyRequest
	(*SetJobFileReadyReply)(nil),                 // 31: job.SetJobFileReadyReply
	(*GetSubmittingJobsRequest)(nil),             // 32: job.GetSubmittingJobsRequest
	(*GetSubmittingJobsReply)(nil),               // 33: job.GetSubmittingJobsReply
	(*SetJobSubmittedRequest)(nil),               // 34: job.SetJobSubmittedRequest
	(*SetJobSubmittedReply)(nil),                 // 35: job.SetJobSubmittedReply
	(*UpdateSCScheduledJobRequest)(nil),          // 36: job.UpdateSCScheduledJobRequest
	(*UpdateSCScheduledJobReply)(nil),            // 37: job.UpdateSCScheduledJobReply
	(*CancelJobsRequest)(nil),                    // 38: job.CancelJobsRequest
	(*GetJobInfoByJobIDsRequest)(nil),            // 39: job.GetJobInfoByJobIDsRequest
	(*GetJobInfoByJobIDsResult)(nil),             // 40: job.GetJobInfoByJobIDsResult
	(*CancelJobsReply)(nil),                      // 41: job.CancelJobsReply
	(*DeleteJobsRequest)(nil),                    // 42: job.DeleteJobsRequest
	(*DeleteJobsReply)(nil),                      // 43: job.DeleteJobsReply
	(*GetInitiatedJobsRequest)(nil),              // 44: job.GetInitiatedJobsRequest
	(*GetInitiatedJobsResponse)(nil),             // 45: job.GetInitiatedJobsResponse
	(*GetJobListRequest)(nil),                    // 46: job.GetJobListRequest
	(*GetJobListReply)(nil),                      // 47: job.GetJobListReply
	(*GetJobFilterRequest)(nil),                  // 48: job.GetJobFilterRequest
	(*GetJobFilterReply)(nil),                    // 49: job.GetJobFilterReply
	(*GetJobRuntimeListRequest)(nil),             // 50: job.GetJobRuntimeListRequest
	(*GetJobRuntimeListReply)(nil),               // 51: job.GetJobRuntimeListReply
	(*SystemTerminalJobRequest)(nil),             // 52: job.SystemTerminalJobRequest
	(*SystemTerminalJobReply)(nil),               // 53: job.SystemTerminalJobReply
	(*GetJobRuntimeToArchiveRequest)(nil),        // 54: job.GetJobRuntimeToArchiveRequest
	(*GetJobRuntimeToArchiveReply)(nil),          // 55: job.GetJobRuntimeToArchiveReply
	(*SetJobRuntimeArchivedRequest)(nil),         // 56: job.SetJobRuntimeArchivedRequest
	(*SetJobRuntimeArchivedReply)(nil),           // 57: job.SetJobRuntimeArchivedReply
	(*JobEventLog)(nil),                          // 58: job.JobEventLog
	(*GetJobEventLogRequest)(nil),                // 59: job.GetJobEventLogRequest
	(*GetJobEventLogReply)(nil),                  // 60: job.GetJobEventLogReply
	(*GetTotalNumberOfJobInProjectRequest)(nil),  // 61: job.GetTotalNumberOfJobInProjectRequest
	(*GetTotalNumberOfJobInProjectResponse)(nil), // 62: job.GetTotalNumberOfJobInProjectResponse
	(*GetTotalCPUTimeInProjectRequest)(nil),      // 63: job.GetTotalCPUTimeInProjectRequest
	(*GetTotalCPUTimeInProjectResponse)(nil),     // 64: job.GetTotalCPUTimeInProjectResponse
	(*GetJobByRuntimeRequest)(nil),               // 65: job.GetJobByRuntimeRequest
	(*GetJobByRuntimeReply)(nil),                 // 66: job.GetJobByRuntimeReply
	(*CreateJobBillRequest)(nil),                 // 67: job.CreateJobBillRequest
	(*CreateJobBillReply)(nil),                   // 68: job.CreateJobBillReply
	(*VolumeMount)(nil),                          // 69: job.VolumeMount
	(*VolumeMounts)(nil),                         // 70: job.VolumeMounts
	(*CreateJobWithScheduleV2Request)(nil),       // 71: job.CreateJobWithScheduleV2Request
	(*CreateJobWithScheduleV2Reply)(nil),         // 72: job.CreateJobWithScheduleV2Reply
	(*CancelJobRequest)(nil),                     // 73: job.CancelJobRequest
	(*CancelJobReply)(nil),                       // 74: job.CancelJobReply
	(*StatJobSubmitParamsRequest)(nil),           // 75: job.StatJobSubmitParamsRequest
	(*StatJobSubmitParamsResponse)(nil),          // 76: job.StatJobSubmitParamsResponse
	(*MonitorLog)(nil),                           // 77: job.MonitorLog
	(*UpdateMonitorLogRequest)(nil),              // 78: job.UpdateMonitorLogRequest
	(*UpdateMonitorLogResponse)(nil),             // 79: job.UpdateMonitorLogResponse
	(*JobRuntimeIDsRequest)(nil),                 // 80: job.JobRuntimeIDsRequest
	(*RuntimeInfo)(nil),                          // 81: job.RuntimeInfo
	(*JobRuntimeIDsResponse)(nil),                // 82: job.JobRuntimeIDsResponse
	(*MonitorChart_KV)(nil),                      // 83: job.MonitorChart.KV
	(*timestamppb.Timestamp)(nil),                // 84: google.protobuf.Timestamp
	(*application.ServerParamsMapWrapper)(nil),   // 85: application.ServerParamsMapWrapper
	(*ptype.Page)(nil),                           // 86: ptype.Page
	(*ptype.PageCtx)(nil),                        // 87: ptype.PageCtx
	(*account_bill.Billing)(nil),                 // 88: account_bill.Billing
	(*emptypb.Empty)(nil),                        // 89: google.protobuf.Empty
}
var file_proto_job_job_proto_depIdxs = []int32{
	6,   // 0: job.Job.resource_usage:type_name -> job.ResourceUsage
	5,   // 1: job.Job.state:type_name -> job.State
	0,   // 2: job.Job.display_state:type_name -> job.DisplayState
	4,   // 3: job.Job.runtime:type_name -> job.JobRuntime
	84,  // 4: job.Job.canceling_time:type_name -> google.protobuf.Timestamp
	84,  // 5: job.Job.failing_time:type_name -> google.protobuf.Timestamp
	84,  // 6: job.Job.create_time:type_name -> google.protobuf.Timestamp
	84,  // 7: job.Job.update_time:type_name -> google.protobuf.Timestamp
	7,   // 8: job.JobRuntime.resource_assign:type_name -> job.ResourceAssign
	85,  // 9: job.JobRuntime.server_params:type_name -> application.ServerParamsMapWrapper
	84,  // 10: job.JobRuntime.upload_time:type_name -> google.protobuf.Timestamp
	84,  // 11: job.JobRuntime.queue_time:type_name -> google.protobuf.Timestamp
	84,  // 12: job.JobRuntime.start_time:type_name -> google.protobuf.Timestamp
	84,  // 13: job.JobRuntime.end_time:type_name -> google.protobuf.Timestamp
	84,  // 14: job.JobRuntime.create_time:type_name -> google.protobuf.Timestamp
	84,  // 15: job.JobRuntime.update_time:type_name -> google.protobuf.Timestamp
	84,  // 16: job.JobRuntime.download_time:type_name -> google.protobuf.Timestamp
	10,  // 17: job.ListSolutionsResponse.solutions:type_name -> job.Solution
	11,  // 18: job.Solution.licenses:type_name -> job.License
	28,  // 19: job.CreateJobWithSolutionRequest.params:type_name -> job.ScheduleParams
	25,  // 20: job.CreateJobWithSolutionRequest.user_params:type_name -> job.UserParams
	23,  // 21: job.CreateJobWithSolutionRequest.upload_file_info:type_name -> job.UploadFileInfo
	24,  // 22: job.CreateJobWithSolutionRequest.output:type_name -> job.OutputInfo
	2,   // 23: job.CreateJobWithSolutionReply.job:type_name -> job.Job
	2,   // 24: job.CreateJobWithSolutionReply.jobs:type_name -> job.Job
	83,  // 25: job.MonitorChart.items:type_name -> job.MonitorChart.KV
	14,  // 26: job.UpdateMonitorChartRequest.charts:type_name -> job.MonitorChart
	14,  // 27: job.GetMonitorChartResponse.charts:type_name -> job.MonitorChart
	2,   // 28: job.GetJobReply.job:type_name -> job.Job
	2,   // 29: job.GetSCJobsReply.jobs:type_name -> job.Job
	26,  // 30: job.UserParams.fields:type_name -> job.FieldReq
	28,  // 31: job.CreateJobWithScheduleRequest.params:type_name -> job.ScheduleParams
	25,  // 32: job.CreateJobWithScheduleRequest.user_params:type_name -> job.UserParams
	23,  // 33: job.CreateJobWithScheduleRequest.upload_file_info:type_name -> job.UploadFileInfo
	24,  // 34: job.CreateJobWithScheduleRequest.output:type_name -> job.OutputInfo
	10,  // 35: job.CreateJobWithScheduleRequest.solution:type_name -> job.Solution
	2,   // 36: job.CreateJobWithScheduleReply.job:type_name -> job.Job
	2,   // 37: job.CreateJobWithScheduleReply.jobs:type_name -> job.Job
	2,   // 38: job.SetJobFileReadyReply.job:type_name -> job.Job
	2,   // 39: job.GetSubmittingJobsReply.jobs:type_name -> job.Job
	1,   // 40: job.SetJobSubmittedRequest.res:type_name -> job.SubmitResult
	2,   // 41: job.SetJobSubmittedReply.job:type_name -> job.Job
	5,   // 42: job.UpdateSCScheduledJobRequest.state:type_name -> job.State
	84,  // 43: job.UpdateSCScheduledJobRequest.start_time:type_name -> google.protobuf.Timestamp
	84,  // 44: job.UpdateSCScheduledJobRequest.end_time:type_name -> google.protobuf.Timestamp
	84,  // 45: job.UpdateSCScheduledJobRequest.submit_time:type_name -> google.protobuf.Timestamp
	2,   // 46: job.UpdateSCScheduledJobReply.job:type_name -> job.Job
	3,   // 47: job.GetJobInfoByJobIDsResult.jobs:type_name -> job.JobInf
	2,   // 48: job.GetInitiatedJobsResponse.jobs:type_name -> job.Job
	0,   // 49: job.GetJobListRequest.state_filters:type_name -> job.DisplayState
	86,  // 50: job.GetJobListRequest.page:type_name -> ptype.Page
	84,  // 51: job.GetJobListRequest.start_time:type_name -> google.protobuf.Timestamp
	84,  // 52: job.GetJobListRequest.end_time:type_name -> google.protobuf.Timestamp
	2,   // 53: job.GetJobListReply.jobs:type_name -> job.Job
	87,  // 54: job.GetJobListReply.page_ctx:type_name -> ptype.PageCtx
	0,   // 55: job.GetJobFilterReply.state_filter:type_name -> job.DisplayState
	4,   // 56: job.GetJobRuntimeListReply.job_runtimes:type_name -> job.JobRuntime
	2,   // 57: job.SystemTerminalJobReply.job:type_name -> job.Job
	4,   // 58: job.GetJobRuntimeToArchiveReply.job_runtimes:type_name -> job.JobRuntime
	4,   // 59: job.SetJobRuntimeArchivedReply.job_runtime:type_name -> job.JobRuntime
	84,  // 60: job.JobEventLog.create_time:type_name -> google.protobuf.Timestamp
	58,  // 61: job.GetJobEventLogReply.list:type_name -> job.JobEventLog
	2,   // 62: job.GetJobByRuntimeReply.job:type_name -> job.Job
	88,  // 63: job.CreateJobBillReply.bill:type_name -> account_bill.Billing
	69,  // 64: job.VolumeMounts.mounts:type_name -> job.VolumeMount
	28,  // 65: job.CreateJobWithScheduleV2Request.params:type_name -> job.ScheduleParams
	25,  // 66: job.CreateJobWithScheduleV2Request.user_params:type_name -> job.UserParams
	70,  // 67: job.CreateJobWithScheduleV2Request.volume_mounts:type_name -> job.VolumeMounts
	77,  // 68: job.UpdateMonitorLogRequest.logs:type_name -> job.MonitorLog
	81,  // 69: job.JobRuntimeIDsResponse.runtimeInfos:type_name -> job.RuntimeInfo
	19,  // 70: job.JobManagement.GetJob:input_type -> job.GetJobRequest
	65,  // 71: job.JobManagement.GetJobByRuntime:input_type -> job.GetJobByRuntimeRequest
	21,  // 72: job.JobManagement.GetSCJobs:input_type -> job.GetSCJobsRequest
	27,  // 73: job.JobManagement.CreateJobWithSchedule:input_type -> job.CreateJobWithScheduleRequest
	71,  // 74: job.JobManagement.CreateJobWithScheduleV2:input_type -> job.CreateJobWithScheduleV2Request
	30,  // 75: job.JobManagement.SetJobFileReady:input_type -> job.SetJobFileReadyRequest
	32,  // 76: job.JobManagement.GetSubmittingJobs:input_type -> job.GetSubmittingJobsRequest
	34,  // 77: job.JobManagement.SetJobSubmitted:input_type -> job.SetJobSubmittedRequest
	36,  // 78: job.JobManagement.UpdateSCScheduledJob:input_type -> job.UpdateSCScheduledJobRequest
	46,  // 79: job.JobManagement.GetJobList:input_type -> job.GetJobListRequest
	48,  // 80: job.JobManagement.GetJobFilter:input_type -> job.GetJobFilterRequest
	38,  // 81: job.JobManagement.CancelJobs:input_type -> job.CancelJobsRequest
	73,  // 82: job.JobManagement.CancelJob:input_type -> job.CancelJobRequest
	42,  // 83: job.JobManagement.DeleteJobs:input_type -> job.DeleteJobsRequest
	50,  // 84: job.JobManagement.GetJobRuntimeList:input_type -> job.GetJobRuntimeListRequest
	52,  // 85: job.JobManagement.SystemTerminalJob:input_type -> job.SystemTerminalJobRequest
	54,  // 86: job.JobManagement.GetJobRuntimeToArchive:input_type -> job.GetJobRuntimeToArchiveRequest
	56,  // 87: job.JobManagement.SetJobRuntimeArchived:input_type -> job.SetJobRuntimeArchivedRequest
	59,  // 88: job.JobManagement.GetJobEventLog:input_type -> job.GetJobEventLogRequest
	61,  // 89: job.JobManagement.GetTotalNumberOfJobInProject:input_type -> job.GetTotalNumberOfJobInProjectRequest
	63,  // 90: job.JobManagement.GetTotalCPUTimeInProject:input_type -> job.GetTotalCPUTimeInProjectRequest
	67,  // 91: job.JobManagement.CreateJobBill:input_type -> job.CreateJobBillRequest
	67,  // 92: job.JobManagement.CancelJobBill:input_type -> job.CreateJobBillRequest
	2,   // 93: job.JobManagement.SyncJobToMonitor:input_type -> job.Job
	75,  // 94: job.JobManagement.StatJobSubmitParams:input_type -> job.StatJobSubmitParamsRequest
	15,  // 95: job.JobManagement.UpdateMonitorChart:input_type -> job.UpdateMonitorChartRequest
	17,  // 96: job.JobManagement.GetMonitorChart:input_type -> job.GetMonitorChartRequest
	78,  // 97: job.JobManagement.UpdateMonitorLog:input_type -> job.UpdateMonitorLogRequest
	80,  // 98: job.JobManagement.GetJobIDsByJobRuntimeIDs:input_type -> job.JobRuntimeIDsRequest
	39,  // 99: job.JobManagement.GetJobInfoByJobIDs:input_type -> job.GetJobInfoByJobIDsRequest
	12,  // 100: job.JobManagement.CreateJobWithSolution:input_type -> job.CreateJobWithSolutionRequest
	8,   // 101: job.JobManagement.ListSolutions:input_type -> job.ListSolutionsRequest
	20,  // 102: job.JobManagement.GetJob:output_type -> job.GetJobReply
	66,  // 103: job.JobManagement.GetJobByRuntime:output_type -> job.GetJobByRuntimeReply
	22,  // 104: job.JobManagement.GetSCJobs:output_type -> job.GetSCJobsReply
	29,  // 105: job.JobManagement.CreateJobWithSchedule:output_type -> job.CreateJobWithScheduleReply
	72,  // 106: job.JobManagement.CreateJobWithScheduleV2:output_type -> job.CreateJobWithScheduleV2Reply
	31,  // 107: job.JobManagement.SetJobFileReady:output_type -> job.SetJobFileReadyReply
	33,  // 108: job.JobManagement.GetSubmittingJobs:output_type -> job.GetSubmittingJobsReply
	35,  // 109: job.JobManagement.SetJobSubmitted:output_type -> job.SetJobSubmittedReply
	37,  // 110: job.JobManagement.UpdateSCScheduledJob:output_type -> job.UpdateSCScheduledJobReply
	47,  // 111: job.JobManagement.GetJobList:output_type -> job.GetJobListReply
	49,  // 112: job.JobManagement.GetJobFilter:output_type -> job.GetJobFilterReply
	41,  // 113: job.JobManagement.CancelJobs:output_type -> job.CancelJobsReply
	74,  // 114: job.JobManagement.CancelJob:output_type -> job.CancelJobReply
	43,  // 115: job.JobManagement.DeleteJobs:output_type -> job.DeleteJobsReply
	51,  // 116: job.JobManagement.GetJobRuntimeList:output_type -> job.GetJobRuntimeListReply
	53,  // 117: job.JobManagement.SystemTerminalJob:output_type -> job.SystemTerminalJobReply
	55,  // 118: job.JobManagement.GetJobRuntimeToArchive:output_type -> job.GetJobRuntimeToArchiveReply
	57,  // 119: job.JobManagement.SetJobRuntimeArchived:output_type -> job.SetJobRuntimeArchivedReply
	60,  // 120: job.JobManagement.GetJobEventLog:output_type -> job.GetJobEventLogReply
	62,  // 121: job.JobManagement.GetTotalNumberOfJobInProject:output_type -> job.GetTotalNumberOfJobInProjectResponse
	64,  // 122: job.JobManagement.GetTotalCPUTimeInProject:output_type -> job.GetTotalCPUTimeInProjectResponse
	68,  // 123: job.JobManagement.CreateJobBill:output_type -> job.CreateJobBillReply
	68,  // 124: job.JobManagement.CancelJobBill:output_type -> job.CreateJobBillReply
	89,  // 125: job.JobManagement.SyncJobToMonitor:output_type -> google.protobuf.Empty
	76,  // 126: job.JobManagement.StatJobSubmitParams:output_type -> job.StatJobSubmitParamsResponse
	16,  // 127: job.JobManagement.UpdateMonitorChart:output_type -> job.UpdateMonitorChartResponse
	18,  // 128: job.JobManagement.GetMonitorChart:output_type -> job.GetMonitorChartResponse
	79,  // 129: job.JobManagement.UpdateMonitorLog:output_type -> job.UpdateMonitorLogResponse
	82,  // 130: job.JobManagement.GetJobIDsByJobRuntimeIDs:output_type -> job.JobRuntimeIDsResponse
	40,  // 131: job.JobManagement.GetJobInfoByJobIDs:output_type -> job.GetJobInfoByJobIDsResult
	13,  // 132: job.JobManagement.CreateJobWithSolution:output_type -> job.CreateJobWithSolutionReply
	9,   // 133: job.JobManagement.ListSolutions:output_type -> job.ListSolutionsResponse
	102, // [102:134] is the sub-list for method output_type
	70,  // [70:102] is the sub-list for method input_type
	70,  // [70:70] is the sub-list for extension type_name
	70,  // [70:70] is the sub-list for extension extendee
	0,   // [0:70] is the sub-list for field type_name
}

func init() { file_proto_job_job_proto_init() }
func file_proto_job_job_proto_init() {
	if File_proto_job_job_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_job_job_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Job); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_job_job_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobInf); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_job_job_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobRuntime); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_job_job_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*State); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_job_job_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResourceUsage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_job_job_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResourceAssign); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_job_job_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListSolutionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_job_job_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListSolutionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_job_job_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Solution); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_job_job_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*License); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_job_job_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateJobWithSolutionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_job_job_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateJobWithSolutionReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_job_job_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MonitorChart); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_job_job_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMonitorChartRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_job_job_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMonitorChartResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_job_job_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMonitorChartRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_job_job_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMonitorChartResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_job_job_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetJobRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_job_job_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetJobReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_job_job_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSCJobsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_job_job_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSCJobsReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_job_job_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadFileInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_job_job_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OutputInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_job_job_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_job_job_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FieldReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_job_job_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateJobWithScheduleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_job_job_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScheduleParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_job_job_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateJobWithScheduleReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_job_job_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetJobFileReadyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_job_job_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetJobFileReadyReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_job_job_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSubmittingJobsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_job_job_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSubmittingJobsReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_job_job_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetJobSubmittedRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_job_job_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetJobSubmittedReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_job_job_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateSCScheduledJobRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_job_job_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateSCScheduledJobReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_job_job_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CancelJobsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_job_job_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetJobInfoByJobIDsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_job_job_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetJobInfoByJobIDsResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_job_job_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CancelJobsReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_job_job_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteJobsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_job_job_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteJobsReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_job_job_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetInitiatedJobsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_job_job_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetInitiatedJobsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_job_job_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetJobListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_job_job_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetJobListReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_job_job_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetJobFilterRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_job_job_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetJobFilterReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_job_job_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetJobRuntimeListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_job_job_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetJobRuntimeListReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_job_job_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemTerminalJobRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_job_job_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemTerminalJobReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_job_job_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetJobRuntimeToArchiveRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_job_job_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetJobRuntimeToArchiveReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_job_job_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetJobRuntimeArchivedRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_job_job_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetJobRuntimeArchivedReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_job_job_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobEventLog); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_job_job_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetJobEventLogRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_job_job_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetJobEventLogReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_job_job_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTotalNumberOfJobInProjectRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_job_job_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTotalNumberOfJobInProjectResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_job_job_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTotalCPUTimeInProjectRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_job_job_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTotalCPUTimeInProjectResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_job_job_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetJobByRuntimeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_job_job_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetJobByRuntimeReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_job_job_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateJobBillRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_job_job_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateJobBillReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_job_job_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VolumeMount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_job_job_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VolumeMounts); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_job_job_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateJobWithScheduleV2Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_job_job_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateJobWithScheduleV2Reply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_job_job_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CancelJobRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_job_job_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CancelJobReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_job_job_proto_msgTypes[73].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatJobSubmitParamsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_job_job_proto_msgTypes[74].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatJobSubmitParamsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_job_job_proto_msgTypes[75].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MonitorLog); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_job_job_proto_msgTypes[76].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMonitorLogRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_job_job_proto_msgTypes[77].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMonitorLogResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_job_job_proto_msgTypes[78].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobRuntimeIDsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_job_job_proto_msgTypes[79].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RuntimeInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_job_job_proto_msgTypes[80].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobRuntimeIDsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_job_job_proto_msgTypes[81].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MonitorChart_KV); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_job_job_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   82,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_job_job_proto_goTypes,
		DependencyIndexes: file_proto_job_job_proto_depIdxs,
		EnumInfos:         file_proto_job_job_proto_enumTypes,
		MessageInfos:      file_proto_job_job_proto_msgTypes,
	}.Build()
	File_proto_job_job_proto = out.File
	file_proto_job_job_proto_rawDesc = nil
	file_proto_job_job_proto_goTypes = nil
	file_proto_job_job_proto_depIdxs = nil
}
