// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.21.12
// source: proto/hydra_lcp/hydra_lcp.proto

package hydra_lcp

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type UpdatePasswordByOldReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OldPwd string `protobuf:"bytes,1,opt,name=old_pwd,json=oldPwd,proto3" json:"old_pwd,omitempty"`
	NewPwd string `protobuf:"bytes,2,opt,name=new_pwd,json=newPwd,proto3" json:"new_pwd,omitempty"`
	YsId   string `protobuf:"bytes,3,opt,name=ys_id,json=ysId,proto3" json:"ys_id,omitempty"`
}

func (x *UpdatePasswordByOldReq) Reset() {
	*x = UpdatePasswordByOldReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_hydra_lcp_hydra_lcp_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePasswordByOldReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePasswordByOldReq) ProtoMessage() {}

func (x *UpdatePasswordByOldReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_hydra_lcp_hydra_lcp_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePasswordByOldReq.ProtoReflect.Descriptor instead.
func (*UpdatePasswordByOldReq) Descriptor() ([]byte, []int) {
	return file_proto_hydra_lcp_hydra_lcp_proto_rawDescGZIP(), []int{0}
}

func (x *UpdatePasswordByOldReq) GetOldPwd() string {
	if x != nil {
		return x.OldPwd
	}
	return ""
}

func (x *UpdatePasswordByOldReq) GetNewPwd() string {
	if x != nil {
		return x.NewPwd
	}
	return ""
}

func (x *UpdatePasswordByOldReq) GetYsId() string {
	if x != nil {
		return x.YsId
	}
	return ""
}

type ResetPasswordReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ResetPasswordReq) Reset() {
	*x = ResetPasswordReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_hydra_lcp_hydra_lcp_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResetPasswordReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResetPasswordReq) ProtoMessage() {}

func (x *ResetPasswordReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_hydra_lcp_hydra_lcp_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResetPasswordReq.ProtoReflect.Descriptor instead.
func (*ResetPasswordReq) Descriptor() ([]byte, []int) {
	return file_proto_hydra_lcp_hydra_lcp_proto_rawDescGZIP(), []int{1}
}

type GetUserInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: `validate:"is_ysid"`
	Ysid string `protobuf:"bytes,1,opt,name=ysid,proto3" json:"ysid,omitempty"`
}

func (x *GetUserInfoReq) Reset() {
	*x = GetUserInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_hydra_lcp_hydra_lcp_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserInfoReq) ProtoMessage() {}

func (x *GetUserInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_hydra_lcp_hydra_lcp_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserInfoReq.ProtoReflect.Descriptor instead.
func (*GetUserInfoReq) Descriptor() ([]byte, []int) {
	return file_proto_hydra_lcp_hydra_lcp_proto_rawDescGZIP(), []int{2}
}

func (x *GetUserInfoReq) GetYsid() string {
	if x != nil {
		return x.Ysid
	}
	return ""
}

type GetUserInfoBatchReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ysid []string `protobuf:"bytes,1,rep,name=ysid,proto3" json:"ysid,omitempty"`
}

func (x *GetUserInfoBatchReq) Reset() {
	*x = GetUserInfoBatchReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_hydra_lcp_hydra_lcp_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserInfoBatchReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserInfoBatchReq) ProtoMessage() {}

func (x *GetUserInfoBatchReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_hydra_lcp_hydra_lcp_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserInfoBatchReq.ProtoReflect.Descriptor instead.
func (*GetUserInfoBatchReq) Descriptor() ([]byte, []int) {
	return file_proto_hydra_lcp_hydra_lcp_proto_rawDescGZIP(), []int{3}
}

func (x *GetUserInfoBatchReq) GetYsid() []string {
	if x != nil {
		return x.Ysid
	}
	return nil
}

type UserInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: `validate:"is_ysid"`
	Ysid  string `protobuf:"bytes,1,opt,name=ysid,proto3" json:"ysid,omitempty"`
	Param string `protobuf:"bytes,2,opt,name=param,proto3" json:"param,omitempty"`
}

func (x *UserInfoReq) Reset() {
	*x = UserInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_hydra_lcp_hydra_lcp_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserInfoReq) ProtoMessage() {}

func (x *UserInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_hydra_lcp_hydra_lcp_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserInfoReq.ProtoReflect.Descriptor instead.
func (*UserInfoReq) Descriptor() ([]byte, []int) {
	return file_proto_hydra_lcp_hydra_lcp_proto_rawDescGZIP(), []int{4}
}

func (x *UserInfoReq) GetYsid() string {
	if x != nil {
		return x.Ysid
	}
	return ""
}

func (x *UserInfoReq) GetParam() string {
	if x != nil {
		return x.Param
	}
	return ""
}

type UserInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: `validate:"is_ysid"`
	Ysid            string `protobuf:"bytes,1,opt,name=ysid,proto3" json:"ysid,omitempty"`
	Name            string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Email           string `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
	Phone           string `protobuf:"bytes,4,opt,name=phone,proto3" json:"phone,omitempty"`
	WechatUnionId   string `protobuf:"bytes,5,opt,name=wechat_union_id,json=wechatUnionId,proto3" json:"wechat_union_id,omitempty"`
	WechatOpenId    string `protobuf:"bytes,6,opt,name=wechat_open_id,json=wechatOpenId,proto3" json:"wechat_open_id,omitempty"`
	WechatNickName  string `protobuf:"bytes,7,opt,name=wechat_nick_name,json=wechatNickName,proto3" json:"wechat_nick_name,omitempty"`
	RealName        string `protobuf:"bytes,8,opt,name=real_name,json=realName,proto3" json:"real_name,omitempty"`
	UserName        string `protobuf:"bytes,9,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	DisplayUserName string `protobuf:"bytes,10,opt,name=display_user_name,json=displayUserName,proto3" json:"display_user_name,omitempty"`
	HeadimgUrl      string `protobuf:"bytes,11,opt,name=headimg_url,json=headimgUrl,proto3" json:"headimg_url,omitempty"`
	UserChannel     string `protobuf:"bytes,12,opt,name=user_channel,json=userChannel,proto3" json:"user_channel,omitempty"`
	UserSource      string `protobuf:"bytes,13,opt,name=user_source,json=userSource,proto3" json:"user_source,omitempty"`
	UserReferer     string `protobuf:"bytes,14,opt,name=user_referer,json=userReferer,proto3" json:"user_referer,omitempty"`
}

func (x *UserInfo) Reset() {
	*x = UserInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_hydra_lcp_hydra_lcp_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserInfo) ProtoMessage() {}

func (x *UserInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_hydra_lcp_hydra_lcp_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserInfo.ProtoReflect.Descriptor instead.
func (*UserInfo) Descriptor() ([]byte, []int) {
	return file_proto_hydra_lcp_hydra_lcp_proto_rawDescGZIP(), []int{5}
}

func (x *UserInfo) GetYsid() string {
	if x != nil {
		return x.Ysid
	}
	return ""
}

func (x *UserInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UserInfo) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *UserInfo) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *UserInfo) GetWechatUnionId() string {
	if x != nil {
		return x.WechatUnionId
	}
	return ""
}

func (x *UserInfo) GetWechatOpenId() string {
	if x != nil {
		return x.WechatOpenId
	}
	return ""
}

func (x *UserInfo) GetWechatNickName() string {
	if x != nil {
		return x.WechatNickName
	}
	return ""
}

func (x *UserInfo) GetRealName() string {
	if x != nil {
		return x.RealName
	}
	return ""
}

func (x *UserInfo) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *UserInfo) GetDisplayUserName() string {
	if x != nil {
		return x.DisplayUserName
	}
	return ""
}

func (x *UserInfo) GetHeadimgUrl() string {
	if x != nil {
		return x.HeadimgUrl
	}
	return ""
}

func (x *UserInfo) GetUserChannel() string {
	if x != nil {
		return x.UserChannel
	}
	return ""
}

func (x *UserInfo) GetUserSource() string {
	if x != nil {
		return x.UserSource
	}
	return ""
}

func (x *UserInfo) GetUserReferer() string {
	if x != nil {
		return x.UserReferer
	}
	return ""
}

type UserInfoBatch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserInfo []*UserInfo `protobuf:"bytes,1,rep,name=user_info,json=userInfo,proto3" json:"user_info,omitempty"`
}

func (x *UserInfoBatch) Reset() {
	*x = UserInfoBatch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_hydra_lcp_hydra_lcp_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserInfoBatch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserInfoBatch) ProtoMessage() {}

func (x *UserInfoBatch) ProtoReflect() protoreflect.Message {
	mi := &file_proto_hydra_lcp_hydra_lcp_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserInfoBatch.ProtoReflect.Descriptor instead.
func (*UserInfoBatch) Descriptor() ([]byte, []int) {
	return file_proto_hydra_lcp_hydra_lcp_proto_rawDescGZIP(), []int{6}
}

func (x *UserInfoBatch) GetUserInfo() []*UserInfo {
	if x != nil {
		return x.UserInfo
	}
	return nil
}

type WechatInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: `validate:"is_ysid"`
	Ysid           string `protobuf:"bytes,1,opt,name=ysid,proto3" json:"ysid,omitempty"`
	WechatUnionId  string `protobuf:"bytes,2,opt,name=wechat_union_id,json=wechatUnionId,proto3" json:"wechat_union_id,omitempty"`
	WechatOpenId   string `protobuf:"bytes,3,opt,name=wechat_open_id,json=wechatOpenId,proto3" json:"wechat_open_id,omitempty"`
	WechatNickName string `protobuf:"bytes,4,opt,name=wechat_nick_name,json=wechatNickName,proto3" json:"wechat_nick_name,omitempty"`
}

func (x *WechatInfoReq) Reset() {
	*x = WechatInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_hydra_lcp_hydra_lcp_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WechatInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WechatInfoReq) ProtoMessage() {}

func (x *WechatInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_hydra_lcp_hydra_lcp_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WechatInfoReq.ProtoReflect.Descriptor instead.
func (*WechatInfoReq) Descriptor() ([]byte, []int) {
	return file_proto_hydra_lcp_hydra_lcp_proto_rawDescGZIP(), []int{7}
}

func (x *WechatInfoReq) GetYsid() string {
	if x != nil {
		return x.Ysid
	}
	return ""
}

func (x *WechatInfoReq) GetWechatUnionId() string {
	if x != nil {
		return x.WechatUnionId
	}
	return ""
}

func (x *WechatInfoReq) GetWechatOpenId() string {
	if x != nil {
		return x.WechatOpenId
	}
	return ""
}

func (x *WechatInfoReq) GetWechatNickName() string {
	if x != nil {
		return x.WechatNickName
	}
	return ""
}

type UpdatePasswordReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: `validate:"is_ysid"`
	Ysid        string `protobuf:"bytes,1,opt,name=ysid,proto3" json:"ysid,omitempty"`
	PasswordNew string `protobuf:"bytes,2,opt,name=password_new,json=passwordNew,proto3" json:"password_new,omitempty"`
	Captcha     string `protobuf:"bytes,3,opt,name=captcha,proto3" json:"captcha,omitempty"`
}

func (x *UpdatePasswordReq) Reset() {
	*x = UpdatePasswordReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_hydra_lcp_hydra_lcp_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePasswordReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePasswordReq) ProtoMessage() {}

func (x *UpdatePasswordReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_hydra_lcp_hydra_lcp_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePasswordReq.ProtoReflect.Descriptor instead.
func (*UpdatePasswordReq) Descriptor() ([]byte, []int) {
	return file_proto_hydra_lcp_hydra_lcp_proto_rawDescGZIP(), []int{8}
}

func (x *UpdatePasswordReq) GetYsid() string {
	if x != nil {
		return x.Ysid
	}
	return ""
}

func (x *UpdatePasswordReq) GetPasswordNew() string {
	if x != nil {
		return x.PasswordNew
	}
	return ""
}

func (x *UpdatePasswordReq) GetCaptcha() string {
	if x != nil {
		return x.Captcha
	}
	return ""
}

type QueryInfoByPhoneNumberReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PhoneNumber string `protobuf:"bytes,1,opt,name=phone_number,json=phoneNumber,proto3" json:"phone_number,omitempty"`
}

func (x *QueryInfoByPhoneNumberReq) Reset() {
	*x = QueryInfoByPhoneNumberReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_hydra_lcp_hydra_lcp_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryInfoByPhoneNumberReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryInfoByPhoneNumberReq) ProtoMessage() {}

func (x *QueryInfoByPhoneNumberReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_hydra_lcp_hydra_lcp_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryInfoByPhoneNumberReq.ProtoReflect.Descriptor instead.
func (*QueryInfoByPhoneNumberReq) Descriptor() ([]byte, []int) {
	return file_proto_hydra_lcp_hydra_lcp_proto_rawDescGZIP(), []int{9}
}

func (x *QueryInfoByPhoneNumberReq) GetPhoneNumber() string {
	if x != nil {
		return x.PhoneNumber
	}
	return ""
}

type UpdatePhoneNumberReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: `validate:"is_ysid"`
	Ysid           string `protobuf:"bytes,1,opt,name=ysid,proto3" json:"ysid,omitempty"`
	PhoneNumberNew string `protobuf:"bytes,2,opt,name=phone_number_new,json=phoneNumberNew,proto3" json:"phone_number_new,omitempty"`
	Captcha        string `protobuf:"bytes,3,opt,name=captcha,proto3" json:"captcha,omitempty"`
}

func (x *UpdatePhoneNumberReq) Reset() {
	*x = UpdatePhoneNumberReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_hydra_lcp_hydra_lcp_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePhoneNumberReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePhoneNumberReq) ProtoMessage() {}

func (x *UpdatePhoneNumberReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_hydra_lcp_hydra_lcp_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePhoneNumberReq.ProtoReflect.Descriptor instead.
func (*UpdatePhoneNumberReq) Descriptor() ([]byte, []int) {
	return file_proto_hydra_lcp_hydra_lcp_proto_rawDescGZIP(), []int{10}
}

func (x *UpdatePhoneNumberReq) GetYsid() string {
	if x != nil {
		return x.Ysid
	}
	return ""
}

func (x *UpdatePhoneNumberReq) GetPhoneNumberNew() string {
	if x != nil {
		return x.PhoneNumberNew
	}
	return ""
}

func (x *UpdatePhoneNumberReq) GetCaptcha() string {
	if x != nil {
		return x.Captcha
	}
	return ""
}

type GetExternalUserInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: `validate:"is_ysid"`
	Ysid string `protobuf:"bytes,1,opt,name=ysid,proto3" json:"ysid,omitempty"`
}

func (x *GetExternalUserInfoReq) Reset() {
	*x = GetExternalUserInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_hydra_lcp_hydra_lcp_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetExternalUserInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetExternalUserInfoReq) ProtoMessage() {}

func (x *GetExternalUserInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_hydra_lcp_hydra_lcp_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetExternalUserInfoReq.ProtoReflect.Descriptor instead.
func (*GetExternalUserInfoReq) Descriptor() ([]byte, []int) {
	return file_proto_hydra_lcp_hydra_lcp_proto_rawDescGZIP(), []int{11}
}

func (x *GetExternalUserInfoReq) GetYsid() string {
	if x != nil {
		return x.Ysid
	}
	return ""
}

type GetExternalUserInfoReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ysid     string `protobuf:"bytes,1,opt,name=ysid,proto3" json:"ysid,omitempty"`
	UserName string `protobuf:"bytes,2,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
}

func (x *GetExternalUserInfoReply) Reset() {
	*x = GetExternalUserInfoReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_hydra_lcp_hydra_lcp_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetExternalUserInfoReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetExternalUserInfoReply) ProtoMessage() {}

func (x *GetExternalUserInfoReply) ProtoReflect() protoreflect.Message {
	mi := &file_proto_hydra_lcp_hydra_lcp_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetExternalUserInfoReply.ProtoReflect.Descriptor instead.
func (*GetExternalUserInfoReply) Descriptor() ([]byte, []int) {
	return file_proto_hydra_lcp_hydra_lcp_proto_rawDescGZIP(), []int{12}
}

func (x *GetExternalUserInfoReply) GetYsid() string {
	if x != nil {
		return x.Ysid
	}
	return ""
}

func (x *GetExternalUserInfoReply) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

type CheckExternalUserExistReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserName string `protobuf:"bytes,1,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
}

func (x *CheckExternalUserExistReq) Reset() {
	*x = CheckExternalUserExistReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_hydra_lcp_hydra_lcp_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckExternalUserExistReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckExternalUserExistReq) ProtoMessage() {}

func (x *CheckExternalUserExistReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_hydra_lcp_hydra_lcp_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckExternalUserExistReq.ProtoReflect.Descriptor instead.
func (*CheckExternalUserExistReq) Descriptor() ([]byte, []int) {
	return file_proto_hydra_lcp_hydra_lcp_proto_rawDescGZIP(), []int{13}
}

func (x *CheckExternalUserExistReq) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

type CheckExternalUserExistReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsExist bool `protobuf:"varint,1,opt,name=is_exist,json=isExist,proto3" json:"is_exist,omitempty"`
}

func (x *CheckExternalUserExistReply) Reset() {
	*x = CheckExternalUserExistReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_hydra_lcp_hydra_lcp_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckExternalUserExistReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckExternalUserExistReply) ProtoMessage() {}

func (x *CheckExternalUserExistReply) ProtoReflect() protoreflect.Message {
	mi := &file_proto_hydra_lcp_hydra_lcp_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckExternalUserExistReply.ProtoReflect.Descriptor instead.
func (*CheckExternalUserExistReply) Descriptor() ([]byte, []int) {
	return file_proto_hydra_lcp_hydra_lcp_proto_rawDescGZIP(), []int{14}
}

func (x *CheckExternalUserExistReply) GetIsExist() bool {
	if x != nil {
		return x.IsExist
	}
	return false
}

// 通过手机号添加用户请求
type AddUserFromPhoneReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Phone     string `protobuf:"bytes,1,opt,name=phone,proto3" json:"phone,omitempty"`
	ProductId string `protobuf:"bytes,2,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
	CompanyId string `protobuf:"bytes,3,opt,name=company_id,json=companyId,proto3" json:"company_id,omitempty"`
}

func (x *AddUserFromPhoneReq) Reset() {
	*x = AddUserFromPhoneReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_hydra_lcp_hydra_lcp_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddUserFromPhoneReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddUserFromPhoneReq) ProtoMessage() {}

func (x *AddUserFromPhoneReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_hydra_lcp_hydra_lcp_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddUserFromPhoneReq.ProtoReflect.Descriptor instead.
func (*AddUserFromPhoneReq) Descriptor() ([]byte, []int) {
	return file_proto_hydra_lcp_hydra_lcp_proto_rawDescGZIP(), []int{15}
}

func (x *AddUserFromPhoneReq) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *AddUserFromPhoneReq) GetProductId() string {
	if x != nil {
		return x.ProductId
	}
	return ""
}

func (x *AddUserFromPhoneReq) GetCompanyId() string {
	if x != nil {
		return x.CompanyId
	}
	return ""
}

type VerifyPhoneCodeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Phone string `protobuf:"bytes,1,opt,name=phone,proto3" json:"phone,omitempty"`
	Code  string `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
}

func (x *VerifyPhoneCodeReq) Reset() {
	*x = VerifyPhoneCodeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_hydra_lcp_hydra_lcp_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VerifyPhoneCodeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyPhoneCodeReq) ProtoMessage() {}

func (x *VerifyPhoneCodeReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_hydra_lcp_hydra_lcp_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyPhoneCodeReq.ProtoReflect.Descriptor instead.
func (*VerifyPhoneCodeReq) Descriptor() ([]byte, []int) {
	return file_proto_hydra_lcp_hydra_lcp_proto_rawDescGZIP(), []int{16}
}

func (x *VerifyPhoneCodeReq) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *VerifyPhoneCodeReq) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

type VerifyJwtTokenReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Phone string `protobuf:"bytes,1,opt,name=phone,proto3" json:"phone,omitempty"`
	Token string `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *VerifyJwtTokenReq) Reset() {
	*x = VerifyJwtTokenReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_hydra_lcp_hydra_lcp_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VerifyJwtTokenReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyJwtTokenReq) ProtoMessage() {}

func (x *VerifyJwtTokenReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_hydra_lcp_hydra_lcp_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyJwtTokenReq.ProtoReflect.Descriptor instead.
func (*VerifyJwtTokenReq) Descriptor() ([]byte, []int) {
	return file_proto_hydra_lcp_hydra_lcp_proto_rawDescGZIP(), []int{17}
}

func (x *VerifyJwtTokenReq) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *VerifyJwtTokenReq) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type VerifyPhoneCodeResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsSucceed bool   `protobuf:"varint,1,opt,name=is_succeed,json=isSucceed,proto3" json:"is_succeed,omitempty"`
	Token     string `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *VerifyPhoneCodeResp) Reset() {
	*x = VerifyPhoneCodeResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_hydra_lcp_hydra_lcp_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VerifyPhoneCodeResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyPhoneCodeResp) ProtoMessage() {}

func (x *VerifyPhoneCodeResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_hydra_lcp_hydra_lcp_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyPhoneCodeResp.ProtoReflect.Descriptor instead.
func (*VerifyPhoneCodeResp) Descriptor() ([]byte, []int) {
	return file_proto_hydra_lcp_hydra_lcp_proto_rawDescGZIP(), []int{18}
}

func (x *VerifyPhoneCodeResp) GetIsSucceed() bool {
	if x != nil {
		return x.IsSucceed
	}
	return false
}

func (x *VerifyPhoneCodeResp) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type SendSmsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Phone string `protobuf:"bytes,1,opt,name=phone,proto3" json:"phone,omitempty"`
	// 模板名称：
	// ApplyTerminalSucess 申请终端操作成功
	// ApplyTerminalFailed 申请终端操作失败
	TplName string   `protobuf:"bytes,2,opt,name=tpl_name,json=tplName,proto3" json:"tpl_name,omitempty"`
	Param   []string `protobuf:"bytes,3,rep,name=param,proto3" json:"param,omitempty"`
	// 产品ID
	// @inject_tag: `validate:"is_ysid"`
	ProductId string `protobuf:"bytes,4,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
}

func (x *SendSmsReq) Reset() {
	*x = SendSmsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_hydra_lcp_hydra_lcp_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendSmsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendSmsReq) ProtoMessage() {}

func (x *SendSmsReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_hydra_lcp_hydra_lcp_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendSmsReq.ProtoReflect.Descriptor instead.
func (*SendSmsReq) Descriptor() ([]byte, []int) {
	return file_proto_hydra_lcp_hydra_lcp_proto_rawDescGZIP(), []int{19}
}

func (x *SendSmsReq) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *SendSmsReq) GetTplName() string {
	if x != nil {
		return x.TplName
	}
	return ""
}

func (x *SendSmsReq) GetParam() []string {
	if x != nil {
		return x.Param
	}
	return nil
}

func (x *SendSmsReq) GetProductId() string {
	if x != nil {
		return x.ProductId
	}
	return ""
}

type SendSmsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsSucceed bool `protobuf:"varint,1,opt,name=is_succeed,json=isSucceed,proto3" json:"is_succeed,omitempty"`
}

func (x *SendSmsResp) Reset() {
	*x = SendSmsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_hydra_lcp_hydra_lcp_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendSmsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendSmsResp) ProtoMessage() {}

func (x *SendSmsResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_hydra_lcp_hydra_lcp_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendSmsResp.ProtoReflect.Descriptor instead.
func (*SendSmsResp) Descriptor() ([]byte, []int) {
	return file_proto_hydra_lcp_hydra_lcp_proto_rawDescGZIP(), []int{20}
}

func (x *SendSmsResp) GetIsSucceed() bool {
	if x != nil {
		return x.IsSucceed
	}
	return false
}

type GetOffiaccountBindingReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: `validate:"is_ysid"`
	UserId           string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	WechatOpenid     string `protobuf:"bytes,2,opt,name=wechat_openid,json=wechatOpenid,proto3" json:"wechat_openid,omitempty"`
	Platform         string `protobuf:"bytes,3,opt,name=platform,proto3" json:"platform,omitempty"`
	NotificationType string `protobuf:"bytes,4,opt,name=notification_type,json=notificationType,proto3" json:"notification_type,omitempty"`
	// @inject_tag: `validate:"is_ysid"`
	CompanyId string `protobuf:"bytes,5,opt,name=company_id,json=companyId,proto3" json:"company_id,omitempty"`
}

func (x *GetOffiaccountBindingReq) Reset() {
	*x = GetOffiaccountBindingReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_hydra_lcp_hydra_lcp_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOffiaccountBindingReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOffiaccountBindingReq) ProtoMessage() {}

func (x *GetOffiaccountBindingReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_hydra_lcp_hydra_lcp_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOffiaccountBindingReq.ProtoReflect.Descriptor instead.
func (*GetOffiaccountBindingReq) Descriptor() ([]byte, []int) {
	return file_proto_hydra_lcp_hydra_lcp_proto_rawDescGZIP(), []int{21}
}

func (x *GetOffiaccountBindingReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetOffiaccountBindingReq) GetWechatOpenid() string {
	if x != nil {
		return x.WechatOpenid
	}
	return ""
}

func (x *GetOffiaccountBindingReq) GetPlatform() string {
	if x != nil {
		return x.Platform
	}
	return ""
}

func (x *GetOffiaccountBindingReq) GetNotificationType() string {
	if x != nil {
		return x.NotificationType
	}
	return ""
}

func (x *GetOffiaccountBindingReq) GetCompanyId() string {
	if x != nil {
		return x.CompanyId
	}
	return ""
}

type OffiaccountBinding struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: `validate:"is_ysid"`
	Id       string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Platform string `protobuf:"bytes,2,opt,name=platform,proto3" json:"platform,omitempty"`
	// @inject_tag: `validate:"is_ysid"`
	UserId string `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// @inject_tag: `validate:"is_ysid"`
	CreateBy string `protobuf:"bytes,4,opt,name=create_by,json=createBy,proto3" json:"create_by,omitempty"`
	// @inject_tag: `validate:"is_ysid"`
	UpdateBy string `protobuf:"bytes,5,opt,name=update_by,json=updateBy,proto3" json:"update_by,omitempty"`
	// @inject_tag: `validate:"is_ysid"`
	CompanyId        string `protobuf:"bytes,6,opt,name=company_id,json=companyId,proto3" json:"company_id,omitempty"`
	CompanyIds       string `protobuf:"bytes,7,opt,name=company_ids,json=companyIds,proto3" json:"company_ids,omitempty"`
	WechatOpenid     string `protobuf:"bytes,8,opt,name=wechat_openid,json=wechatOpenid,proto3" json:"wechat_openid,omitempty"`
	WechatUnionid    string `protobuf:"bytes,9,opt,name=wechat_unionid,json=wechatUnionid,proto3" json:"wechat_unionid,omitempty"`
	WechatNickname   string `protobuf:"bytes,10,opt,name=wechat_nickname,json=wechatNickname,proto3" json:"wechat_nickname,omitempty"`
	WechatHeadimgurl string `protobuf:"bytes,11,opt,name=wechat_headimgurl,json=wechatHeadimgurl,proto3" json:"wechat_headimgurl,omitempty"`
	WechatLanguage   string `protobuf:"bytes,12,opt,name=wechat_language,json=wechatLanguage,proto3" json:"wechat_language,omitempty"`
	UserGender       int32  `protobuf:"varint,13,opt,name=user_gender,json=userGender,proto3" json:"user_gender,omitempty"`
	UserCity         string `protobuf:"bytes,14,opt,name=user_city,json=userCity,proto3" json:"user_city,omitempty"`
	// job or balance
	NotificationType      string                 `protobuf:"bytes,15,opt,name=notification_type,json=notificationType,proto3" json:"notification_type,omitempty"`
	NotificationActivated int32                  `protobuf:"varint,16,opt,name=notification_activated,json=notificationActivated,proto3" json:"notification_activated,omitempty"`
	IsSubscribed          int32                  `protobuf:"varint,17,opt,name=is_subscribed,json=isSubscribed,proto3" json:"is_subscribed,omitempty"`
	SubscribeScene        string                 `protobuf:"bytes,18,opt,name=subscribe_scene,json=subscribeScene,proto3" json:"subscribe_scene,omitempty"`
	SubscribeTime         *timestamppb.Timestamp `protobuf:"bytes,19,opt,name=subscribe_time,json=subscribeTime,proto3" json:"subscribe_time,omitempty"`
	UnsubscribeTime       *timestamppb.Timestamp `protobuf:"bytes,20,opt,name=unsubscribe_time,json=unsubscribeTime,proto3" json:"unsubscribe_time,omitempty"`
	ActivateTime          *timestamppb.Timestamp `protobuf:"bytes,21,opt,name=activate_time,json=activateTime,proto3" json:"activate_time,omitempty"`
	DeactivateTime        *timestamppb.Timestamp `protobuf:"bytes,22,opt,name=deactivate_time,json=deactivateTime,proto3" json:"deactivate_time,omitempty"`
}

func (x *OffiaccountBinding) Reset() {
	*x = OffiaccountBinding{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_hydra_lcp_hydra_lcp_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OffiaccountBinding) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OffiaccountBinding) ProtoMessage() {}

func (x *OffiaccountBinding) ProtoReflect() protoreflect.Message {
	mi := &file_proto_hydra_lcp_hydra_lcp_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OffiaccountBinding.ProtoReflect.Descriptor instead.
func (*OffiaccountBinding) Descriptor() ([]byte, []int) {
	return file_proto_hydra_lcp_hydra_lcp_proto_rawDescGZIP(), []int{22}
}

func (x *OffiaccountBinding) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *OffiaccountBinding) GetPlatform() string {
	if x != nil {
		return x.Platform
	}
	return ""
}

func (x *OffiaccountBinding) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *OffiaccountBinding) GetCreateBy() string {
	if x != nil {
		return x.CreateBy
	}
	return ""
}

func (x *OffiaccountBinding) GetUpdateBy() string {
	if x != nil {
		return x.UpdateBy
	}
	return ""
}

func (x *OffiaccountBinding) GetCompanyId() string {
	if x != nil {
		return x.CompanyId
	}
	return ""
}

func (x *OffiaccountBinding) GetCompanyIds() string {
	if x != nil {
		return x.CompanyIds
	}
	return ""
}

func (x *OffiaccountBinding) GetWechatOpenid() string {
	if x != nil {
		return x.WechatOpenid
	}
	return ""
}

func (x *OffiaccountBinding) GetWechatUnionid() string {
	if x != nil {
		return x.WechatUnionid
	}
	return ""
}

func (x *OffiaccountBinding) GetWechatNickname() string {
	if x != nil {
		return x.WechatNickname
	}
	return ""
}

func (x *OffiaccountBinding) GetWechatHeadimgurl() string {
	if x != nil {
		return x.WechatHeadimgurl
	}
	return ""
}

func (x *OffiaccountBinding) GetWechatLanguage() string {
	if x != nil {
		return x.WechatLanguage
	}
	return ""
}

func (x *OffiaccountBinding) GetUserGender() int32 {
	if x != nil {
		return x.UserGender
	}
	return 0
}

func (x *OffiaccountBinding) GetUserCity() string {
	if x != nil {
		return x.UserCity
	}
	return ""
}

func (x *OffiaccountBinding) GetNotificationType() string {
	if x != nil {
		return x.NotificationType
	}
	return ""
}

func (x *OffiaccountBinding) GetNotificationActivated() int32 {
	if x != nil {
		return x.NotificationActivated
	}
	return 0
}

func (x *OffiaccountBinding) GetIsSubscribed() int32 {
	if x != nil {
		return x.IsSubscribed
	}
	return 0
}

func (x *OffiaccountBinding) GetSubscribeScene() string {
	if x != nil {
		return x.SubscribeScene
	}
	return ""
}

func (x *OffiaccountBinding) GetSubscribeTime() *timestamppb.Timestamp {
	if x != nil {
		return x.SubscribeTime
	}
	return nil
}

func (x *OffiaccountBinding) GetUnsubscribeTime() *timestamppb.Timestamp {
	if x != nil {
		return x.UnsubscribeTime
	}
	return nil
}

func (x *OffiaccountBinding) GetActivateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.ActivateTime
	}
	return nil
}

func (x *OffiaccountBinding) GetDeactivateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.DeactivateTime
	}
	return nil
}

type GetOffiaccountBalanceSubListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: `validate:"is_ysid"`
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// @inject_tag: `validate:"is_ysid"`
	CompanyId string `protobuf:"bytes,2,opt,name=company_id,json=companyId,proto3" json:"company_id,omitempty"`
	Platform  string `protobuf:"bytes,3,opt,name=platform,proto3" json:"platform,omitempty"`
	Page      *Page  `protobuf:"bytes,4,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *GetOffiaccountBalanceSubListReq) Reset() {
	*x = GetOffiaccountBalanceSubListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_hydra_lcp_hydra_lcp_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOffiaccountBalanceSubListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOffiaccountBalanceSubListReq) ProtoMessage() {}

func (x *GetOffiaccountBalanceSubListReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_hydra_lcp_hydra_lcp_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOffiaccountBalanceSubListReq.ProtoReflect.Descriptor instead.
func (*GetOffiaccountBalanceSubListReq) Descriptor() ([]byte, []int) {
	return file_proto_hydra_lcp_hydra_lcp_proto_rawDescGZIP(), []int{23}
}

func (x *GetOffiaccountBalanceSubListReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetOffiaccountBalanceSubListReq) GetCompanyId() string {
	if x != nil {
		return x.CompanyId
	}
	return ""
}

func (x *GetOffiaccountBalanceSubListReq) GetPlatform() string {
	if x != nil {
		return x.Platform
	}
	return ""
}

func (x *GetOffiaccountBalanceSubListReq) GetPage() *Page {
	if x != nil {
		return x.Page
	}
	return nil
}

type GetOffiaccountBalanceSubListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OffiaccountBindings []*OffiaccountBinding `protobuf:"bytes,1,rep,name=OffiaccountBindings,proto3" json:"OffiaccountBindings,omitempty"`
	PageCtx             *PageCtx              `protobuf:"bytes,2,opt,name=page_ctx,json=pageCtx,proto3" json:"page_ctx,omitempty"`
}

func (x *GetOffiaccountBalanceSubListResp) Reset() {
	*x = GetOffiaccountBalanceSubListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_hydra_lcp_hydra_lcp_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOffiaccountBalanceSubListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOffiaccountBalanceSubListResp) ProtoMessage() {}

func (x *GetOffiaccountBalanceSubListResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_hydra_lcp_hydra_lcp_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOffiaccountBalanceSubListResp.ProtoReflect.Descriptor instead.
func (*GetOffiaccountBalanceSubListResp) Descriptor() ([]byte, []int) {
	return file_proto_hydra_lcp_hydra_lcp_proto_rawDescGZIP(), []int{24}
}

func (x *GetOffiaccountBalanceSubListResp) GetOffiaccountBindings() []*OffiaccountBinding {
	if x != nil {
		return x.OffiaccountBindings
	}
	return nil
}

func (x *GetOffiaccountBalanceSubListResp) GetPageCtx() *PageCtx {
	if x != nil {
		return x.PageCtx
	}
	return nil
}

type NotificationContent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	First    string `protobuf:"bytes,1,opt,name=first,proto3" json:"first,omitempty"`
	Keyword1 string `protobuf:"bytes,2,opt,name=keyword1,proto3" json:"keyword1,omitempty"`
	Keyword2 string `protobuf:"bytes,3,opt,name=keyword2,proto3" json:"keyword2,omitempty"`
	Keyword3 string `protobuf:"bytes,4,opt,name=keyword3,proto3" json:"keyword3,omitempty"`
	Keyword4 string `protobuf:"bytes,5,opt,name=keyword4,proto3" json:"keyword4,omitempty"`
	Remark   string `protobuf:"bytes,6,opt,name=remark,proto3" json:"remark,omitempty"`
}

func (x *NotificationContent) Reset() {
	*x = NotificationContent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_hydra_lcp_hydra_lcp_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotificationContent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotificationContent) ProtoMessage() {}

func (x *NotificationContent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_hydra_lcp_hydra_lcp_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotificationContent.ProtoReflect.Descriptor instead.
func (*NotificationContent) Descriptor() ([]byte, []int) {
	return file_proto_hydra_lcp_hydra_lcp_proto_rawDescGZIP(), []int{25}
}

func (x *NotificationContent) GetFirst() string {
	if x != nil {
		return x.First
	}
	return ""
}

func (x *NotificationContent) GetKeyword1() string {
	if x != nil {
		return x.Keyword1
	}
	return ""
}

func (x *NotificationContent) GetKeyword2() string {
	if x != nil {
		return x.Keyword2
	}
	return ""
}

func (x *NotificationContent) GetKeyword3() string {
	if x != nil {
		return x.Keyword3
	}
	return ""
}

func (x *NotificationContent) GetKeyword4() string {
	if x != nil {
		return x.Keyword4
	}
	return ""
}

func (x *NotificationContent) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

type SendOffiaccountNotificationReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: `validate:"is_ysid"`
	UserId              string               `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	NotificationType    string               `protobuf:"bytes,2,opt,name=notification_type,json=notificationType,proto3" json:"notification_type,omitempty"`
	NotificationContent *NotificationContent `protobuf:"bytes,3,opt,name=notification_content,json=notificationContent,proto3" json:"notification_content,omitempty"`
}

func (x *SendOffiaccountNotificationReq) Reset() {
	*x = SendOffiaccountNotificationReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_hydra_lcp_hydra_lcp_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendOffiaccountNotificationReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendOffiaccountNotificationReq) ProtoMessage() {}

func (x *SendOffiaccountNotificationReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_hydra_lcp_hydra_lcp_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendOffiaccountNotificationReq.ProtoReflect.Descriptor instead.
func (*SendOffiaccountNotificationReq) Descriptor() ([]byte, []int) {
	return file_proto_hydra_lcp_hydra_lcp_proto_rawDescGZIP(), []int{26}
}

func (x *SendOffiaccountNotificationReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *SendOffiaccountNotificationReq) GetNotificationType() string {
	if x != nil {
		return x.NotificationType
	}
	return ""
}

func (x *SendOffiaccountNotificationReq) GetNotificationContent() *NotificationContent {
	if x != nil {
		return x.NotificationContent
	}
	return nil
}

type SendOffiaccountNotificationResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NotificationId int64 `protobuf:"varint,1,opt,name=notification_id,json=notificationId,proto3" json:"notification_id,omitempty"`
}

func (x *SendOffiaccountNotificationResp) Reset() {
	*x = SendOffiaccountNotificationResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_hydra_lcp_hydra_lcp_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendOffiaccountNotificationResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendOffiaccountNotificationResp) ProtoMessage() {}

func (x *SendOffiaccountNotificationResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_hydra_lcp_hydra_lcp_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendOffiaccountNotificationResp.ProtoReflect.Descriptor instead.
func (*SendOffiaccountNotificationResp) Descriptor() ([]byte, []int) {
	return file_proto_hydra_lcp_hydra_lcp_proto_rawDescGZIP(), []int{27}
}

func (x *SendOffiaccountNotificationResp) GetNotificationId() int64 {
	if x != nil {
		return x.NotificationId
	}
	return 0
}

type SendOffiaccountBalanceNotificationsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: `validate:"is_ysid"`
	CompanyId           string               `protobuf:"bytes,1,opt,name=company_id,json=companyId,proto3" json:"company_id,omitempty"`
	Platform            string               `protobuf:"bytes,2,opt,name=platform,proto3" json:"platform,omitempty"`
	NotificationType    string               `protobuf:"bytes,3,opt,name=notification_type,json=notificationType,proto3" json:"notification_type,omitempty"`
	NotificationContent *NotificationContent `protobuf:"bytes,4,opt,name=notification_content,json=notificationContent,proto3" json:"notification_content,omitempty"`
}

func (x *SendOffiaccountBalanceNotificationsReq) Reset() {
	*x = SendOffiaccountBalanceNotificationsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_hydra_lcp_hydra_lcp_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendOffiaccountBalanceNotificationsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendOffiaccountBalanceNotificationsReq) ProtoMessage() {}

func (x *SendOffiaccountBalanceNotificationsReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_hydra_lcp_hydra_lcp_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendOffiaccountBalanceNotificationsReq.ProtoReflect.Descriptor instead.
func (*SendOffiaccountBalanceNotificationsReq) Descriptor() ([]byte, []int) {
	return file_proto_hydra_lcp_hydra_lcp_proto_rawDescGZIP(), []int{28}
}

func (x *SendOffiaccountBalanceNotificationsReq) GetCompanyId() string {
	if x != nil {
		return x.CompanyId
	}
	return ""
}

func (x *SendOffiaccountBalanceNotificationsReq) GetPlatform() string {
	if x != nil {
		return x.Platform
	}
	return ""
}

func (x *SendOffiaccountBalanceNotificationsReq) GetNotificationType() string {
	if x != nil {
		return x.NotificationType
	}
	return ""
}

func (x *SendOffiaccountBalanceNotificationsReq) GetNotificationContent() *NotificationContent {
	if x != nil {
		return x.NotificationContent
	}
	return nil
}

type SendOffiaccountVisJobNotificationReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: `validate:"is_ysid"`
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// @inject_tag: `validate:"required"`
	Platform string `protobuf:"bytes,2,opt,name=platform,proto3" json:"platform,omitempty"`
	// @inject_tag: `validate:"required"`
	NotificationType    string               `protobuf:"bytes,3,opt,name=notification_type,json=notificationType,proto3" json:"notification_type,omitempty"`
	NotificationContent *NotificationContent `protobuf:"bytes,4,opt,name=notification_content,json=notificationContent,proto3" json:"notification_content,omitempty"`
}

func (x *SendOffiaccountVisJobNotificationReq) Reset() {
	*x = SendOffiaccountVisJobNotificationReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_hydra_lcp_hydra_lcp_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendOffiaccountVisJobNotificationReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendOffiaccountVisJobNotificationReq) ProtoMessage() {}

func (x *SendOffiaccountVisJobNotificationReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_hydra_lcp_hydra_lcp_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendOffiaccountVisJobNotificationReq.ProtoReflect.Descriptor instead.
func (*SendOffiaccountVisJobNotificationReq) Descriptor() ([]byte, []int) {
	return file_proto_hydra_lcp_hydra_lcp_proto_rawDescGZIP(), []int{29}
}

func (x *SendOffiaccountVisJobNotificationReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *SendOffiaccountVisJobNotificationReq) GetPlatform() string {
	if x != nil {
		return x.Platform
	}
	return ""
}

func (x *SendOffiaccountVisJobNotificationReq) GetNotificationType() string {
	if x != nil {
		return x.NotificationType
	}
	return ""
}

func (x *SendOffiaccountVisJobNotificationReq) GetNotificationContent() *NotificationContent {
	if x != nil {
		return x.NotificationContent
	}
	return nil
}

type DeactivateOffiaccountNotificationReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Platform         string `protobuf:"bytes,1,opt,name=platform,proto3" json:"platform,omitempty"`
	UserId           string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	WechatOpenid     string `protobuf:"bytes,3,opt,name=wechat_openid,json=wechatOpenid,proto3" json:"wechat_openid,omitempty"`
	NotificationType string `protobuf:"bytes,4,opt,name=notification_type,json=notificationType,proto3" json:"notification_type,omitempty"`
	// @inject_tag: `validate:"is_ysid"`
	CompanyId string `protobuf:"bytes,5,opt,name=company_id,json=companyId,proto3" json:"company_id,omitempty"`
}

func (x *DeactivateOffiaccountNotificationReq) Reset() {
	*x = DeactivateOffiaccountNotificationReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_hydra_lcp_hydra_lcp_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeactivateOffiaccountNotificationReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeactivateOffiaccountNotificationReq) ProtoMessage() {}

func (x *DeactivateOffiaccountNotificationReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_hydra_lcp_hydra_lcp_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeactivateOffiaccountNotificationReq.ProtoReflect.Descriptor instead.
func (*DeactivateOffiaccountNotificationReq) Descriptor() ([]byte, []int) {
	return file_proto_hydra_lcp_hydra_lcp_proto_rawDescGZIP(), []int{30}
}

func (x *DeactivateOffiaccountNotificationReq) GetPlatform() string {
	if x != nil {
		return x.Platform
	}
	return ""
}

func (x *DeactivateOffiaccountNotificationReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *DeactivateOffiaccountNotificationReq) GetWechatOpenid() string {
	if x != nil {
		return x.WechatOpenid
	}
	return ""
}

func (x *DeactivateOffiaccountNotificationReq) GetNotificationType() string {
	if x != nil {
		return x.NotificationType
	}
	return ""
}

func (x *DeactivateOffiaccountNotificationReq) GetCompanyId() string {
	if x != nil {
		return x.CompanyId
	}
	return ""
}

type DeactivateOffiaccountNotificationResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UpdateNum int64 `protobuf:"varint,1,opt,name=update_num,json=updateNum,proto3" json:"update_num,omitempty"`
}

func (x *DeactivateOffiaccountNotificationResp) Reset() {
	*x = DeactivateOffiaccountNotificationResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_hydra_lcp_hydra_lcp_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeactivateOffiaccountNotificationResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeactivateOffiaccountNotificationResp) ProtoMessage() {}

func (x *DeactivateOffiaccountNotificationResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_hydra_lcp_hydra_lcp_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeactivateOffiaccountNotificationResp.ProtoReflect.Descriptor instead.
func (*DeactivateOffiaccountNotificationResp) Descriptor() ([]byte, []int) {
	return file_proto_hydra_lcp_hydra_lcp_proto_rawDescGZIP(), []int{31}
}

func (x *DeactivateOffiaccountNotificationResp) GetUpdateNum() int64 {
	if x != nil {
		return x.UpdateNum
	}
	return 0
}

type JobToNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId     string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	JobId      string                 `protobuf:"bytes,3,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	Status     int32                  `protobuf:"varint,4,opt,name=status,proto3" json:"status,omitempty"`
	CreateTime *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	UpdateTime *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
}

func (x *JobToNotify) Reset() {
	*x = JobToNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_hydra_lcp_hydra_lcp_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobToNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobToNotify) ProtoMessage() {}

func (x *JobToNotify) ProtoReflect() protoreflect.Message {
	mi := &file_proto_hydra_lcp_hydra_lcp_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobToNotify.ProtoReflect.Descriptor instead.
func (*JobToNotify) Descriptor() ([]byte, []int) {
	return file_proto_hydra_lcp_hydra_lcp_proto_rawDescGZIP(), []int{32}
}

func (x *JobToNotify) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *JobToNotify) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *JobToNotify) GetJobId() string {
	if x != nil {
		return x.JobId
	}
	return ""
}

func (x *JobToNotify) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *JobToNotify) GetCreateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CreateTime
	}
	return nil
}

func (x *JobToNotify) GetUpdateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdateTime
	}
	return nil
}

type AddJobToNotifyReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: `validate:"is_ysid"`
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// @inject_tag: `validate:"is_ysid"`
	UserId string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// @inject_tag: `validate:"is_ysid"`
	JobId string `protobuf:"bytes,3,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	// @inject_tag: `validate:"is_ysid"`
	CompanyId string `protobuf:"bytes,4,opt,name=company_id,json=companyId,proto3" json:"company_id,omitempty"`
}

func (x *AddJobToNotifyReq) Reset() {
	*x = AddJobToNotifyReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_hydra_lcp_hydra_lcp_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddJobToNotifyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddJobToNotifyReq) ProtoMessage() {}

func (x *AddJobToNotifyReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_hydra_lcp_hydra_lcp_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddJobToNotifyReq.ProtoReflect.Descriptor instead.
func (*AddJobToNotifyReq) Descriptor() ([]byte, []int) {
	return file_proto_hydra_lcp_hydra_lcp_proto_rawDescGZIP(), []int{33}
}

func (x *AddJobToNotifyReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AddJobToNotifyReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *AddJobToNotifyReq) GetJobId() string {
	if x != nil {
		return x.JobId
	}
	return ""
}

func (x *AddJobToNotifyReq) GetCompanyId() string {
	if x != nil {
		return x.CompanyId
	}
	return ""
}

type GetJobToNotifyReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: `validate:"is_ysid"`
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// @inject_tag: `validate:"is_ysid"`
	JobId string `protobuf:"bytes,2,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
}

func (x *GetJobToNotifyReq) Reset() {
	*x = GetJobToNotifyReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_hydra_lcp_hydra_lcp_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetJobToNotifyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetJobToNotifyReq) ProtoMessage() {}

func (x *GetJobToNotifyReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_hydra_lcp_hydra_lcp_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetJobToNotifyReq.ProtoReflect.Descriptor instead.
func (*GetJobToNotifyReq) Descriptor() ([]byte, []int) {
	return file_proto_hydra_lcp_hydra_lcp_proto_rawDescGZIP(), []int{34}
}

func (x *GetJobToNotifyReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetJobToNotifyReq) GetJobId() string {
	if x != nil {
		return x.JobId
	}
	return ""
}

type SetJobToNotifyStatusReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: `validate:"is_ysid"`
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// @inject_tag: `validate:"is_ysid"`
	JobId  string `protobuf:"bytes,2,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	Status int32  `protobuf:"varint,3,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *SetJobToNotifyStatusReq) Reset() {
	*x = SetJobToNotifyStatusReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_hydra_lcp_hydra_lcp_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetJobToNotifyStatusReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetJobToNotifyStatusReq) ProtoMessage() {}

func (x *SetJobToNotifyStatusReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_hydra_lcp_hydra_lcp_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetJobToNotifyStatusReq.ProtoReflect.Descriptor instead.
func (*SetJobToNotifyStatusReq) Descriptor() ([]byte, []int) {
	return file_proto_hydra_lcp_hydra_lcp_proto_rawDescGZIP(), []int{35}
}

func (x *SetJobToNotifyStatusReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *SetJobToNotifyStatusReq) GetJobId() string {
	if x != nil {
		return x.JobId
	}
	return ""
}

func (x *SetJobToNotifyStatusReq) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type SetJobToNotifyStatusResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UpdateNum int64 `protobuf:"varint,1,opt,name=update_num,json=updateNum,proto3" json:"update_num,omitempty"`
}

func (x *SetJobToNotifyStatusResp) Reset() {
	*x = SetJobToNotifyStatusResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_hydra_lcp_hydra_lcp_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetJobToNotifyStatusResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetJobToNotifyStatusResp) ProtoMessage() {}

func (x *SetJobToNotifyStatusResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_hydra_lcp_hydra_lcp_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetJobToNotifyStatusResp.ProtoReflect.Descriptor instead.
func (*SetJobToNotifyStatusResp) Descriptor() ([]byte, []int) {
	return file_proto_hydra_lcp_hydra_lcp_proto_rawDescGZIP(), []int{36}
}

func (x *SetJobToNotifyStatusResp) GetUpdateNum() int64 {
	if x != nil {
		return x.UpdateNum
	}
	return 0
}

type GetOffiaccountAKReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppId string `protobuf:"bytes,1,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
}

func (x *GetOffiaccountAKReq) Reset() {
	*x = GetOffiaccountAKReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_hydra_lcp_hydra_lcp_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOffiaccountAKReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOffiaccountAKReq) ProtoMessage() {}

func (x *GetOffiaccountAKReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_hydra_lcp_hydra_lcp_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOffiaccountAKReq.ProtoReflect.Descriptor instead.
func (*GetOffiaccountAKReq) Descriptor() ([]byte, []int) {
	return file_proto_hydra_lcp_hydra_lcp_proto_rawDescGZIP(), []int{37}
}

func (x *GetOffiaccountAKReq) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

type GetOffiaccountAKResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessToken string `protobuf:"bytes,1,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
}

func (x *GetOffiaccountAKResp) Reset() {
	*x = GetOffiaccountAKResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_hydra_lcp_hydra_lcp_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOffiaccountAKResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOffiaccountAKResp) ProtoMessage() {}

func (x *GetOffiaccountAKResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_hydra_lcp_hydra_lcp_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOffiaccountAKResp.ProtoReflect.Descriptor instead.
func (*GetOffiaccountAKResp) Descriptor() ([]byte, []int) {
	return file_proto_hydra_lcp_hydra_lcp_proto_rawDescGZIP(), []int{38}
}

func (x *GetOffiaccountAKResp) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

type SaveOffiaccountMenuReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: `validate:"is_ysid"`
	Id     string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	AppId  string `protobuf:"bytes,2,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	Button string `protobuf:"bytes,3,opt,name=button,proto3" json:"button,omitempty"`
	// @inject_tag: `validate:"is_ysid"`
	CreatorId string `protobuf:"bytes,4,opt,name=creator_id,json=creatorId,proto3" json:"creator_id,omitempty"`
	Publish   bool   `protobuf:"varint,5,opt,name=publish,proto3" json:"publish,omitempty"`
}

func (x *SaveOffiaccountMenuReq) Reset() {
	*x = SaveOffiaccountMenuReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_hydra_lcp_hydra_lcp_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaveOffiaccountMenuReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveOffiaccountMenuReq) ProtoMessage() {}

func (x *SaveOffiaccountMenuReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_hydra_lcp_hydra_lcp_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveOffiaccountMenuReq.ProtoReflect.Descriptor instead.
func (*SaveOffiaccountMenuReq) Descriptor() ([]byte, []int) {
	return file_proto_hydra_lcp_hydra_lcp_proto_rawDescGZIP(), []int{39}
}

func (x *SaveOffiaccountMenuReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *SaveOffiaccountMenuReq) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *SaveOffiaccountMenuReq) GetButton() string {
	if x != nil {
		return x.Button
	}
	return ""
}

func (x *SaveOffiaccountMenuReq) GetCreatorId() string {
	if x != nil {
		return x.CreatorId
	}
	return ""
}

func (x *SaveOffiaccountMenuReq) GetPublish() bool {
	if x != nil {
		return x.Publish
	}
	return false
}

type OffiaccountMenu struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: `validate:"is_ysid"`
	Id         string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	AppId      string                 `protobuf:"bytes,2,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	Button     string                 `protobuf:"bytes,3,opt,name=button,proto3" json:"button,omitempty"`
	CreatorId  string                 `protobuf:"bytes,4,opt,name=creator_id,json=creatorId,proto3" json:"creator_id,omitempty"`
	CreateTime *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	UpdateTime *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
}

func (x *OffiaccountMenu) Reset() {
	*x = OffiaccountMenu{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_hydra_lcp_hydra_lcp_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OffiaccountMenu) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OffiaccountMenu) ProtoMessage() {}

func (x *OffiaccountMenu) ProtoReflect() protoreflect.Message {
	mi := &file_proto_hydra_lcp_hydra_lcp_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OffiaccountMenu.ProtoReflect.Descriptor instead.
func (*OffiaccountMenu) Descriptor() ([]byte, []int) {
	return file_proto_hydra_lcp_hydra_lcp_proto_rawDescGZIP(), []int{40}
}

func (x *OffiaccountMenu) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *OffiaccountMenu) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *OffiaccountMenu) GetButton() string {
	if x != nil {
		return x.Button
	}
	return ""
}

func (x *OffiaccountMenu) GetCreatorId() string {
	if x != nil {
		return x.CreatorId
	}
	return ""
}

func (x *OffiaccountMenu) GetCreateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CreateTime
	}
	return nil
}

func (x *OffiaccountMenu) GetUpdateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdateTime
	}
	return nil
}

type GetOffiaccountMenuReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppId string `protobuf:"bytes,1,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
}

func (x *GetOffiaccountMenuReq) Reset() {
	*x = GetOffiaccountMenuReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_hydra_lcp_hydra_lcp_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOffiaccountMenuReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOffiaccountMenuReq) ProtoMessage() {}

func (x *GetOffiaccountMenuReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_hydra_lcp_hydra_lcp_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOffiaccountMenuReq.ProtoReflect.Descriptor instead.
func (*GetOffiaccountMenuReq) Descriptor() ([]byte, []int) {
	return file_proto_hydra_lcp_hydra_lcp_proto_rawDescGZIP(), []int{41}
}

func (x *GetOffiaccountMenuReq) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

type OffiaccountReplyRule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: `validate:"is_ysid"`
	Id         string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	RuleName   string                 `protobuf:"bytes,2,opt,name=rule_name,json=ruleName,proto3" json:"rule_name,omitempty"`
	Keywords   string                 `protobuf:"bytes,3,opt,name=keywords,proto3" json:"keywords,omitempty"`
	ReplyList  string                 `protobuf:"bytes,4,opt,name=reply_list,json=replyList,proto3" json:"reply_list,omitempty"`
	ReplyMode  string                 `protobuf:"bytes,5,opt,name=reply_mode,json=replyMode,proto3" json:"reply_mode,omitempty"`
	IsActive   string                 `protobuf:"bytes,6,opt,name=is_active,json=isActive,proto3" json:"is_active,omitempty"`
	CreatorId  string                 `protobuf:"bytes,7,opt,name=creator_id,json=creatorId,proto3" json:"creator_id,omitempty"`
	CreateTime *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	UpdateTime *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
}

func (x *OffiaccountReplyRule) Reset() {
	*x = OffiaccountReplyRule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_hydra_lcp_hydra_lcp_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OffiaccountReplyRule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OffiaccountReplyRule) ProtoMessage() {}

func (x *OffiaccountReplyRule) ProtoReflect() protoreflect.Message {
	mi := &file_proto_hydra_lcp_hydra_lcp_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OffiaccountReplyRule.ProtoReflect.Descriptor instead.
func (*OffiaccountReplyRule) Descriptor() ([]byte, []int) {
	return file_proto_hydra_lcp_hydra_lcp_proto_rawDescGZIP(), []int{42}
}

func (x *OffiaccountReplyRule) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *OffiaccountReplyRule) GetRuleName() string {
	if x != nil {
		return x.RuleName
	}
	return ""
}

func (x *OffiaccountReplyRule) GetKeywords() string {
	if x != nil {
		return x.Keywords
	}
	return ""
}

func (x *OffiaccountReplyRule) GetReplyList() string {
	if x != nil {
		return x.ReplyList
	}
	return ""
}

func (x *OffiaccountReplyRule) GetReplyMode() string {
	if x != nil {
		return x.ReplyMode
	}
	return ""
}

func (x *OffiaccountReplyRule) GetIsActive() string {
	if x != nil {
		return x.IsActive
	}
	return ""
}

func (x *OffiaccountReplyRule) GetCreatorId() string {
	if x != nil {
		return x.CreatorId
	}
	return ""
}

func (x *OffiaccountReplyRule) GetCreateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CreateTime
	}
	return nil
}

func (x *OffiaccountReplyRule) GetUpdateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdateTime
	}
	return nil
}

type AddOffiaccountReplyRuleReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: `validate:"is_ysid"`
	UserId    string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	RuleName  string `protobuf:"bytes,2,opt,name=rule_name,json=ruleName,proto3" json:"rule_name,omitempty"`
	Keywords  string `protobuf:"bytes,3,opt,name=keywords,proto3" json:"keywords,omitempty"`
	ReplyList string `protobuf:"bytes,4,opt,name=reply_list,json=replyList,proto3" json:"reply_list,omitempty"`
	ReplyMode string `protobuf:"bytes,5,opt,name=reply_mode,json=replyMode,proto3" json:"reply_mode,omitempty"`
}

func (x *AddOffiaccountReplyRuleReq) Reset() {
	*x = AddOffiaccountReplyRuleReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_hydra_lcp_hydra_lcp_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddOffiaccountReplyRuleReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddOffiaccountReplyRuleReq) ProtoMessage() {}

func (x *AddOffiaccountReplyRuleReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_hydra_lcp_hydra_lcp_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddOffiaccountReplyRuleReq.ProtoReflect.Descriptor instead.
func (*AddOffiaccountReplyRuleReq) Descriptor() ([]byte, []int) {
	return file_proto_hydra_lcp_hydra_lcp_proto_rawDescGZIP(), []int{43}
}

func (x *AddOffiaccountReplyRuleReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *AddOffiaccountReplyRuleReq) GetRuleName() string {
	if x != nil {
		return x.RuleName
	}
	return ""
}

func (x *AddOffiaccountReplyRuleReq) GetKeywords() string {
	if x != nil {
		return x.Keywords
	}
	return ""
}

func (x *AddOffiaccountReplyRuleReq) GetReplyList() string {
	if x != nil {
		return x.ReplyList
	}
	return ""
}

func (x *AddOffiaccountReplyRuleReq) GetReplyMode() string {
	if x != nil {
		return x.ReplyMode
	}
	return ""
}

type GetOffiaccountReplyRuleReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: `validate:"is_ysid"`
	RuleId string `protobuf:"bytes,1,opt,name=rule_id,json=ruleId,proto3" json:"rule_id,omitempty"`
}

func (x *GetOffiaccountReplyRuleReq) Reset() {
	*x = GetOffiaccountReplyRuleReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_hydra_lcp_hydra_lcp_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOffiaccountReplyRuleReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOffiaccountReplyRuleReq) ProtoMessage() {}

func (x *GetOffiaccountReplyRuleReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_hydra_lcp_hydra_lcp_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOffiaccountReplyRuleReq.ProtoReflect.Descriptor instead.
func (*GetOffiaccountReplyRuleReq) Descriptor() ([]byte, []int) {
	return file_proto_hydra_lcp_hydra_lcp_proto_rawDescGZIP(), []int{44}
}

func (x *GetOffiaccountReplyRuleReq) GetRuleId() string {
	if x != nil {
		return x.RuleId
	}
	return ""
}

type GetOffiaccountReplyRuleListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page *Page `protobuf:"bytes,1,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *GetOffiaccountReplyRuleListReq) Reset() {
	*x = GetOffiaccountReplyRuleListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_hydra_lcp_hydra_lcp_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOffiaccountReplyRuleListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOffiaccountReplyRuleListReq) ProtoMessage() {}

func (x *GetOffiaccountReplyRuleListReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_hydra_lcp_hydra_lcp_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOffiaccountReplyRuleListReq.ProtoReflect.Descriptor instead.
func (*GetOffiaccountReplyRuleListReq) Descriptor() ([]byte, []int) {
	return file_proto_hydra_lcp_hydra_lcp_proto_rawDescGZIP(), []int{45}
}

func (x *GetOffiaccountReplyRuleListReq) GetPage() *Page {
	if x != nil {
		return x.Page
	}
	return nil
}

type GetOffiaccountReplyRuleListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OffiaccountReplyRules []*OffiaccountReplyRule `protobuf:"bytes,1,rep,name=OffiaccountReplyRules,proto3" json:"OffiaccountReplyRules,omitempty"`
	PageCtx               *PageCtx                `protobuf:"bytes,2,opt,name=page_ctx,json=pageCtx,proto3" json:"page_ctx,omitempty"`
}

func (x *GetOffiaccountReplyRuleListResp) Reset() {
	*x = GetOffiaccountReplyRuleListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_hydra_lcp_hydra_lcp_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOffiaccountReplyRuleListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOffiaccountReplyRuleListResp) ProtoMessage() {}

func (x *GetOffiaccountReplyRuleListResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_hydra_lcp_hydra_lcp_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOffiaccountReplyRuleListResp.ProtoReflect.Descriptor instead.
func (*GetOffiaccountReplyRuleListResp) Descriptor() ([]byte, []int) {
	return file_proto_hydra_lcp_hydra_lcp_proto_rawDescGZIP(), []int{46}
}

func (x *GetOffiaccountReplyRuleListResp) GetOffiaccountReplyRules() []*OffiaccountReplyRule {
	if x != nil {
		return x.OffiaccountReplyRules
	}
	return nil
}

func (x *GetOffiaccountReplyRuleListResp) GetPageCtx() *PageCtx {
	if x != nil {
		return x.PageCtx
	}
	return nil
}

type SwitchOffiaccountReplyRuleReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: `validate:"is_ysid"`
	RuleId string `protobuf:"bytes,1,opt,name=rule_id,json=ruleId,proto3" json:"rule_id,omitempty"`
}

func (x *SwitchOffiaccountReplyRuleReq) Reset() {
	*x = SwitchOffiaccountReplyRuleReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_hydra_lcp_hydra_lcp_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SwitchOffiaccountReplyRuleReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SwitchOffiaccountReplyRuleReq) ProtoMessage() {}

func (x *SwitchOffiaccountReplyRuleReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_hydra_lcp_hydra_lcp_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SwitchOffiaccountReplyRuleReq.ProtoReflect.Descriptor instead.
func (*SwitchOffiaccountReplyRuleReq) Descriptor() ([]byte, []int) {
	return file_proto_hydra_lcp_hydra_lcp_proto_rawDescGZIP(), []int{47}
}

func (x *SwitchOffiaccountReplyRuleReq) GetRuleId() string {
	if x != nil {
		return x.RuleId
	}
	return ""
}

type SaveOffiaccountSubGeneralReplyReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: `validate:"is_ysid"`
	UserId    string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	ReplyMode string `protobuf:"bytes,2,opt,name=reply_mode,json=replyMode,proto3" json:"reply_mode,omitempty"`
	ReplyList string `protobuf:"bytes,3,opt,name=reply_list,json=replyList,proto3" json:"reply_list,omitempty"`
}

func (x *SaveOffiaccountSubGeneralReplyReq) Reset() {
	*x = SaveOffiaccountSubGeneralReplyReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_hydra_lcp_hydra_lcp_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaveOffiaccountSubGeneralReplyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveOffiaccountSubGeneralReplyReq) ProtoMessage() {}

func (x *SaveOffiaccountSubGeneralReplyReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_hydra_lcp_hydra_lcp_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveOffiaccountSubGeneralReplyReq.ProtoReflect.Descriptor instead.
func (*SaveOffiaccountSubGeneralReplyReq) Descriptor() ([]byte, []int) {
	return file_proto_hydra_lcp_hydra_lcp_proto_rawDescGZIP(), []int{48}
}

func (x *SaveOffiaccountSubGeneralReplyReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *SaveOffiaccountSubGeneralReplyReq) GetReplyMode() string {
	if x != nil {
		return x.ReplyMode
	}
	return ""
}

func (x *SaveOffiaccountSubGeneralReplyReq) GetReplyList() string {
	if x != nil {
		return x.ReplyList
	}
	return ""
}

type GetOffiaccountSubGeneralReplyReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReplyMode string `protobuf:"bytes,1,opt,name=reply_mode,json=replyMode,proto3" json:"reply_mode,omitempty"`
}

func (x *GetOffiaccountSubGeneralReplyReq) Reset() {
	*x = GetOffiaccountSubGeneralReplyReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_hydra_lcp_hydra_lcp_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOffiaccountSubGeneralReplyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOffiaccountSubGeneralReplyReq) ProtoMessage() {}

func (x *GetOffiaccountSubGeneralReplyReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_hydra_lcp_hydra_lcp_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOffiaccountSubGeneralReplyReq.ProtoReflect.Descriptor instead.
func (*GetOffiaccountSubGeneralReplyReq) Descriptor() ([]byte, []int) {
	return file_proto_hydra_lcp_hydra_lcp_proto_rawDescGZIP(), []int{49}
}

func (x *GetOffiaccountSubGeneralReplyReq) GetReplyMode() string {
	if x != nil {
		return x.ReplyMode
	}
	return ""
}

type DeleteOffiaccountSubGeneralReplyReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReplyMode string `protobuf:"bytes,1,opt,name=reply_mode,json=replyMode,proto3" json:"reply_mode,omitempty"`
}

func (x *DeleteOffiaccountSubGeneralReplyReq) Reset() {
	*x = DeleteOffiaccountSubGeneralReplyReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_hydra_lcp_hydra_lcp_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteOffiaccountSubGeneralReplyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteOffiaccountSubGeneralReplyReq) ProtoMessage() {}

func (x *DeleteOffiaccountSubGeneralReplyReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_hydra_lcp_hydra_lcp_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteOffiaccountSubGeneralReplyReq.ProtoReflect.Descriptor instead.
func (*DeleteOffiaccountSubGeneralReplyReq) Descriptor() ([]byte, []int) {
	return file_proto_hydra_lcp_hydra_lcp_proto_rawDescGZIP(), []int{50}
}

func (x *DeleteOffiaccountSubGeneralReplyReq) GetReplyMode() string {
	if x != nil {
		return x.ReplyMode
	}
	return ""
}

type HandleIDMCallbackReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionState string `protobuf:"bytes,1,opt,name=session_state,json=sessionState,proto3" json:"session_state,omitempty"`
	Code         string `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
	State        string `protobuf:"bytes,3,opt,name=state,proto3" json:"state,omitempty"`
}

func (x *HandleIDMCallbackReq) Reset() {
	*x = HandleIDMCallbackReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_hydra_lcp_hydra_lcp_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HandleIDMCallbackReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HandleIDMCallbackReq) ProtoMessage() {}

func (x *HandleIDMCallbackReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_hydra_lcp_hydra_lcp_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HandleIDMCallbackReq.ProtoReflect.Descriptor instead.
func (*HandleIDMCallbackReq) Descriptor() ([]byte, []int) {
	return file_proto_hydra_lcp_hydra_lcp_proto_rawDescGZIP(), []int{51}
}

func (x *HandleIDMCallbackReq) GetSessionState() string {
	if x != nil {
		return x.SessionState
	}
	return ""
}

func (x *HandleIDMCallbackReq) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *HandleIDMCallbackReq) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

type HandleIDMCallbackResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *HandleIDMCallbackResp) Reset() {
	*x = HandleIDMCallbackResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_hydra_lcp_hydra_lcp_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HandleIDMCallbackResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HandleIDMCallbackResp) ProtoMessage() {}

func (x *HandleIDMCallbackResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_hydra_lcp_hydra_lcp_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HandleIDMCallbackResp.ProtoReflect.Descriptor instead.
func (*HandleIDMCallbackResp) Descriptor() ([]byte, []int) {
	return file_proto_hydra_lcp_hydra_lcp_proto_rawDescGZIP(), []int{52}
}

func (x *HandleIDMCallbackResp) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type SyncIDMUserReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IdmIds []string `protobuf:"bytes,1,rep,name=idm_ids,json=idmIds,proto3" json:"idm_ids,omitempty"`
}

func (x *SyncIDMUserReq) Reset() {
	*x = SyncIDMUserReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_hydra_lcp_hydra_lcp_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncIDMUserReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncIDMUserReq) ProtoMessage() {}

func (x *SyncIDMUserReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_hydra_lcp_hydra_lcp_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncIDMUserReq.ProtoReflect.Descriptor instead.
func (*SyncIDMUserReq) Descriptor() ([]byte, []int) {
	return file_proto_hydra_lcp_hydra_lcp_proto_rawDescGZIP(), []int{53}
}

func (x *SyncIDMUserReq) GetIdmIds() []string {
	if x != nil {
		return x.IdmIds
	}
	return nil
}

type SyncIDMUserResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IdmIds []string `protobuf:"bytes,1,rep,name=idm_ids,json=idmIds,proto3" json:"idm_ids,omitempty"`
}

func (x *SyncIDMUserResp) Reset() {
	*x = SyncIDMUserResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_hydra_lcp_hydra_lcp_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncIDMUserResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncIDMUserResp) ProtoMessage() {}

func (x *SyncIDMUserResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_hydra_lcp_hydra_lcp_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncIDMUserResp.ProtoReflect.Descriptor instead.
func (*SyncIDMUserResp) Descriptor() ([]byte, []int) {
	return file_proto_hydra_lcp_hydra_lcp_proto_rawDescGZIP(), []int{54}
}

func (x *SyncIDMUserResp) GetIdmIds() []string {
	if x != nil {
		return x.IdmIds
	}
	return nil
}

type GetJsConfigReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uri string `protobuf:"bytes,1,opt,name=uri,proto3" json:"uri,omitempty"`
}

func (x *GetJsConfigReq) Reset() {
	*x = GetJsConfigReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_hydra_lcp_hydra_lcp_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetJsConfigReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetJsConfigReq) ProtoMessage() {}

func (x *GetJsConfigReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_hydra_lcp_hydra_lcp_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetJsConfigReq.ProtoReflect.Descriptor instead.
func (*GetJsConfigReq) Descriptor() ([]byte, []int) {
	return file_proto_hydra_lcp_hydra_lcp_proto_rawDescGZIP(), []int{55}
}

func (x *GetJsConfigReq) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

type GetJsConfigResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppId     string `protobuf:"bytes,1,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	Timestamp int64  `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	NonceStr  string `protobuf:"bytes,3,opt,name=nonce_str,json=nonceStr,proto3" json:"nonce_str,omitempty"`
	Signature string `protobuf:"bytes,4,opt,name=signature,proto3" json:"signature,omitempty"`
}

func (x *GetJsConfigResp) Reset() {
	*x = GetJsConfigResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_hydra_lcp_hydra_lcp_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetJsConfigResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetJsConfigResp) ProtoMessage() {}

func (x *GetJsConfigResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_hydra_lcp_hydra_lcp_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetJsConfigResp.ProtoReflect.Descriptor instead.
func (*GetJsConfigResp) Descriptor() ([]byte, []int) {
	return file_proto_hydra_lcp_hydra_lcp_proto_rawDescGZIP(), []int{56}
}

func (x *GetJsConfigResp) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *GetJsConfigResp) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *GetJsConfigResp) GetNonceStr() string {
	if x != nil {
		return x.NonceStr
	}
	return ""
}

func (x *GetJsConfigResp) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

type GetJsTicketReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetJsTicketReq) Reset() {
	*x = GetJsTicketReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_hydra_lcp_hydra_lcp_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetJsTicketReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetJsTicketReq) ProtoMessage() {}

func (x *GetJsTicketReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_hydra_lcp_hydra_lcp_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetJsTicketReq.ProtoReflect.Descriptor instead.
func (*GetJsTicketReq) Descriptor() ([]byte, []int) {
	return file_proto_hydra_lcp_hydra_lcp_proto_rawDescGZIP(), []int{57}
}

type GetJsTicketResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ticket string `protobuf:"bytes,1,opt,name=ticket,proto3" json:"ticket,omitempty"`
}

func (x *GetJsTicketResp) Reset() {
	*x = GetJsTicketResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_hydra_lcp_hydra_lcp_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetJsTicketResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetJsTicketResp) ProtoMessage() {}

func (x *GetJsTicketResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_hydra_lcp_hydra_lcp_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetJsTicketResp.ProtoReflect.Descriptor instead.
func (*GetJsTicketResp) Descriptor() ([]byte, []int) {
	return file_proto_hydra_lcp_hydra_lcp_proto_rawDescGZIP(), []int{58}
}

func (x *GetJsTicketResp) GetTicket() string {
	if x != nil {
		return x.Ticket
	}
	return ""
}

type NewJwtSecretRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SecretId string `protobuf:"bytes,1,opt,name=secret_id,json=secretId,proto3" json:"secret_id,omitempty"`
}

func (x *NewJwtSecretRequest) Reset() {
	*x = NewJwtSecretRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_hydra_lcp_hydra_lcp_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewJwtSecretRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewJwtSecretRequest) ProtoMessage() {}

func (x *NewJwtSecretRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_hydra_lcp_hydra_lcp_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewJwtSecretRequest.ProtoReflect.Descriptor instead.
func (*NewJwtSecretRequest) Descriptor() ([]byte, []int) {
	return file_proto_hydra_lcp_hydra_lcp_proto_rawDescGZIP(), []int{59}
}

func (x *NewJwtSecretRequest) GetSecretId() string {
	if x != nil {
		return x.SecretId
	}
	return ""
}

type NewJwtSecretResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SecretId string `protobuf:"bytes,1,opt,name=secret_id,json=secretId,proto3" json:"secret_id,omitempty"`
	Secret   string `protobuf:"bytes,2,opt,name=secret,proto3" json:"secret,omitempty"`
	// expires_at indicate the expiration time of secret (in unix second)
	ExpiresAt int64 `protobuf:"varint,3,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"`
}

func (x *NewJwtSecretResponse) Reset() {
	*x = NewJwtSecretResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_hydra_lcp_hydra_lcp_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewJwtSecretResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewJwtSecretResponse) ProtoMessage() {}

func (x *NewJwtSecretResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_hydra_lcp_hydra_lcp_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewJwtSecretResponse.ProtoReflect.Descriptor instead.
func (*NewJwtSecretResponse) Descriptor() ([]byte, []int) {
	return file_proto_hydra_lcp_hydra_lcp_proto_rawDescGZIP(), []int{60}
}

func (x *NewJwtSecretResponse) GetSecretId() string {
	if x != nil {
		return x.SecretId
	}
	return ""
}

func (x *NewJwtSecretResponse) GetSecret() string {
	if x != nil {
		return x.Secret
	}
	return ""
}

func (x *NewJwtSecretResponse) GetExpiresAt() int64 {
	if x != nil {
		return x.ExpiresAt
	}
	return 0
}

type SuperVerificationCodeForOmsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Phone string `protobuf:"bytes,1,opt,name=phone,proto3" json:"phone,omitempty"`
}

func (x *SuperVerificationCodeForOmsReq) Reset() {
	*x = SuperVerificationCodeForOmsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_hydra_lcp_hydra_lcp_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SuperVerificationCodeForOmsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SuperVerificationCodeForOmsReq) ProtoMessage() {}

func (x *SuperVerificationCodeForOmsReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_hydra_lcp_hydra_lcp_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SuperVerificationCodeForOmsReq.ProtoReflect.Descriptor instead.
func (*SuperVerificationCodeForOmsReq) Descriptor() ([]byte, []int) {
	return file_proto_hydra_lcp_hydra_lcp_proto_rawDescGZIP(), []int{61}
}

func (x *SuperVerificationCodeForOmsReq) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

type SuperVerificationCodeForOmsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code string `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
}

func (x *SuperVerificationCodeForOmsResp) Reset() {
	*x = SuperVerificationCodeForOmsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_hydra_lcp_hydra_lcp_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SuperVerificationCodeForOmsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SuperVerificationCodeForOmsResp) ProtoMessage() {}

func (x *SuperVerificationCodeForOmsResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_hydra_lcp_hydra_lcp_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SuperVerificationCodeForOmsResp.ProtoReflect.Descriptor instead.
func (*SuperVerificationCodeForOmsResp) Descriptor() ([]byte, []int) {
	return file_proto_hydra_lcp_hydra_lcp_proto_rawDescGZIP(), []int{62}
}

func (x *SuperVerificationCodeForOmsResp) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

type AddUserReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Phone    string `protobuf:"bytes,1,opt,name=phone,proto3" json:"phone,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	// 用户注册来源（可扩展）：xx活动注册、xx用户推荐
	UserSource string `protobuf:"bytes,3,opt,name=user_source,json=userSource,proto3" json:"user_source,omitempty"`
	// 用户注册渠道（可扩展）：远算云、智算未来、航天云网
	UserChannel string `protobuf:"bytes,4,opt,name=user_channel,json=userChannel,proto3" json:"user_channel,omitempty"`
}

func (x *AddUserReq) Reset() {
	*x = AddUserReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_hydra_lcp_hydra_lcp_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddUserReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddUserReq) ProtoMessage() {}

func (x *AddUserReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_hydra_lcp_hydra_lcp_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddUserReq.ProtoReflect.Descriptor instead.
func (*AddUserReq) Descriptor() ([]byte, []int) {
	return file_proto_hydra_lcp_hydra_lcp_proto_rawDescGZIP(), []int{63}
}

func (x *AddUserReq) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *AddUserReq) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *AddUserReq) GetUserSource() string {
	if x != nil {
		return x.UserSource
	}
	return ""
}

func (x *AddUserReq) GetUserChannel() string {
	if x != nil {
		return x.UserChannel
	}
	return ""
}

type AddUserResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *AddUserResp) Reset() {
	*x = AddUserResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_hydra_lcp_hydra_lcp_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddUserResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddUserResp) ProtoMessage() {}

func (x *AddUserResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_hydra_lcp_hydra_lcp_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddUserResp.ProtoReflect.Descriptor instead.
func (*AddUserResp) Descriptor() ([]byte, []int) {
	return file_proto_hydra_lcp_hydra_lcp_proto_rawDescGZIP(), []int{64}
}

func (x *AddUserResp) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type Page struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: `validate:"gte=1"`
	Index int64 `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
	// @inject_tag: `validate:"gt=0,max=1000"`
	Size int64 `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
}

func (x *Page) Reset() {
	*x = Page{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_hydra_lcp_hydra_lcp_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Page) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Page) ProtoMessage() {}

func (x *Page) ProtoReflect() protoreflect.Message {
	mi := &file_proto_hydra_lcp_hydra_lcp_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Page.ProtoReflect.Descriptor instead.
func (*Page) Descriptor() ([]byte, []int) {
	return file_proto_hydra_lcp_hydra_lcp_proto_rawDescGZIP(), []int{65}
}

func (x *Page) GetIndex() int64 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *Page) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

type PageCtx struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Index int64 `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
	Size  int64 `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	// total record number, not page number
	Total int64 `protobuf:"varint,3,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *PageCtx) Reset() {
	*x = PageCtx{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_hydra_lcp_hydra_lcp_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PageCtx) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PageCtx) ProtoMessage() {}

func (x *PageCtx) ProtoReflect() protoreflect.Message {
	mi := &file_proto_hydra_lcp_hydra_lcp_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PageCtx.ProtoReflect.Descriptor instead.
func (*PageCtx) Descriptor() ([]byte, []int) {
	return file_proto_hydra_lcp_hydra_lcp_proto_rawDescGZIP(), []int{66}
}

func (x *PageCtx) GetIndex() int64 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *PageCtx) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *PageCtx) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

var File_proto_hydra_lcp_hydra_lcp_proto protoreflect.FileDescriptor

var file_proto_hydra_lcp_hydra_lcp_proto_rawDesc = []byte{
	0x0a, 0x1f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x68, 0x79, 0x64, 0x72, 0x61, 0x5f, 0x6c, 0x63,
	0x70, 0x2f, 0x68, 0x79, 0x64, 0x72, 0x61, 0x5f, 0x6c, 0x63, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x09, 0x68, 0x79, 0x64, 0x72, 0x61, 0x5f, 0x6c, 0x63, 0x70, 0x1a, 0x1f, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65,
	0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x5f, 0x0a, 0x16, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x42, 0x79, 0x4f, 0x6c,
	0x64, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x6f, 0x6c, 0x64, 0x5f, 0x70, 0x77, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x6c, 0x64, 0x50, 0x77, 0x64, 0x12, 0x17, 0x0a,
	0x07, 0x6e, 0x65, 0x77, 0x5f, 0x70, 0x77, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x6e, 0x65, 0x77, 0x50, 0x77, 0x64, 0x12, 0x13, 0x0a, 0x05, 0x79, 0x73, 0x5f, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x79, 0x73, 0x49, 0x64, 0x22, 0x12, 0x0a, 0x10, 0x52,
	0x65, 0x73, 0x65, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x22,
	0x24, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x71, 0x12, 0x12, 0x0a, 0x04, 0x79, 0x73, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x79, 0x73, 0x69, 0x64, 0x22, 0x29, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x6e, 0x66, 0x6f, 0x42, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04,
	0x79, 0x73, 0x69, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x79, 0x73, 0x69, 0x64,
	0x22, 0x37, 0x0a, 0x0b, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x12,
	0x12, 0x0a, 0x04, 0x79, 0x73, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x79,
	0x73, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x22, 0xc4, 0x03, 0x0a, 0x08, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x79, 0x73, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x79, 0x73, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x77, 0x65,
	0x63, 0x68, 0x61, 0x74, 0x5f, 0x75, 0x6e, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x77, 0x65, 0x63, 0x68, 0x61, 0x74, 0x55, 0x6e, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x12, 0x24, 0x0a, 0x0e, 0x77, 0x65, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x6f, 0x70, 0x65,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x77, 0x65, 0x63, 0x68,
	0x61, 0x74, 0x4f, 0x70, 0x65, 0x6e, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x77, 0x65, 0x63, 0x68,
	0x61, 0x74, 0x5f, 0x6e, 0x69, 0x63, 0x6b, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x77, 0x65, 0x63, 0x68, 0x61, 0x74, 0x4e, 0x69, 0x63, 0x6b, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x65, 0x61, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x61, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x11,
	0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79,
	0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x68, 0x65, 0x61, 0x64,
	0x69, 0x6d, 0x67, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x68,
	0x65, 0x61, 0x64, 0x69, 0x6d, 0x67, 0x55, 0x72, 0x6c, 0x12, 0x21, 0x0a, 0x0c, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x75, 0x73, 0x65, 0x72, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x1f, 0x0a, 0x0b,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x21, 0x0a,
	0x0c, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x72, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x72,
	0x22, 0x41, 0x0a, 0x0d, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x61, 0x74, 0x63,
	0x68, 0x12, 0x30, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x68, 0x79, 0x64, 0x72, 0x61, 0x5f, 0x6c, 0x63, 0x70,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x22, 0x9b, 0x01, 0x0a, 0x0d, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x79, 0x73, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x79, 0x73, 0x69, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x77, 0x65, 0x63,
	0x68, 0x61, 0x74, 0x5f, 0x75, 0x6e, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x77, 0x65, 0x63, 0x68, 0x61, 0x74, 0x55, 0x6e, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x12, 0x24, 0x0a, 0x0e, 0x77, 0x65, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x6f, 0x70, 0x65, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x77, 0x65, 0x63, 0x68, 0x61,
	0x74, 0x4f, 0x70, 0x65, 0x6e, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x77, 0x65, 0x63, 0x68, 0x61,
	0x74, 0x5f, 0x6e, 0x69, 0x63, 0x6b, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x77, 0x65, 0x63, 0x68, 0x61, 0x74, 0x4e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d,
	0x65, 0x22, 0x64, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x79, 0x73, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x79, 0x73, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x5f, 0x6e, 0x65, 0x77, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x4e, 0x65, 0x77, 0x12, 0x18, 0x0a,
	0x07, 0x63, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x63, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61, 0x22, 0x3e, 0x0a, 0x19, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x49, 0x6e, 0x66, 0x6f, 0x42, 0x79, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x5f, 0x6e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x68, 0x6f, 0x6e,
	0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x6e, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12,
	0x12, 0x0a, 0x04, 0x79, 0x73, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x79,
	0x73, 0x69, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x5f, 0x6e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x5f, 0x6e, 0x65, 0x77, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70,
	0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4e, 0x65, 0x77, 0x12, 0x18, 0x0a,
	0x07, 0x63, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x63, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61, 0x22, 0x2c, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x45, 0x78,
	0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x71, 0x12, 0x12, 0x0a, 0x04, 0x79, 0x73, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x79, 0x73, 0x69, 0x64, 0x22, 0x4b, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x45, 0x78, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x12, 0x0a, 0x04, 0x79, 0x73, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x79, 0x73, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61,
	0x6d, 0x65, 0x22, 0x38, 0x0a, 0x19, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x45, 0x78, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x45, 0x78, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12,
	0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x38, 0x0a, 0x1b,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x55, 0x73, 0x65,
	0x72, 0x45, 0x78, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x19, 0x0a, 0x08, 0x69,
	0x73, 0x5f, 0x65, 0x78, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69,
	0x73, 0x45, 0x78, 0x69, 0x73, 0x74, 0x22, 0x69, 0x0a, 0x13, 0x41, 0x64, 0x64, 0x55, 0x73, 0x65,
	0x72, 0x46, 0x72, 0x6f, 0x6d, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a,
	0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68,
	0x6f, 0x6e, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49,
	0x64, 0x22, 0x3e, 0x0a, 0x12, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x50, 0x68, 0x6f, 0x6e, 0x65,
	0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x22, 0x3f, 0x0a, 0x11, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x4a, 0x77, 0x74, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x22, 0x4a, 0x0a, 0x13, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x50, 0x68, 0x6f, 0x6e,
	0x65, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69,
	0x73, 0x53, 0x75, 0x63, 0x63, 0x65, 0x65, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x72,
	0x0a, 0x0a, 0x53, 0x65, 0x6e, 0x64, 0x53, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05,
	0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f,
	0x6e, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x70, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x70, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x70, 0x61,
	0x72, 0x61, 0x6d, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x49, 0x64, 0x22, 0x2c, 0x0a, 0x0b, 0x53, 0x65, 0x6e, 0x64, 0x53, 0x6d, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x73, 0x75, 0x63, 0x63, 0x65, 0x65, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x53, 0x75, 0x63, 0x63, 0x65, 0x65, 0x64,
	0x22, 0xc0, 0x01, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x4f, 0x66, 0x66, 0x69, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x42, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a,
	0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x77, 0x65, 0x63, 0x68, 0x61, 0x74,
	0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x77,
	0x65, 0x63, 0x68, 0x61, 0x74, 0x4f, 0x70, 0x65, 0x6e, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x2b, 0x0a, 0x11, 0x6e, 0x6f, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x10, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f,
	0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x79, 0x49, 0x64, 0x22, 0x9e, 0x07, 0x0a, 0x12, 0x4f, 0x66, 0x66, 0x69, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x42, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x1b, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x62, 0x79, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1b, 0x0a, 0x09,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x62, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6d,
	0x70, 0x61, 0x6e, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63,
	0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x6d, 0x70,
	0x61, 0x6e, 0x79, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63,
	0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x64, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x77, 0x65, 0x63,
	0x68, 0x61, 0x74, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x77, 0x65, 0x63, 0x68, 0x61, 0x74, 0x4f, 0x70, 0x65, 0x6e, 0x69, 0x64, 0x12, 0x25,
	0x0a, 0x0e, 0x77, 0x65, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x75, 0x6e, 0x69, 0x6f, 0x6e, 0x69, 0x64,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x77, 0x65, 0x63, 0x68, 0x61, 0x74, 0x55, 0x6e,
	0x69, 0x6f, 0x6e, 0x69, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x77, 0x65, 0x63, 0x68, 0x61, 0x74, 0x5f,
	0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x77, 0x65, 0x63, 0x68, 0x61, 0x74, 0x4e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2b,
	0x0a, 0x11, 0x77, 0x65, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x68, 0x65, 0x61, 0x64, 0x69, 0x6d, 0x67,
	0x75, 0x72, 0x6c, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x77, 0x65, 0x63, 0x68, 0x61,
	0x74, 0x48, 0x65, 0x61, 0x64, 0x69, 0x6d, 0x67, 0x75, 0x72, 0x6c, 0x12, 0x27, 0x0a, 0x0f, 0x77,
	0x65, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x77, 0x65, 0x63, 0x68, 0x61, 0x74, 0x4c, 0x61, 0x6e, 0x67,
	0x75, 0x61, 0x67, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x67, 0x65, 0x6e,
	0x64, 0x65, 0x72, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x47,
	0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x63, 0x69,
	0x74, 0x79, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x43, 0x69,
	0x74, 0x79, 0x12, 0x2b, 0x0a, 0x11, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x6e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x35, 0x0a, 0x16, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x64, 0x18, 0x10, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x15, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x63, 0x74,
	0x69, 0x76, 0x61, 0x74, 0x65, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x69, 0x73, 0x5f, 0x73, 0x75, 0x62,
	0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x64, 0x18, 0x11, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x69,
	0x73, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x73,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x5f, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x18, 0x12,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x53,
	0x63, 0x65, 0x6e, 0x65, 0x12, 0x41, 0x0a, 0x0e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62,
	0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0d, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x45, 0x0a, 0x10, 0x75, 0x6e, 0x73, 0x75, 0x62,
	0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0f, 0x75,
	0x6e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x3f,
	0x0a, 0x0d, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x15, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x0c, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x43, 0x0a, 0x0f, 0x64, 0x65, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x16, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x0e, 0x64, 0x65, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x22, 0x9a, 0x01, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x4f, 0x66, 0x66, 0x69,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x75,
	0x62, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x64,
	0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x23, 0x0a, 0x04,
	0x70, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x68, 0x79, 0x64,
	0x72, 0x61, 0x5f, 0x6c, 0x63, 0x70, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x52, 0x04, 0x70, 0x61, 0x67,
	0x65, 0x22, 0xa2, 0x01, 0x0a, 0x20, 0x47, 0x65, 0x74, 0x4f, 0x66, 0x66, 0x69, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x75, 0x62, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4f, 0x0a, 0x13, 0x4f, 0x66, 0x66, 0x69, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x68, 0x79, 0x64, 0x72, 0x61, 0x5f, 0x6c, 0x63, 0x70, 0x2e,
	0x4f, 0x66, 0x66, 0x69, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x69, 0x6e, 0x64, 0x69,
	0x6e, 0x67, 0x52, 0x13, 0x4f, 0x66, 0x66, 0x69, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42,
	0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x2d, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x5f,
	0x63, 0x74, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x68, 0x79, 0x64, 0x72,
	0x61, 0x5f, 0x6c, 0x63, 0x70, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x43, 0x74, 0x78, 0x52, 0x07, 0x70,
	0x61, 0x67, 0x65, 0x43, 0x74, 0x78, 0x22, 0xb3, 0x01, 0x0a, 0x13, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x66, 0x69, 0x72, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x66,
	0x69, 0x72, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x31,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x31,
	0x12, 0x1a, 0x0a, 0x08, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x32, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x32, 0x12, 0x1a, 0x0a, 0x08,
	0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x33, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x33, 0x12, 0x1a, 0x0a, 0x08, 0x6b, 0x65, 0x79, 0x77,
	0x6f, 0x72, 0x64, 0x34, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6b, 0x65, 0x79, 0x77,
	0x6f, 0x72, 0x64, 0x34, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x22, 0xb9, 0x01, 0x0a,
	0x1e, 0x53, 0x65, 0x6e, 0x64, 0x4f, 0x66, 0x66, 0x69, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12,
	0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x2b, 0x0a, 0x11, 0x6e, 0x6f, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x10, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x51, 0x0a, 0x14, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x68, 0x79, 0x64, 0x72, 0x61, 0x5f, 0x6c, 0x63, 0x70, 0x2e,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x52, 0x13, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x4a, 0x0a, 0x1f, 0x53, 0x65, 0x6e, 0x64,
	0x4f, 0x66, 0x66, 0x69, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x27, 0x0a, 0x0f, 0x6e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x22, 0xe3, 0x01, 0x0a, 0x26, 0x53, 0x65, 0x6e, 0x64, 0x4f, 0x66, 0x66,
	0x69, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x12,
	0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x64, 0x12, 0x1a,
	0x0a, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x2b, 0x0a, 0x11, 0x6e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x51, 0x0a, 0x14, 0x6e, 0x6f, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x68, 0x79, 0x64, 0x72, 0x61, 0x5f, 0x6c, 0x63,
	0x70, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x13, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0xdb, 0x01, 0x0a, 0x24, 0x53,
	0x65, 0x6e, 0x64, 0x4f, 0x66, 0x66, 0x69, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x56, 0x69,
	0x73, 0x4a, 0x6f, 0x62, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08,
	0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x2b, 0x0a, 0x11, 0x6e, 0x6f, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x10, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x51, 0x0a, 0x14, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x68, 0x79, 0x64, 0x72, 0x61, 0x5f, 0x6c, 0x63, 0x70, 0x2e,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x52, 0x13, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0xcc, 0x01, 0x0a, 0x24, 0x44, 0x65, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4f, 0x66, 0x66, 0x69, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x17, 0x0a,
	0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x77, 0x65, 0x63, 0x68, 0x61, 0x74,
	0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x77,
	0x65, 0x63, 0x68, 0x61, 0x74, 0x4f, 0x70, 0x65, 0x6e, 0x69, 0x64, 0x12, 0x2b, 0x0a, 0x11, 0x6e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x70,
	0x61, 0x6e, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f,
	0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x64, 0x22, 0x46, 0x0a, 0x25, 0x44, 0x65, 0x61, 0x63, 0x74,
	0x69, 0x76, 0x61, 0x74, 0x65, 0x4f, 0x66, 0x66, 0x69, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x75, 0x6d, 0x22,
	0xdf, 0x01, 0x0a, 0x0b, 0x4a, 0x6f, 0x62, 0x54, 0x6f, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x6a, 0x6f, 0x62, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6a, 0x6f, 0x62, 0x49, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x3b, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x3b, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x22, 0x72, 0x0a, 0x11, 0x41, 0x64, 0x64, 0x4a, 0x6f, 0x62, 0x54, 0x6f, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x79, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x15, 0x0a, 0x06, 0x6a, 0x6f, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x6a, 0x6f, 0x62, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x79, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70,
	0x61, 0x6e, 0x79, 0x49, 0x64, 0x22, 0x43, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x4a, 0x6f, 0x62, 0x54,
	0x6f, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x6a, 0x6f, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x6a, 0x6f, 0x62, 0x49, 0x64, 0x22, 0x61, 0x0a, 0x17, 0x53, 0x65,
	0x74, 0x4a, 0x6f, 0x62, 0x54, 0x6f, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x15,
	0x0a, 0x06, 0x6a, 0x6f, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x6a, 0x6f, 0x62, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x39, 0x0a,
	0x18, 0x53, 0x65, 0x74, 0x4a, 0x6f, 0x62, 0x54, 0x6f, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x75, 0x6d, 0x22, 0x2c, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x4f,
	0x66, 0x66, 0x69, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x4b, 0x52, 0x65, 0x71, 0x12,
	0x15, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x22, 0x39, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x4f, 0x66, 0x66,
	0x69, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x4b, 0x52, 0x65, 0x73, 0x70, 0x12, 0x21,
	0x0a, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x22, 0x90, 0x01, 0x0a, 0x16, 0x53, 0x61, 0x76, 0x65, 0x4f, 0x66, 0x66, 0x69, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x15, 0x0a, 0x06,
	0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x70,
	0x70, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x75,
	0x62, 0x6c, 0x69, 0x73, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x70, 0x75, 0x62,
	0x6c, 0x69, 0x73, 0x68, 0x22, 0xe9, 0x01, 0x0a, 0x0f, 0x4f, 0x66, 0x66, 0x69, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x4d, 0x65, 0x6e, 0x75, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x3b, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x3b, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x22, 0x2e, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x4f, 0x66, 0x66, 0x69, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x65, 0x71, 0x12, 0x15, 0x0a, 0x06, 0x61, 0x70, 0x70,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64,
	0x22, 0xd3, 0x02, 0x0a, 0x14, 0x4f, 0x66, 0x66, 0x69, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x75, 0x6c, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x75, 0x6c,
	0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x75,
	0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72,
	0x64, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72,
	0x64, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x5f, 0x6c, 0x69, 0x73, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x4d, 0x6f, 0x64, 0x65,
	0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x73, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x1d, 0x0a,
	0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x3b, 0x0a, 0x0b,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x3b, 0x0a, 0x0b, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0xac, 0x01, 0x0a, 0x1a, 0x41, 0x64, 0x64, 0x4f, 0x66,
	0x66, 0x69, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x75,
	0x6c, 0x65, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1b,
	0x0a, 0x09, 0x72, 0x75, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x72, 0x75, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6b,
	0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6b,
	0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x70, 0x6c, 0x79,
	0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x70,
	0x6c, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x5f,
	0x6d, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x70, 0x6c,
	0x79, 0x4d, 0x6f, 0x64, 0x65, 0x22, 0x35, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x4f, 0x66, 0x66, 0x69,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x75, 0x6c, 0x65,
	0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x75, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x75, 0x6c, 0x65, 0x49, 0x64, 0x22, 0x45, 0x0a, 0x1e,
	0x47, 0x65, 0x74, 0x4f, 0x66, 0x66, 0x69, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x52, 0x75, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x23,
	0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x68,
	0x79, 0x64, 0x72, 0x61, 0x5f, 0x6c, 0x63, 0x70, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x52, 0x04, 0x70,
	0x61, 0x67, 0x65, 0x22, 0xa7, 0x01, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x4f, 0x66, 0x66, 0x69, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x75, 0x6c, 0x65, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x55, 0x0a, 0x15, 0x4f, 0x66, 0x66, 0x69, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x75, 0x6c, 0x65, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x68, 0x79, 0x64, 0x72, 0x61, 0x5f, 0x6c,
	0x63, 0x70, 0x2e, 0x4f, 0x66, 0x66, 0x69, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x15, 0x4f, 0x66, 0x66, 0x69, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x12, 0x2d,
	0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x63, 0x74, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x68, 0x79, 0x64, 0x72, 0x61, 0x5f, 0x6c, 0x63, 0x70, 0x2e, 0x50, 0x61, 0x67,
	0x65, 0x43, 0x74, 0x78, 0x52, 0x07, 0x70, 0x61, 0x67, 0x65, 0x43, 0x74, 0x78, 0x22, 0x38, 0x0a,
	0x1d, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x4f, 0x66, 0x66, 0x69, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x12, 0x17,
	0x0a, 0x07, 0x72, 0x75, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x72, 0x75, 0x6c, 0x65, 0x49, 0x64, 0x22, 0x7a, 0x0a, 0x21, 0x53, 0x61, 0x76, 0x65, 0x4f,
	0x66, 0x66, 0x69, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x75, 0x62, 0x47, 0x65, 0x6e,
	0x65, 0x72, 0x61, 0x6c, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x5f, 0x6d,
	0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x70, 0x6c, 0x79,
	0x4d, 0x6f, 0x64, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x5f, 0x6c, 0x69,
	0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x4c,
	0x69, 0x73, 0x74, 0x22, 0x41, 0x0a, 0x20, 0x47, 0x65, 0x74, 0x4f, 0x66, 0x66, 0x69, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x75, 0x62, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x71, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x70, 0x6c, 0x79,
	0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x70,
	0x6c, 0x79, 0x4d, 0x6f, 0x64, 0x65, 0x22, 0x44, 0x0a, 0x23, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x4f, 0x66, 0x66, 0x69, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x75, 0x62, 0x47, 0x65,
	0x6e, 0x65, 0x72, 0x61, 0x6c, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x71, 0x12, 0x1d, 0x0a,
	0x0a, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x4d, 0x6f, 0x64, 0x65, 0x22, 0x65, 0x0a, 0x14,
	0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x49, 0x44, 0x4d, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63,
	0x6b, 0x52, 0x65, 0x71, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x22, 0x29, 0x0a, 0x15, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x49, 0x44, 0x4d,
	0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03,
	0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x22, 0x29,
	0x0a, 0x0e, 0x53, 0x79, 0x6e, 0x63, 0x49, 0x44, 0x4d, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x12, 0x17, 0x0a, 0x07, 0x69, 0x64, 0x6d, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x06, 0x69, 0x64, 0x6d, 0x49, 0x64, 0x73, 0x22, 0x2a, 0x0a, 0x0f, 0x53, 0x79, 0x6e,
	0x63, 0x49, 0x44, 0x4d, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x17, 0x0a, 0x07,
	0x69, 0x64, 0x6d, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x69,
	0x64, 0x6d, 0x49, 0x64, 0x73, 0x22, 0x22, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x4a, 0x73, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x69, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x69, 0x22, 0x81, 0x01, 0x0a, 0x0f, 0x47, 0x65,
	0x74, 0x4a, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x12, 0x15, 0x0a,
	0x06, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61,
	0x70, 0x70, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x12, 0x1b, 0x0a, 0x09, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x5f, 0x73, 0x74, 0x72, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x53, 0x74, 0x72, 0x12,
	0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x22, 0x10, 0x0a,
	0x0e, 0x47, 0x65, 0x74, 0x4a, 0x73, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x71, 0x22,
	0x29, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x4a, 0x73, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x22, 0x32, 0x0a, 0x13, 0x4e, 0x65,
	0x77, 0x4a, 0x77, 0x74, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x49, 0x64, 0x22, 0x6a,
	0x0a, 0x14, 0x4e, 0x65, 0x77, 0x4a, 0x77, 0x74, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65, 0x63, 0x72, 0x65,
	0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x65,
	0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x41, 0x74, 0x22, 0x36, 0x0a, 0x1e, 0x53, 0x75,
	0x70, 0x65, 0x72, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43,
	0x6f, 0x64, 0x65, 0x46, 0x6f, 0x72, 0x4f, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05,
	0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f,
	0x6e, 0x65, 0x22, 0x35, 0x0a, 0x1f, 0x53, 0x75, 0x70, 0x65, 0x72, 0x56, 0x65, 0x72, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x46, 0x6f, 0x72, 0x4f, 0x6d,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x82, 0x01, 0x0a, 0x0a, 0x41, 0x64,
	0x64, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x75, 0x73, 0x65, 0x72, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x22, 0x26,
	0x0a, 0x0b, 0x41, 0x64, 0x64, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x17, 0x0a,
	0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x30, 0x0a, 0x04, 0x50, 0x61, 0x67, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x69,
	0x6e, 0x64, 0x65, 0x78, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x22, 0x49, 0x0a, 0x07, 0x50, 0x61, 0x67, 0x65,
	0x43, 0x74, 0x78, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x32, 0xb3, 0x1e, 0x0a, 0x0f, 0x48, 0x79, 0x64, 0x72, 0x61, 0x4c, 0x63, 0x70,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x3d, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x19, 0x2e, 0x68, 0x79, 0x64, 0x72, 0x61, 0x5f, 0x6c,
	0x63, 0x70, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x71, 0x1a, 0x13, 0x2e, 0x68, 0x79, 0x64, 0x72, 0x61, 0x5f, 0x6c, 0x63, 0x70, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x4c, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x61, 0x74, 0x63, 0x68, 0x12, 0x1e, 0x2e, 0x68, 0x79, 0x64,
	0x72, 0x61, 0x5f, 0x6c, 0x63, 0x70, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e,
	0x66, 0x6f, 0x42, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x1a, 0x18, 0x2e, 0x68, 0x79, 0x64,
	0x72, 0x61, 0x5f, 0x6c, 0x63, 0x70, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x42,
	0x61, 0x74, 0x63, 0x68, 0x12, 0x39, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x16, 0x2e, 0x68, 0x79, 0x64, 0x72, 0x61, 0x5f, 0x6c, 0x63, 0x70, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x13, 0x2e, 0x68, 0x79, 0x64,
	0x72, 0x61, 0x5f, 0x6c, 0x63, 0x70, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x53, 0x0a, 0x16, 0x51, 0x75, 0x65, 0x72, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x79, 0x50, 0x68,
	0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x24, 0x2e, 0x68, 0x79, 0x64, 0x72,
	0x61, 0x5f, 0x6c, 0x63, 0x70, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x42,
	0x79, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a,
	0x13, 0x2e, 0x68, 0x79, 0x64, 0x72, 0x61, 0x5f, 0x6c, 0x63, 0x70, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x49, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x68,
	0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1f, 0x2e, 0x68, 0x79, 0x64, 0x72,
	0x61, 0x5f, 0x6c, 0x63, 0x70, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x68, 0x6f, 0x6e,
	0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x13, 0x2e, 0x68, 0x79, 0x64,
	0x72, 0x61, 0x5f, 0x6c, 0x63, 0x70, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x3a, 0x0a, 0x0b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x16,
	0x2e, 0x68, 0x79, 0x64, 0x72, 0x61, 0x5f, 0x6c, 0x63, 0x70, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x13, 0x2e, 0x68, 0x79, 0x64, 0x72, 0x61, 0x5f, 0x6c,
	0x63, 0x70, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x41, 0x0a, 0x10, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x18, 0x2e, 0x68, 0x79, 0x64, 0x72, 0x61, 0x5f, 0x6c, 0x63, 0x70, 0x2e, 0x57, 0x65, 0x63, 0x68,
	0x61, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x13, 0x2e, 0x68, 0x79, 0x64, 0x72,
	0x61, 0x5f, 0x6c, 0x63, 0x70, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x3c,
	0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x65, 0x61, 0x64, 0x69, 0x6d, 0x67, 0x12,
	0x16, 0x2e, 0x68, 0x79, 0x64, 0x72, 0x61, 0x5f, 0x6c, 0x63, 0x70, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x13, 0x2e, 0x68, 0x79, 0x64, 0x72, 0x61, 0x5f,
	0x6c, 0x63, 0x70, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x3d, 0x0a, 0x0e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x61, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16,
	0x2e, 0x68, 0x79, 0x64, 0x72, 0x61, 0x5f, 0x6c, 0x63, 0x70, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x13, 0x2e, 0x68, 0x79, 0x64, 0x72, 0x61, 0x5f, 0x6c,
	0x63, 0x70, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x3f, 0x0a, 0x0d, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x16, 0x2e, 0x68,
	0x79, 0x64, 0x72, 0x61, 0x5f, 0x6c, 0x63, 0x70, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x46, 0x0a, 0x0e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x1c,
	0x2e, 0x68, 0x79, 0x64, 0x72, 0x61, 0x5f, 0x6c, 0x63, 0x70, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x12, 0x50, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x42, 0x79, 0x4f, 0x6c, 0x64, 0x12, 0x21, 0x2e, 0x68, 0x79,
	0x64, 0x72, 0x61, 0x5f, 0x6c, 0x63, 0x70, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x42, 0x79, 0x4f, 0x6c, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x44, 0x0a, 0x0d, 0x52, 0x65, 0x73, 0x65, 0x74, 0x50,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x1b, 0x2e, 0x68, 0x79, 0x64, 0x72, 0x61, 0x5f,
	0x6c, 0x63, 0x70, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x5d, 0x0a, 0x13,
	0x47, 0x65, 0x74, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x21, 0x2e, 0x68, 0x79, 0x64, 0x72, 0x61, 0x5f, 0x6c, 0x63, 0x70, 0x2e,
	0x47, 0x65, 0x74, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x23, 0x2e, 0x68, 0x79, 0x64, 0x72, 0x61, 0x5f, 0x6c,
	0x63, 0x70, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x66, 0x0a, 0x16, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x55, 0x73, 0x65, 0x72,
	0x45, 0x78, 0x69, 0x73, 0x74, 0x12, 0x24, 0x2e, 0x68, 0x79, 0x64, 0x72, 0x61, 0x5f, 0x6c, 0x63,
	0x70, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x55,
	0x73, 0x65, 0x72, 0x45, 0x78, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x26, 0x2e, 0x68, 0x79,
	0x64, 0x72, 0x61, 0x5f, 0x6c, 0x63, 0x70, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x45, 0x78, 0x74,
	0x65, 0x72, 0x6e, 0x61, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x45, 0x78, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x47, 0x0a, 0x10, 0x41, 0x64, 0x64, 0x55, 0x73, 0x65, 0x72, 0x46, 0x72,
	0x6f, 0x6d, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x1e, 0x2e, 0x68, 0x79, 0x64, 0x72, 0x61, 0x5f,
	0x6c, 0x63, 0x70, 0x2e, 0x41, 0x64, 0x64, 0x55, 0x73, 0x65, 0x72, 0x46, 0x72, 0x6f, 0x6d, 0x50,
	0x68, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x13, 0x2e, 0x68, 0x79, 0x64, 0x72, 0x61, 0x5f,
	0x6c, 0x63, 0x70, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x50, 0x0a, 0x0f,
	0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x1d, 0x2e, 0x68, 0x79, 0x64, 0x72, 0x61, 0x5f, 0x6c, 0x63, 0x70, 0x2e, 0x56, 0x65, 0x72, 0x69,
	0x66, 0x79, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x1e,
	0x2e, 0x68, 0x79, 0x64, 0x72, 0x61, 0x5f, 0x6c, 0x63, 0x70, 0x2e, 0x56, 0x65, 0x72, 0x69, 0x66,
	0x79, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4e,
	0x0a, 0x0e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x4a, 0x77, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x12, 0x1c, 0x2e, 0x68, 0x79, 0x64, 0x72, 0x61, 0x5f, 0x6c, 0x63, 0x70, 0x2e, 0x56, 0x65, 0x72,
	0x69, 0x66, 0x79, 0x4a, 0x77, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x1e,
	0x2e, 0x68, 0x79, 0x64, 0x72, 0x61, 0x5f, 0x6c, 0x63, 0x70, 0x2e, 0x56, 0x65, 0x72, 0x69, 0x66,
	0x79, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x38,
	0x0a, 0x07, 0x53, 0x65, 0x6e, 0x64, 0x53, 0x6d, 0x73, 0x12, 0x15, 0x2e, 0x68, 0x79, 0x64, 0x72,
	0x61, 0x5f, 0x6c, 0x63, 0x70, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x53, 0x6d, 0x73, 0x52, 0x65, 0x71,
	0x1a, 0x16, 0x2e, 0x68, 0x79, 0x64, 0x72, 0x61, 0x5f, 0x6c, 0x63, 0x70, 0x2e, 0x53, 0x65, 0x6e,
	0x64, 0x53, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x5b, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x4f,
	0x66, 0x66, 0x69, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x69, 0x6e, 0x64, 0x69, 0x6e,
	0x67, 0x12, 0x23, 0x2e, 0x68, 0x79, 0x64, 0x72, 0x61, 0x5f, 0x6c, 0x63, 0x70, 0x2e, 0x47, 0x65,
	0x74, 0x4f, 0x66, 0x66, 0x69, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x69, 0x6e, 0x64,
	0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x1a, 0x1d, 0x2e, 0x68, 0x79, 0x64, 0x72, 0x61, 0x5f, 0x6c,
	0x63, 0x70, 0x2e, 0x4f, 0x66, 0x66, 0x69, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x69,
	0x6e, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x77, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x4f, 0x66, 0x66, 0x69,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x75,
	0x62, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2a, 0x2e, 0x68, 0x79, 0x64, 0x72, 0x61, 0x5f, 0x6c, 0x63,
	0x70, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x66, 0x66, 0x69, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x75, 0x62, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x1a, 0x2b, 0x2e, 0x68, 0x79, 0x64, 0x72, 0x61, 0x5f, 0x6c, 0x63, 0x70, 0x2e, 0x47, 0x65,
	0x74, 0x4f, 0x66, 0x66, 0x69, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x61, 0x6c, 0x61,
	0x6e, 0x63, 0x65, 0x53, 0x75, 0x62, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x74,
	0x0a, 0x1b, 0x53, 0x65, 0x6e, 0x64, 0x4f, 0x66, 0x66, 0x69, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x29, 0x2e,
	0x68, 0x79, 0x64, 0x72, 0x61, 0x5f, 0x6c, 0x63, 0x70, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x4f, 0x66,
	0x66, 0x69, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x2a, 0x2e, 0x68, 0x79, 0x64, 0x72, 0x61,
	0x5f, 0x6c, 0x63, 0x70, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x4f, 0x66, 0x66, 0x69, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x70, 0x0a, 0x23, 0x53, 0x65, 0x6e, 0x64, 0x4f, 0x66, 0x66, 0x69,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x31, 0x2e, 0x68, 0x79,
	0x64, 0x72, 0x61, 0x5f, 0x6c, 0x63, 0x70, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x4f, 0x66, 0x66, 0x69,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x6c, 0x0a, 0x21, 0x53, 0x65, 0x6e, 0x64, 0x4f, 0x66,
	0x66, 0x69, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x56, 0x69, 0x73, 0x4a, 0x6f, 0x62, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2f, 0x2e, 0x68, 0x79,
	0x64, 0x72, 0x61, 0x5f, 0x6c, 0x63, 0x70, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x4f, 0x66, 0x66, 0x69,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x56, 0x69, 0x73, 0x4a, 0x6f, 0x62, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x12, 0x86, 0x01, 0x0a, 0x21, 0x44, 0x65, 0x61, 0x63, 0x74, 0x69, 0x76,
	0x61, 0x74, 0x65, 0x4f, 0x66, 0x66, 0x69, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2f, 0x2e, 0x68, 0x79, 0x64,
	0x72, 0x61, 0x5f, 0x6c, 0x63, 0x70, 0x2e, 0x44, 0x65, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74,
	0x65, 0x4f, 0x66, 0x66, 0x69, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x30, 0x2e, 0x68, 0x79,
	0x64, 0x72, 0x61, 0x5f, 0x6c, 0x63, 0x70, 0x2e, 0x44, 0x65, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61,
	0x74, 0x65, 0x4f, 0x66, 0x66, 0x69, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x46, 0x0a,
	0x0e, 0x41, 0x64, 0x64, 0x4a, 0x6f, 0x62, 0x54, 0x6f, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12,
	0x1c, 0x2e, 0x68, 0x79, 0x64, 0x72, 0x61, 0x5f, 0x6c, 0x63, 0x70, 0x2e, 0x41, 0x64, 0x64, 0x4a,
	0x6f, 0x62, 0x54, 0x6f, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e,
	0x68, 0x79, 0x64, 0x72, 0x61, 0x5f, 0x6c, 0x63, 0x70, 0x2e, 0x4a, 0x6f, 0x62, 0x54, 0x6f, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x46, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x4a, 0x6f, 0x62, 0x54,
	0x6f, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x1c, 0x2e, 0x68, 0x79, 0x64, 0x72, 0x61, 0x5f,
	0x6c, 0x63, 0x70, 0x2e, 0x47, 0x65, 0x74, 0x4a, 0x6f, 0x62, 0x54, 0x6f, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x68, 0x79, 0x64, 0x72, 0x61, 0x5f, 0x6c, 0x63,
	0x70, 0x2e, 0x4a, 0x6f, 0x62, 0x54, 0x6f, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x5f, 0x0a,
	0x14, 0x53, 0x65, 0x74, 0x4a, 0x6f, 0x62, 0x54, 0x6f, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x22, 0x2e, 0x68, 0x79, 0x64, 0x72, 0x61, 0x5f, 0x6c, 0x63,
	0x70, 0x2e, 0x53, 0x65, 0x74, 0x4a, 0x6f, 0x62, 0x54, 0x6f, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x23, 0x2e, 0x68, 0x79, 0x64, 0x72,
	0x61, 0x5f, 0x6c, 0x63, 0x70, 0x2e, 0x53, 0x65, 0x74, 0x4a, 0x6f, 0x62, 0x54, 0x6f, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x53,
	0x0a, 0x10, 0x47, 0x65, 0x74, 0x4f, 0x66, 0x66, 0x69, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x41, 0x4b, 0x12, 0x1e, 0x2e, 0x68, 0x79, 0x64, 0x72, 0x61, 0x5f, 0x6c, 0x63, 0x70, 0x2e, 0x47,
	0x65, 0x74, 0x4f, 0x66, 0x66, 0x69, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x4b, 0x52,
	0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x68, 0x79, 0x64, 0x72, 0x61, 0x5f, 0x6c, 0x63, 0x70, 0x2e, 0x47,
	0x65, 0x74, 0x4f, 0x66, 0x66, 0x69, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x4b, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x50, 0x0a, 0x13, 0x53, 0x61, 0x76, 0x65, 0x4f, 0x66, 0x66, 0x69, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4d, 0x65, 0x6e, 0x75, 0x12, 0x21, 0x2e, 0x68, 0x79, 0x64,
	0x72, 0x61, 0x5f, 0x6c, 0x63, 0x70, 0x2e, 0x53, 0x61, 0x76, 0x65, 0x4f, 0x66, 0x66, 0x69, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x52, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x4f, 0x66, 0x66, 0x69,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4d, 0x65, 0x6e, 0x75, 0x12, 0x20, 0x2e, 0x68, 0x79,
	0x64, 0x72, 0x61, 0x5f, 0x6c, 0x63, 0x70, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x66, 0x66, 0x69, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e,
	0x68, 0x79, 0x64, 0x72, 0x61, 0x5f, 0x6c, 0x63, 0x70, 0x2e, 0x4f, 0x66, 0x66, 0x69, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4d, 0x65, 0x6e, 0x75, 0x12, 0x58, 0x0a, 0x17, 0x41, 0x64, 0x64,
	0x4f, 0x66, 0x66, 0x69, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x52, 0x75, 0x6c, 0x65, 0x12, 0x25, 0x2e, 0x68, 0x79, 0x64, 0x72, 0x61, 0x5f, 0x6c, 0x63, 0x70,
	0x2e, 0x41, 0x64, 0x64, 0x4f, 0x66, 0x66, 0x69, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x12, 0x61, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x4f, 0x66, 0x66, 0x69, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x75, 0x6c, 0x65, 0x12, 0x25,
	0x2e, 0x68, 0x79, 0x64, 0x72, 0x61, 0x5f, 0x6c, 0x63, 0x70, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x66,
	0x66, 0x69, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x75,
	0x6c, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x68, 0x79, 0x64, 0x72, 0x61, 0x5f, 0x6c, 0x63,
	0x70, 0x2e, 0x4f, 0x66, 0x66, 0x69, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x52, 0x75, 0x6c, 0x65, 0x12, 0x55, 0x0a, 0x1a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x4f, 0x66, 0x66, 0x69, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x52, 0x75, 0x6c, 0x65, 0x12, 0x1f, 0x2e, 0x68, 0x79, 0x64, 0x72, 0x61, 0x5f, 0x6c, 0x63, 0x70,
	0x2e, 0x4f, 0x66, 0x66, 0x69, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x52, 0x75, 0x6c, 0x65, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x74, 0x0a,
	0x1b, 0x47, 0x65, 0x74, 0x4f, 0x66, 0x66, 0x69, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x52, 0x75, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x29, 0x2e, 0x68,
	0x79, 0x64, 0x72, 0x61, 0x5f, 0x6c, 0x63, 0x70, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x66, 0x66, 0x69,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x75, 0x6c, 0x65,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x2a, 0x2e, 0x68, 0x79, 0x64, 0x72, 0x61, 0x5f,
	0x6c, 0x63, 0x70, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x66, 0x66, 0x69, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x75, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x67, 0x0a, 0x1a, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x4f, 0x66, 0x66,
	0x69, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x75, 0x6c,
	0x65, 0x12, 0x28, 0x2e, 0x68, 0x79, 0x64, 0x72, 0x61, 0x5f, 0x6c, 0x63, 0x70, 0x2e, 0x53, 0x77,
	0x69, 0x74, 0x63, 0x68, 0x4f, 0x66, 0x66, 0x69, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x68, 0x79,
	0x64, 0x72, 0x61, 0x5f, 0x6c, 0x63, 0x70, 0x2e, 0x4f, 0x66, 0x66, 0x69, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x75, 0x6c, 0x65, 0x12, 0x66, 0x0a, 0x1e,
	0x53, 0x61, 0x76, 0x65, 0x4f, 0x66, 0x66, 0x69, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53,
	0x75, 0x62, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x2c,
	0x2e, 0x68, 0x79, 0x64, 0x72, 0x61, 0x5f, 0x6c, 0x63, 0x70, 0x2e, 0x53, 0x61, 0x76, 0x65, 0x4f,
	0x66, 0x66, 0x69, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x75, 0x62, 0x47, 0x65, 0x6e,
	0x65, 0x72, 0x61, 0x6c, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x12, 0x6d, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x4f, 0x66, 0x66, 0x69, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x75, 0x62, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x2b, 0x2e, 0x68, 0x79, 0x64, 0x72, 0x61, 0x5f, 0x6c, 0x63,
	0x70, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x66, 0x66, 0x69, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x53, 0x75, 0x62, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52,
	0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x68, 0x79, 0x64, 0x72, 0x61, 0x5f, 0x6c, 0x63, 0x70, 0x2e, 0x4f,
	0x66, 0x66, 0x69, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52,
	0x75, 0x6c, 0x65, 0x12, 0x6a, 0x0a, 0x20, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x66, 0x66,
	0x69, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x75, 0x62, 0x47, 0x65, 0x6e, 0x65, 0x72,
	0x61, 0x6c, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x2e, 0x2e, 0x68, 0x79, 0x64, 0x72, 0x61, 0x5f,
	0x6c, 0x63, 0x70, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x66, 0x66, 0x69, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x75, 0x62, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12,
	0x56, 0x0a, 0x11, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x49, 0x44, 0x4d, 0x43, 0x61, 0x6c, 0x6c,
	0x62, 0x61, 0x63, 0x6b, 0x12, 0x1f, 0x2e, 0x68, 0x79, 0x64, 0x72, 0x61, 0x5f, 0x6c, 0x63, 0x70,
	0x2e, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x49, 0x44, 0x4d, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61,
	0x63, 0x6b, 0x52, 0x65, 0x71, 0x1a, 0x20, 0x2e, 0x68, 0x79, 0x64, 0x72, 0x61, 0x5f, 0x6c, 0x63,
	0x70, 0x2e, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x49, 0x44, 0x4d, 0x43, 0x61, 0x6c, 0x6c, 0x62,
	0x61, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x12, 0x44, 0x0a, 0x0b, 0x53, 0x79, 0x6e, 0x63, 0x49,
	0x44, 0x4d, 0x55, 0x73, 0x65, 0x72, 0x12, 0x19, 0x2e, 0x68, 0x79, 0x64, 0x72, 0x61, 0x5f, 0x6c,
	0x63, 0x70, 0x2e, 0x53, 0x79, 0x6e, 0x63, 0x49, 0x44, 0x4d, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x1a, 0x1a, 0x2e, 0x68, 0x79, 0x64, 0x72, 0x61, 0x5f, 0x6c, 0x63, 0x70, 0x2e, 0x53, 0x79,
	0x6e, 0x63, 0x49, 0x44, 0x4d, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x44, 0x0a,
	0x0b, 0x47, 0x65, 0x74, 0x4a, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x19, 0x2e, 0x68,
	0x79, 0x64, 0x72, 0x61, 0x5f, 0x6c, 0x63, 0x70, 0x2e, 0x47, 0x65, 0x74, 0x4a, 0x73, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x68, 0x79, 0x64, 0x72, 0x61, 0x5f,
	0x6c, 0x63, 0x70, 0x2e, 0x47, 0x65, 0x74, 0x4a, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x44, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x4a, 0x73, 0x54, 0x69, 0x63, 0x6b,
	0x65, 0x74, 0x12, 0x19, 0x2e, 0x68, 0x79, 0x64, 0x72, 0x61, 0x5f, 0x6c, 0x63, 0x70, 0x2e, 0x47,
	0x65, 0x74, 0x4a, 0x73, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e,
	0x68, 0x79, 0x64, 0x72, 0x61, 0x5f, 0x6c, 0x63, 0x70, 0x2e, 0x47, 0x65, 0x74, 0x4a, 0x73, 0x54,
	0x69, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x74, 0x0a, 0x1b, 0x53, 0x75, 0x70,
	0x65, 0x72, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f,
	0x64, 0x65, 0x46, 0x6f, 0x72, 0x4f, 0x6d, 0x73, 0x12, 0x29, 0x2e, 0x68, 0x79, 0x64, 0x72, 0x61,
	0x5f, 0x6c, 0x63, 0x70, 0x2e, 0x53, 0x75, 0x70, 0x65, 0x72, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x46, 0x6f, 0x72, 0x4f, 0x6d, 0x73,
	0x52, 0x65, 0x71, 0x1a, 0x2a, 0x2e, 0x68, 0x79, 0x64, 0x72, 0x61, 0x5f, 0x6c, 0x63, 0x70, 0x2e,
	0x53, 0x75, 0x70, 0x65, 0x72, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x43, 0x6f, 0x64, 0x65, 0x46, 0x6f, 0x72, 0x4f, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x38, 0x0a, 0x07, 0x41, 0x64, 0x64, 0x55, 0x73, 0x65, 0x72, 0x12, 0x15, 0x2e, 0x68, 0x79, 0x64,
	0x72, 0x61, 0x5f, 0x6c, 0x63, 0x70, 0x2e, 0x41, 0x64, 0x64, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x1a, 0x16, 0x2e, 0x68, 0x79, 0x64, 0x72, 0x61, 0x5f, 0x6c, 0x63, 0x70, 0x2e, 0x41, 0x64,
	0x64, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x32, 0x5b, 0x0a, 0x11, 0x4a, 0x77, 0x74,
	0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x46,
	0x0a, 0x03, 0x4e, 0x65, 0x77, 0x12, 0x1e, 0x2e, 0x68, 0x79, 0x64, 0x72, 0x61, 0x5f, 0x6c, 0x63,
	0x70, 0x2e, 0x4e, 0x65, 0x77, 0x4a, 0x77, 0x74, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x68, 0x79, 0x64, 0x72, 0x61, 0x5f, 0x6c, 0x63,
	0x70, 0x2e, 0x4e, 0x65, 0x77, 0x4a, 0x77, 0x74, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x32, 0x5a, 0x30, 0x67, 0x69, 0x74, 0x2e, 0x79, 0x75,
	0x61, 0x6e, 0x73, 0x75, 0x61, 0x6e, 0x2e, 0x63, 0x6e, 0x2f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x2d, 0x72, 0x6f, 0x6f, 0x74, 0x2d, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2f, 0x68, 0x79, 0x64, 0x72, 0x61, 0x5f, 0x6c, 0x63, 0x70, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_proto_hydra_lcp_hydra_lcp_proto_rawDescOnce sync.Once
	file_proto_hydra_lcp_hydra_lcp_proto_rawDescData = file_proto_hydra_lcp_hydra_lcp_proto_rawDesc
)

func file_proto_hydra_lcp_hydra_lcp_proto_rawDescGZIP() []byte {
	file_proto_hydra_lcp_hydra_lcp_proto_rawDescOnce.Do(func() {
		file_proto_hydra_lcp_hydra_lcp_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_hydra_lcp_hydra_lcp_proto_rawDescData)
	})
	return file_proto_hydra_lcp_hydra_lcp_proto_rawDescData
}

var file_proto_hydra_lcp_hydra_lcp_proto_msgTypes = make([]protoimpl.MessageInfo, 67)
var file_proto_hydra_lcp_hydra_lcp_proto_goTypes = []interface{}{
	(*UpdatePasswordByOldReq)(nil),                 // 0: hydra_lcp.UpdatePasswordByOldReq
	(*ResetPasswordReq)(nil),                       // 1: hydra_lcp.ResetPasswordReq
	(*GetUserInfoReq)(nil),                         // 2: hydra_lcp.GetUserInfoReq
	(*GetUserInfoBatchReq)(nil),                    // 3: hydra_lcp.GetUserInfoBatchReq
	(*UserInfoReq)(nil),                            // 4: hydra_lcp.UserInfoReq
	(*UserInfo)(nil),                               // 5: hydra_lcp.UserInfo
	(*UserInfoBatch)(nil),                          // 6: hydra_lcp.UserInfoBatch
	(*WechatInfoReq)(nil),                          // 7: hydra_lcp.WechatInfoReq
	(*UpdatePasswordReq)(nil),                      // 8: hydra_lcp.UpdatePasswordReq
	(*QueryInfoByPhoneNumberReq)(nil),              // 9: hydra_lcp.QueryInfoByPhoneNumberReq
	(*UpdatePhoneNumberReq)(nil),                   // 10: hydra_lcp.UpdatePhoneNumberReq
	(*GetExternalUserInfoReq)(nil),                 // 11: hydra_lcp.GetExternalUserInfoReq
	(*GetExternalUserInfoReply)(nil),               // 12: hydra_lcp.GetExternalUserInfoReply
	(*CheckExternalUserExistReq)(nil),              // 13: hydra_lcp.CheckExternalUserExistReq
	(*CheckExternalUserExistReply)(nil),            // 14: hydra_lcp.CheckExternalUserExistReply
	(*AddUserFromPhoneReq)(nil),                    // 15: hydra_lcp.AddUserFromPhoneReq
	(*VerifyPhoneCodeReq)(nil),                     // 16: hydra_lcp.VerifyPhoneCodeReq
	(*VerifyJwtTokenReq)(nil),                      // 17: hydra_lcp.VerifyJwtTokenReq
	(*VerifyPhoneCodeResp)(nil),                    // 18: hydra_lcp.VerifyPhoneCodeResp
	(*SendSmsReq)(nil),                             // 19: hydra_lcp.SendSmsReq
	(*SendSmsResp)(nil),                            // 20: hydra_lcp.SendSmsResp
	(*GetOffiaccountBindingReq)(nil),               // 21: hydra_lcp.GetOffiaccountBindingReq
	(*OffiaccountBinding)(nil),                     // 22: hydra_lcp.OffiaccountBinding
	(*GetOffiaccountBalanceSubListReq)(nil),        // 23: hydra_lcp.GetOffiaccountBalanceSubListReq
	(*GetOffiaccountBalanceSubListResp)(nil),       // 24: hydra_lcp.GetOffiaccountBalanceSubListResp
	(*NotificationContent)(nil),                    // 25: hydra_lcp.NotificationContent
	(*SendOffiaccountNotificationReq)(nil),         // 26: hydra_lcp.SendOffiaccountNotificationReq
	(*SendOffiaccountNotificationResp)(nil),        // 27: hydra_lcp.SendOffiaccountNotificationResp
	(*SendOffiaccountBalanceNotificationsReq)(nil), // 28: hydra_lcp.SendOffiaccountBalanceNotificationsReq
	(*SendOffiaccountVisJobNotificationReq)(nil),   // 29: hydra_lcp.SendOffiaccountVisJobNotificationReq
	(*DeactivateOffiaccountNotificationReq)(nil),   // 30: hydra_lcp.DeactivateOffiaccountNotificationReq
	(*DeactivateOffiaccountNotificationResp)(nil),  // 31: hydra_lcp.DeactivateOffiaccountNotificationResp
	(*JobToNotify)(nil),                            // 32: hydra_lcp.JobToNotify
	(*AddJobToNotifyReq)(nil),                      // 33: hydra_lcp.AddJobToNotifyReq
	(*GetJobToNotifyReq)(nil),                      // 34: hydra_lcp.GetJobToNotifyReq
	(*SetJobToNotifyStatusReq)(nil),                // 35: hydra_lcp.SetJobToNotifyStatusReq
	(*SetJobToNotifyStatusResp)(nil),               // 36: hydra_lcp.SetJobToNotifyStatusResp
	(*GetOffiaccountAKReq)(nil),                    // 37: hydra_lcp.GetOffiaccountAKReq
	(*GetOffiaccountAKResp)(nil),                   // 38: hydra_lcp.GetOffiaccountAKResp
	(*SaveOffiaccountMenuReq)(nil),                 // 39: hydra_lcp.SaveOffiaccountMenuReq
	(*OffiaccountMenu)(nil),                        // 40: hydra_lcp.OffiaccountMenu
	(*GetOffiaccountMenuReq)(nil),                  // 41: hydra_lcp.GetOffiaccountMenuReq
	(*OffiaccountReplyRule)(nil),                   // 42: hydra_lcp.OffiaccountReplyRule
	(*AddOffiaccountReplyRuleReq)(nil),             // 43: hydra_lcp.AddOffiaccountReplyRuleReq
	(*GetOffiaccountReplyRuleReq)(nil),             // 44: hydra_lcp.GetOffiaccountReplyRuleReq
	(*GetOffiaccountReplyRuleListReq)(nil),         // 45: hydra_lcp.GetOffiaccountReplyRuleListReq
	(*GetOffiaccountReplyRuleListResp)(nil),        // 46: hydra_lcp.GetOffiaccountReplyRuleListResp
	(*SwitchOffiaccountReplyRuleReq)(nil),          // 47: hydra_lcp.SwitchOffiaccountReplyRuleReq
	(*SaveOffiaccountSubGeneralReplyReq)(nil),      // 48: hydra_lcp.SaveOffiaccountSubGeneralReplyReq
	(*GetOffiaccountSubGeneralReplyReq)(nil),       // 49: hydra_lcp.GetOffiaccountSubGeneralReplyReq
	(*DeleteOffiaccountSubGeneralReplyReq)(nil),    // 50: hydra_lcp.DeleteOffiaccountSubGeneralReplyReq
	(*HandleIDMCallbackReq)(nil),                   // 51: hydra_lcp.HandleIDMCallbackReq
	(*HandleIDMCallbackResp)(nil),                  // 52: hydra_lcp.HandleIDMCallbackResp
	(*SyncIDMUserReq)(nil),                         // 53: hydra_lcp.SyncIDMUserReq
	(*SyncIDMUserResp)(nil),                        // 54: hydra_lcp.SyncIDMUserResp
	(*GetJsConfigReq)(nil),                         // 55: hydra_lcp.GetJsConfigReq
	(*GetJsConfigResp)(nil),                        // 56: hydra_lcp.GetJsConfigResp
	(*GetJsTicketReq)(nil),                         // 57: hydra_lcp.GetJsTicketReq
	(*GetJsTicketResp)(nil),                        // 58: hydra_lcp.GetJsTicketResp
	(*NewJwtSecretRequest)(nil),                    // 59: hydra_lcp.NewJwtSecretRequest
	(*NewJwtSecretResponse)(nil),                   // 60: hydra_lcp.NewJwtSecretResponse
	(*SuperVerificationCodeForOmsReq)(nil),         // 61: hydra_lcp.SuperVerificationCodeForOmsReq
	(*SuperVerificationCodeForOmsResp)(nil),        // 62: hydra_lcp.SuperVerificationCodeForOmsResp
	(*AddUserReq)(nil),                             // 63: hydra_lcp.AddUserReq
	(*AddUserResp)(nil),                            // 64: hydra_lcp.AddUserResp
	(*Page)(nil),                                   // 65: hydra_lcp.Page
	(*PageCtx)(nil),                                // 66: hydra_lcp.PageCtx
	(*timestamppb.Timestamp)(nil),                  // 67: google.protobuf.Timestamp
	(*emptypb.Empty)(nil),                          // 68: google.protobuf.Empty
}
var file_proto_hydra_lcp_hydra_lcp_proto_depIdxs = []int32{
	5,  // 0: hydra_lcp.UserInfoBatch.user_info:type_name -> hydra_lcp.UserInfo
	67, // 1: hydra_lcp.OffiaccountBinding.subscribe_time:type_name -> google.protobuf.Timestamp
	67, // 2: hydra_lcp.OffiaccountBinding.unsubscribe_time:type_name -> google.protobuf.Timestamp
	67, // 3: hydra_lcp.OffiaccountBinding.activate_time:type_name -> google.protobuf.Timestamp
	67, // 4: hydra_lcp.OffiaccountBinding.deactivate_time:type_name -> google.protobuf.Timestamp
	65, // 5: hydra_lcp.GetOffiaccountBalanceSubListReq.page:type_name -> hydra_lcp.Page
	22, // 6: hydra_lcp.GetOffiaccountBalanceSubListResp.OffiaccountBindings:type_name -> hydra_lcp.OffiaccountBinding
	66, // 7: hydra_lcp.GetOffiaccountBalanceSubListResp.page_ctx:type_name -> hydra_lcp.PageCtx
	25, // 8: hydra_lcp.SendOffiaccountNotificationReq.notification_content:type_name -> hydra_lcp.NotificationContent
	25, // 9: hydra_lcp.SendOffiaccountBalanceNotificationsReq.notification_content:type_name -> hydra_lcp.NotificationContent
	25, // 10: hydra_lcp.SendOffiaccountVisJobNotificationReq.notification_content:type_name -> hydra_lcp.NotificationContent
	67, // 11: hydra_lcp.JobToNotify.create_time:type_name -> google.protobuf.Timestamp
	67, // 12: hydra_lcp.JobToNotify.update_time:type_name -> google.protobuf.Timestamp
	67, // 13: hydra_lcp.OffiaccountMenu.create_time:type_name -> google.protobuf.Timestamp
	67, // 14: hydra_lcp.OffiaccountMenu.update_time:type_name -> google.protobuf.Timestamp
	67, // 15: hydra_lcp.OffiaccountReplyRule.create_time:type_name -> google.protobuf.Timestamp
	67, // 16: hydra_lcp.OffiaccountReplyRule.update_time:type_name -> google.protobuf.Timestamp
	65, // 17: hydra_lcp.GetOffiaccountReplyRuleListReq.page:type_name -> hydra_lcp.Page
	42, // 18: hydra_lcp.GetOffiaccountReplyRuleListResp.OffiaccountReplyRules:type_name -> hydra_lcp.OffiaccountReplyRule
	66, // 19: hydra_lcp.GetOffiaccountReplyRuleListResp.page_ctx:type_name -> hydra_lcp.PageCtx
	2,  // 20: hydra_lcp.HydraLcpService.GetUserInfo:input_type -> hydra_lcp.GetUserInfoReq
	3,  // 21: hydra_lcp.HydraLcpService.GetUserInfoBatch:input_type -> hydra_lcp.GetUserInfoBatchReq
	4,  // 22: hydra_lcp.HydraLcpService.UpdateName:input_type -> hydra_lcp.UserInfoReq
	9,  // 23: hydra_lcp.HydraLcpService.QueryInfoByPhoneNumber:input_type -> hydra_lcp.QueryInfoByPhoneNumberReq
	10, // 24: hydra_lcp.HydraLcpService.UpdatePhoneNumber:input_type -> hydra_lcp.UpdatePhoneNumberReq
	4,  // 25: hydra_lcp.HydraLcpService.UpdateEmail:input_type -> hydra_lcp.UserInfoReq
	7,  // 26: hydra_lcp.HydraLcpService.UpdateWechatInfo:input_type -> hydra_lcp.WechatInfoReq
	4,  // 27: hydra_lcp.HydraLcpService.UpdateHeadimg:input_type -> hydra_lcp.UserInfoReq
	4,  // 28: hydra_lcp.HydraLcpService.UpdateRealName:input_type -> hydra_lcp.UserInfoReq
	4,  // 29: hydra_lcp.HydraLcpService.CheckPassword:input_type -> hydra_lcp.UserInfoReq
	8,  // 30: hydra_lcp.HydraLcpService.UpdatePassword:input_type -> hydra_lcp.UpdatePasswordReq
	0,  // 31: hydra_lcp.HydraLcpService.UpdatePasswordByOld:input_type -> hydra_lcp.UpdatePasswordByOldReq
	1,  // 32: hydra_lcp.HydraLcpService.ResetPassword:input_type -> hydra_lcp.ResetPasswordReq
	11, // 33: hydra_lcp.HydraLcpService.GetExternalUserInfo:input_type -> hydra_lcp.GetExternalUserInfoReq
	13, // 34: hydra_lcp.HydraLcpService.CheckExternalUserExist:input_type -> hydra_lcp.CheckExternalUserExistReq
	15, // 35: hydra_lcp.HydraLcpService.AddUserFromPhone:input_type -> hydra_lcp.AddUserFromPhoneReq
	16, // 36: hydra_lcp.HydraLcpService.VerifyPhoneCode:input_type -> hydra_lcp.VerifyPhoneCodeReq
	17, // 37: hydra_lcp.HydraLcpService.VerifyJwtToken:input_type -> hydra_lcp.VerifyJwtTokenReq
	19, // 38: hydra_lcp.HydraLcpService.SendSms:input_type -> hydra_lcp.SendSmsReq
	21, // 39: hydra_lcp.HydraLcpService.GetOffiaccountBinding:input_type -> hydra_lcp.GetOffiaccountBindingReq
	23, // 40: hydra_lcp.HydraLcpService.GetOffiaccountBalanceSubList:input_type -> hydra_lcp.GetOffiaccountBalanceSubListReq
	26, // 41: hydra_lcp.HydraLcpService.SendOffiaccountNotification:input_type -> hydra_lcp.SendOffiaccountNotificationReq
	28, // 42: hydra_lcp.HydraLcpService.SendOffiaccountBalanceNotifications:input_type -> hydra_lcp.SendOffiaccountBalanceNotificationsReq
	29, // 43: hydra_lcp.HydraLcpService.SendOffiaccountVisJobNotification:input_type -> hydra_lcp.SendOffiaccountVisJobNotificationReq
	30, // 44: hydra_lcp.HydraLcpService.DeactivateOffiaccountNotification:input_type -> hydra_lcp.DeactivateOffiaccountNotificationReq
	33, // 45: hydra_lcp.HydraLcpService.AddJobToNotify:input_type -> hydra_lcp.AddJobToNotifyReq
	34, // 46: hydra_lcp.HydraLcpService.GetJobToNotify:input_type -> hydra_lcp.GetJobToNotifyReq
	35, // 47: hydra_lcp.HydraLcpService.SetJobToNotifyStatus:input_type -> hydra_lcp.SetJobToNotifyStatusReq
	37, // 48: hydra_lcp.HydraLcpService.GetOffiaccountAK:input_type -> hydra_lcp.GetOffiaccountAKReq
	39, // 49: hydra_lcp.HydraLcpService.SaveOffiaccountMenu:input_type -> hydra_lcp.SaveOffiaccountMenuReq
	41, // 50: hydra_lcp.HydraLcpService.GetOffiaccountMenu:input_type -> hydra_lcp.GetOffiaccountMenuReq
	43, // 51: hydra_lcp.HydraLcpService.AddOffiaccountReplyRule:input_type -> hydra_lcp.AddOffiaccountReplyRuleReq
	44, // 52: hydra_lcp.HydraLcpService.GetOffiaccountReplyRule:input_type -> hydra_lcp.GetOffiaccountReplyRuleReq
	42, // 53: hydra_lcp.HydraLcpService.UpdateOffiaccountReplyRule:input_type -> hydra_lcp.OffiaccountReplyRule
	45, // 54: hydra_lcp.HydraLcpService.GetOffiaccountReplyRuleList:input_type -> hydra_lcp.GetOffiaccountReplyRuleListReq
	47, // 55: hydra_lcp.HydraLcpService.SwitchOffiaccountReplyRule:input_type -> hydra_lcp.SwitchOffiaccountReplyRuleReq
	48, // 56: hydra_lcp.HydraLcpService.SaveOffiaccountSubGeneralReply:input_type -> hydra_lcp.SaveOffiaccountSubGeneralReplyReq
	49, // 57: hydra_lcp.HydraLcpService.GetOffiaccountSubGeneralReply:input_type -> hydra_lcp.GetOffiaccountSubGeneralReplyReq
	50, // 58: hydra_lcp.HydraLcpService.DeleteOffiaccountSubGeneralReply:input_type -> hydra_lcp.DeleteOffiaccountSubGeneralReplyReq
	51, // 59: hydra_lcp.HydraLcpService.HandleIDMCallback:input_type -> hydra_lcp.HandleIDMCallbackReq
	53, // 60: hydra_lcp.HydraLcpService.SyncIDMUser:input_type -> hydra_lcp.SyncIDMUserReq
	55, // 61: hydra_lcp.HydraLcpService.GetJsConfig:input_type -> hydra_lcp.GetJsConfigReq
	57, // 62: hydra_lcp.HydraLcpService.GetJsTicket:input_type -> hydra_lcp.GetJsTicketReq
	61, // 63: hydra_lcp.HydraLcpService.SuperVerificationCodeForOms:input_type -> hydra_lcp.SuperVerificationCodeForOmsReq
	63, // 64: hydra_lcp.HydraLcpService.AddUser:input_type -> hydra_lcp.AddUserReq
	59, // 65: hydra_lcp.JwtSecretExchange.New:input_type -> hydra_lcp.NewJwtSecretRequest
	5,  // 66: hydra_lcp.HydraLcpService.GetUserInfo:output_type -> hydra_lcp.UserInfo
	6,  // 67: hydra_lcp.HydraLcpService.GetUserInfoBatch:output_type -> hydra_lcp.UserInfoBatch
	5,  // 68: hydra_lcp.HydraLcpService.UpdateName:output_type -> hydra_lcp.UserInfo
	5,  // 69: hydra_lcp.HydraLcpService.QueryInfoByPhoneNumber:output_type -> hydra_lcp.UserInfo
	5,  // 70: hydra_lcp.HydraLcpService.UpdatePhoneNumber:output_type -> hydra_lcp.UserInfo
	5,  // 71: hydra_lcp.HydraLcpService.UpdateEmail:output_type -> hydra_lcp.UserInfo
	5,  // 72: hydra_lcp.HydraLcpService.UpdateWechatInfo:output_type -> hydra_lcp.UserInfo
	5,  // 73: hydra_lcp.HydraLcpService.UpdateHeadimg:output_type -> hydra_lcp.UserInfo
	5,  // 74: hydra_lcp.HydraLcpService.UpdateRealName:output_type -> hydra_lcp.UserInfo
	68, // 75: hydra_lcp.HydraLcpService.CheckPassword:output_type -> google.protobuf.Empty
	68, // 76: hydra_lcp.HydraLcpService.UpdatePassword:output_type -> google.protobuf.Empty
	68, // 77: hydra_lcp.HydraLcpService.UpdatePasswordByOld:output_type -> google.protobuf.Empty
	68, // 78: hydra_lcp.HydraLcpService.ResetPassword:output_type -> google.protobuf.Empty
	12, // 79: hydra_lcp.HydraLcpService.GetExternalUserInfo:output_type -> hydra_lcp.GetExternalUserInfoReply
	14, // 80: hydra_lcp.HydraLcpService.CheckExternalUserExist:output_type -> hydra_lcp.CheckExternalUserExistReply
	5,  // 81: hydra_lcp.HydraLcpService.AddUserFromPhone:output_type -> hydra_lcp.UserInfo
	18, // 82: hydra_lcp.HydraLcpService.VerifyPhoneCode:output_type -> hydra_lcp.VerifyPhoneCodeResp
	18, // 83: hydra_lcp.HydraLcpService.VerifyJwtToken:output_type -> hydra_lcp.VerifyPhoneCodeResp
	20, // 84: hydra_lcp.HydraLcpService.SendSms:output_type -> hydra_lcp.SendSmsResp
	22, // 85: hydra_lcp.HydraLcpService.GetOffiaccountBinding:output_type -> hydra_lcp.OffiaccountBinding
	24, // 86: hydra_lcp.HydraLcpService.GetOffiaccountBalanceSubList:output_type -> hydra_lcp.GetOffiaccountBalanceSubListResp
	27, // 87: hydra_lcp.HydraLcpService.SendOffiaccountNotification:output_type -> hydra_lcp.SendOffiaccountNotificationResp
	68, // 88: hydra_lcp.HydraLcpService.SendOffiaccountBalanceNotifications:output_type -> google.protobuf.Empty
	68, // 89: hydra_lcp.HydraLcpService.SendOffiaccountVisJobNotification:output_type -> google.protobuf.Empty
	31, // 90: hydra_lcp.HydraLcpService.DeactivateOffiaccountNotification:output_type -> hydra_lcp.DeactivateOffiaccountNotificationResp
	32, // 91: hydra_lcp.HydraLcpService.AddJobToNotify:output_type -> hydra_lcp.JobToNotify
	32, // 92: hydra_lcp.HydraLcpService.GetJobToNotify:output_type -> hydra_lcp.JobToNotify
	36, // 93: hydra_lcp.HydraLcpService.SetJobToNotifyStatus:output_type -> hydra_lcp.SetJobToNotifyStatusResp
	38, // 94: hydra_lcp.HydraLcpService.GetOffiaccountAK:output_type -> hydra_lcp.GetOffiaccountAKResp
	68, // 95: hydra_lcp.HydraLcpService.SaveOffiaccountMenu:output_type -> google.protobuf.Empty
	40, // 96: hydra_lcp.HydraLcpService.GetOffiaccountMenu:output_type -> hydra_lcp.OffiaccountMenu
	68, // 97: hydra_lcp.HydraLcpService.AddOffiaccountReplyRule:output_type -> google.protobuf.Empty
	42, // 98: hydra_lcp.HydraLcpService.GetOffiaccountReplyRule:output_type -> hydra_lcp.OffiaccountReplyRule
	68, // 99: hydra_lcp.HydraLcpService.UpdateOffiaccountReplyRule:output_type -> google.protobuf.Empty
	46, // 100: hydra_lcp.HydraLcpService.GetOffiaccountReplyRuleList:output_type -> hydra_lcp.GetOffiaccountReplyRuleListResp
	42, // 101: hydra_lcp.HydraLcpService.SwitchOffiaccountReplyRule:output_type -> hydra_lcp.OffiaccountReplyRule
	68, // 102: hydra_lcp.HydraLcpService.SaveOffiaccountSubGeneralReply:output_type -> google.protobuf.Empty
	42, // 103: hydra_lcp.HydraLcpService.GetOffiaccountSubGeneralReply:output_type -> hydra_lcp.OffiaccountReplyRule
	68, // 104: hydra_lcp.HydraLcpService.DeleteOffiaccountSubGeneralReply:output_type -> google.protobuf.Empty
	52, // 105: hydra_lcp.HydraLcpService.HandleIDMCallback:output_type -> hydra_lcp.HandleIDMCallbackResp
	54, // 106: hydra_lcp.HydraLcpService.SyncIDMUser:output_type -> hydra_lcp.SyncIDMUserResp
	56, // 107: hydra_lcp.HydraLcpService.GetJsConfig:output_type -> hydra_lcp.GetJsConfigResp
	58, // 108: hydra_lcp.HydraLcpService.GetJsTicket:output_type -> hydra_lcp.GetJsTicketResp
	62, // 109: hydra_lcp.HydraLcpService.SuperVerificationCodeForOms:output_type -> hydra_lcp.SuperVerificationCodeForOmsResp
	64, // 110: hydra_lcp.HydraLcpService.AddUser:output_type -> hydra_lcp.AddUserResp
	60, // 111: hydra_lcp.JwtSecretExchange.New:output_type -> hydra_lcp.NewJwtSecretResponse
	66, // [66:112] is the sub-list for method output_type
	20, // [20:66] is the sub-list for method input_type
	20, // [20:20] is the sub-list for extension type_name
	20, // [20:20] is the sub-list for extension extendee
	0,  // [0:20] is the sub-list for field type_name
}

func init() { file_proto_hydra_lcp_hydra_lcp_proto_init() }
func file_proto_hydra_lcp_hydra_lcp_proto_init() {
	if File_proto_hydra_lcp_hydra_lcp_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_hydra_lcp_hydra_lcp_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatePasswordByOldReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_hydra_lcp_hydra_lcp_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResetPasswordReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_hydra_lcp_hydra_lcp_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_hydra_lcp_hydra_lcp_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserInfoBatchReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_hydra_lcp_hydra_lcp_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_hydra_lcp_hydra_lcp_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_hydra_lcp_hydra_lcp_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserInfoBatch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_hydra_lcp_hydra_lcp_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WechatInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_hydra_lcp_hydra_lcp_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatePasswordReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_hydra_lcp_hydra_lcp_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryInfoByPhoneNumberReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_hydra_lcp_hydra_lcp_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatePhoneNumberReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_hydra_lcp_hydra_lcp_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetExternalUserInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_hydra_lcp_hydra_lcp_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetExternalUserInfoReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_hydra_lcp_hydra_lcp_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckExternalUserExistReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_hydra_lcp_hydra_lcp_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckExternalUserExistReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_hydra_lcp_hydra_lcp_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddUserFromPhoneReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_hydra_lcp_hydra_lcp_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VerifyPhoneCodeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_hydra_lcp_hydra_lcp_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VerifyJwtTokenReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_hydra_lcp_hydra_lcp_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VerifyPhoneCodeResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_hydra_lcp_hydra_lcp_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendSmsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_hydra_lcp_hydra_lcp_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendSmsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_hydra_lcp_hydra_lcp_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOffiaccountBindingReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_hydra_lcp_hydra_lcp_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OffiaccountBinding); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_hydra_lcp_hydra_lcp_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOffiaccountBalanceSubListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_hydra_lcp_hydra_lcp_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOffiaccountBalanceSubListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_hydra_lcp_hydra_lcp_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotificationContent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_hydra_lcp_hydra_lcp_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendOffiaccountNotificationReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_hydra_lcp_hydra_lcp_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendOffiaccountNotificationResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_hydra_lcp_hydra_lcp_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendOffiaccountBalanceNotificationsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_hydra_lcp_hydra_lcp_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendOffiaccountVisJobNotificationReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_hydra_lcp_hydra_lcp_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeactivateOffiaccountNotificationReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_hydra_lcp_hydra_lcp_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeactivateOffiaccountNotificationResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_hydra_lcp_hydra_lcp_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobToNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_hydra_lcp_hydra_lcp_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddJobToNotifyReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_hydra_lcp_hydra_lcp_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetJobToNotifyReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_hydra_lcp_hydra_lcp_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetJobToNotifyStatusReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_hydra_lcp_hydra_lcp_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetJobToNotifyStatusResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_hydra_lcp_hydra_lcp_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOffiaccountAKReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_hydra_lcp_hydra_lcp_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOffiaccountAKResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_hydra_lcp_hydra_lcp_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SaveOffiaccountMenuReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_hydra_lcp_hydra_lcp_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OffiaccountMenu); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_hydra_lcp_hydra_lcp_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOffiaccountMenuReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_hydra_lcp_hydra_lcp_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OffiaccountReplyRule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_hydra_lcp_hydra_lcp_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddOffiaccountReplyRuleReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_hydra_lcp_hydra_lcp_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOffiaccountReplyRuleReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_hydra_lcp_hydra_lcp_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOffiaccountReplyRuleListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_hydra_lcp_hydra_lcp_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOffiaccountReplyRuleListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_hydra_lcp_hydra_lcp_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SwitchOffiaccountReplyRuleReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_hydra_lcp_hydra_lcp_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SaveOffiaccountSubGeneralReplyReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_hydra_lcp_hydra_lcp_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOffiaccountSubGeneralReplyReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_hydra_lcp_hydra_lcp_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteOffiaccountSubGeneralReplyReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_hydra_lcp_hydra_lcp_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HandleIDMCallbackReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_hydra_lcp_hydra_lcp_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HandleIDMCallbackResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_hydra_lcp_hydra_lcp_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncIDMUserReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_hydra_lcp_hydra_lcp_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncIDMUserResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_hydra_lcp_hydra_lcp_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetJsConfigReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_hydra_lcp_hydra_lcp_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetJsConfigResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_hydra_lcp_hydra_lcp_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetJsTicketReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_hydra_lcp_hydra_lcp_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetJsTicketResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_hydra_lcp_hydra_lcp_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewJwtSecretRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_hydra_lcp_hydra_lcp_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewJwtSecretResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_hydra_lcp_hydra_lcp_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SuperVerificationCodeForOmsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_hydra_lcp_hydra_lcp_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SuperVerificationCodeForOmsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_hydra_lcp_hydra_lcp_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddUserReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_hydra_lcp_hydra_lcp_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddUserResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_hydra_lcp_hydra_lcp_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Page); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_hydra_lcp_hydra_lcp_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PageCtx); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_hydra_lcp_hydra_lcp_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   67,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_proto_hydra_lcp_hydra_lcp_proto_goTypes,
		DependencyIndexes: file_proto_hydra_lcp_hydra_lcp_proto_depIdxs,
		MessageInfos:      file_proto_hydra_lcp_hydra_lcp_proto_msgTypes,
	}.Build()
	File_proto_hydra_lcp_hydra_lcp_proto = out.File
	file_proto_hydra_lcp_hydra_lcp_proto_rawDesc = nil
	file_proto_hydra_lcp_hydra_lcp_proto_goTypes = nil
	file_proto_hydra_lcp_hydra_lcp_proto_depIdxs = nil
}
